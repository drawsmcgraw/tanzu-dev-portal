<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VMware Tanzu Developer Center – Tanzu GemFire</title>
    <link>/data/tanzu-gemfire/</link>
    <description>Recent content in Tanzu GemFire on VMware Tanzu Developer Center</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/data/tanzu-gemfire/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      
      <title>Data: Getting Started Locally</title>
      
      <link>/data/tanzu-gemfire/guides/get-started-locally-node-js/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/guides/get-started-locally-node-js/</guid>
      <description>

        
        &lt;p&gt;This guide walks you through setting up your local development environment using Apache Geode, the Tanzu GemFire node.js client, and a &lt;code&gt;Book Service&lt;/code&gt; example.&lt;/p&gt;
&lt;h2 id=&#34;what-is-apache-geode&#34;&gt;What is Apache Geode?&lt;/h2&gt;
&lt;p&gt;Tanzu GemFire, an enterprise offering, is powered by Apache Geode and adds additional enterprise functionality and integrations.  Apache Geode is the open source core of Tanzu GemFire.   This means that you can use Apache Geode on your local machine when developing and testing your Tanzu GemFire applications.&lt;/p&gt;
&lt;h2 id=&#34;install-apache-geode-for-local-development&#34;&gt;Install Apache Geode for Local Development&lt;/h2&gt;
&lt;p&gt;When developing and testing your application locally, you can use Apache Geode.&lt;/p&gt;
&lt;p&gt;There are multiple ways to install Apache Geode for local development.  We will highlight two different ways below (brew or the .zip/.tar file below), however you can find &lt;a href=&#34;https://geode.apache.org/docs/guide/13/getting_started/installation/install_standalone.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;additional installation options here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;option-1-using-brew&#34;&gt;Option 1: Using brew&lt;/h3&gt;
&lt;p&gt;In a terminal run the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;brew install apache-geode&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This will install the most recent version of Apache Geode.&lt;/p&gt;
&lt;p&gt;Then configure the Apache Geode environment variables:.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;macOS/Unix/Linux&lt;/strong&gt;
&lt;code&gt;$ export GEODE_HOME=/Users/MyGemFire $ export PATH=$GEODE_HOME/bin:$PATH&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;
&lt;code&gt;C:&amp;gt; set GEODE_HOME=c:\Users\MyGemFire C:&amp;gt; set PATH=%GEODE_HOME%\bin;%PATH%&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;option-2-download-a-zip-or-tar-file&#34;&gt;Option 2: Download a .zip or .tar file.&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download the .zip or .tar file from the &lt;a href=&#34;https://geode.apache.org/releases/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Releases page&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unzip or expand the file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure the Apache Geode environment variables:.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;macOS/Unix/Linux&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    $ export GEODE_HOME=/Users/MyGemFire
    $ export PATH=$GEODE_HOME/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    C:&amp;gt; set GEODE_HOME=c:\Users\MyGemFire
    C:&amp;gt; set PATH=%GEODE_HOME%\bin;%PATH%
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;check-your-installation&#34;&gt;Check your installation&lt;/h3&gt;
&lt;p&gt;In a terminal type&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gfsh version&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You should see something similar to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh version
1.13.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Apache Geode is now installed on your machine.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;setup-your-local-development-environment&#34;&gt;Setup Your Local Development Environment&lt;/h2&gt;
&lt;p&gt;This guide allows you to test that your local environment is set up correctly and demonstrates how Tanzu GemFire will improve the read performance of your application.&lt;/p&gt;
&lt;p&gt;This guide uses a &lt;code&gt;Book Service&lt;/code&gt; example that allows a user to look up books by ISBN or put new books into the service.&lt;/p&gt;
&lt;h3 id=&#34;what-youll-need&#34;&gt;What You&amp;rsquo;ll Need&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;https://github.com/gemfire/node-examples/tree/master/book-service&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Book Service&lt;/a&gt; example&lt;/li&gt;
&lt;li&gt;Node.js, version 10.16.3 or above&lt;/li&gt;
&lt;li&gt;The Tanzu GemFire Node.js client&lt;/li&gt;
&lt;li&gt;Apache Geode installed on your local machine.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-clone-the-book-service-example&#34;&gt;1. Clone the Book Service Example&lt;/h3&gt;
&lt;p&gt;Clone the &lt;a href=&#34;https://github.com/gemfire/node-examples&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;node examples&lt;/a&gt; from the GemFire Node Examples repository.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ git clone https://github.com/gemfire/node-examples.git&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-download-nodejs-for-tanzu-gemfire&#34;&gt;2. Download Node.js for Tanzu GemFire&lt;/h3&gt;
&lt;p&gt;To run the &lt;code&gt;Book Service&lt;/code&gt; example, you must download and install the Tanzu GemFire Node.js client library.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to the &lt;a href=&#34;https://network.pivotal.io/products/p-cloudcache/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Tanzu GemFire&lt;/a&gt; product page.&lt;/li&gt;
&lt;li&gt;In the &amp;ldquo;Releases&amp;rdquo; drop down, find and select the NodeJS-Client.&lt;/li&gt;
&lt;li&gt;Click on the file icon to download the tar file (.tgz).&lt;/li&gt;
&lt;li&gt;Once downloaded, copy it to your &lt;code&gt;Book Service&lt;/code&gt; project directory. Do not untar the tar file &amp;ndash; the npm command installs the Node.js API directly from the compressed .tgz archive.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-install-the-tanzu-gemfire-nodejs-client&#34;&gt;3. Install the Tanzu GemFire Node.js Client&lt;/h3&gt;
&lt;p&gt;In a terminal, change your working directory to &lt;code&gt;node-examples/book-service&lt;/code&gt;, and &lt;code&gt;npm install&lt;/code&gt; the Tanzu GemFire Node.js client you downloaded above, into your project directory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ npm install /project/gemfire-nodejs-client-2.0.0.tgz 
$ npm update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;4-mock-the-tas-vcap-services-binding&#34;&gt;4. Mock the TAS VCAP Services Binding&lt;/h3&gt;
&lt;p&gt;The local environment mocks the services binding that would exist for a Tanzu Application Service (TAS) environment. A TAS environment injects the services binding through a &lt;code&gt;VCAP_SERVICES&lt;/code&gt; environment variable.&lt;/p&gt;
&lt;p&gt;Set this environment variable:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mac and Linux&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;VCAP_SERVICES&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;p-cloudcache&amp;#34;:[{&amp;#34;label&amp;#34;:&amp;#34;p-cloudcache&amp;#34;,&amp;#34;provider&amp;#34;:null,&amp;#34;plan&amp;#34;:&amp;#34;dev-plan&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;pcc-dev&amp;#34;,&amp;#34;tags&amp;#34;:[&amp;#34;gemfire&amp;#34;,&amp;#34;cloudcache&amp;#34;,&amp;#34;database&amp;#34;,&amp;#34;pivotal&amp;#34;],&amp;#34;instance_name&amp;#34;:&amp;#34;pcc-dev&amp;#34;,&amp;#34;binding_name&amp;#34;:null,&amp;#34;credentials&amp;#34;:{&amp;#34;distributed_system_id&amp;#34;:&amp;#34;0&amp;#34;,&amp;#34;gfsh_login_string&amp;#34;:&amp;#34;connect --url=https://localhost:7070/gemfire/v1 --user=super-user --password=1234567 --skip-ssl-validation&amp;#34;,&amp;#34;locators&amp;#34;:[&amp;#34;localhost[10334]&amp;#34;],&amp;#34;urls&amp;#34;:{&amp;#34;gfsh&amp;#34;:&amp;#34;https://localhost:7070/gemfire/v1&amp;#34;,&amp;#34;pulse&amp;#34;:&amp;#34;https://localhost:7070/pulse&amp;#34;},&amp;#34;users&amp;#34;:[{&amp;#34;password&amp;#34;:&amp;#34;1234567&amp;#34;,&amp;#34;roles&amp;#34;:[&amp;#34;cluster_operator&amp;#34;],&amp;#34;username&amp;#34;:&amp;#34;super-user&amp;#34;},{&amp;#34;password&amp;#34;:&amp;#34;1234567&amp;#34;,&amp;#34;roles&amp;#34;:[&amp;#34;developer&amp;#34;],&amp;#34;username&amp;#34;:&amp;#34;app&amp;#34;}],&amp;#34;wan&amp;#34;:{&amp;#34;sender_credentials&amp;#34;:{&amp;#34;active&amp;#34;:{&amp;#34;password&amp;#34;:&amp;#34;no-password&amp;#34;,&amp;#34;username&amp;#34;:&amp;#34;no-user&amp;#34;}}}},&amp;#34;syslog_drain_url&amp;#34;:null,&amp;#34;volume_mounts&amp;#34;:[]}]}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;C:&amp;gt;set &lt;span class=&#34;nv&#34;&gt;VCAP_SERVICES&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;={&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;p-cloudcache&amp;#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;p-cloudcache&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;provider&amp;#34;&lt;/span&gt;:null,&lt;span class=&#34;s2&#34;&gt;&amp;#34;plan&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;dev-plan&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;pcc-dev&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;tags&amp;#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gemfire&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;cloudcache&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;database&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;pivotal&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;instance_name&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;pcc-dev&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;binding_name&amp;#34;&lt;/span&gt;:null,&lt;span class=&#34;s2&#34;&gt;&amp;#34;credentials&amp;#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;distributed_system_id&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;gfsh_login_string&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;connect --url=https://localhost:7070/gemfire/v1 --user=super-user --password=1234567 --skip-ssl-validation&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;locators&amp;#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;localhost[10334]&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;urls&amp;#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;gfsh&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;https://localhost:7070/gemfire/v1&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;pulse&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;https://localhost:7070/pulse&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;users&amp;#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;1234567&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;roles&amp;#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cluster_operator&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;super-user&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;,&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;1234567&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;roles&amp;#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;developer&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}]&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;wan&amp;#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sender_credentials&amp;#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;active&amp;#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;no-password&amp;#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&amp;#34;no-user&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}}}&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&amp;#34;syslog_drain_url&amp;#34;&lt;/span&gt;:null,&lt;span class=&#34;s2&#34;&gt;&amp;#34;volume_mounts&amp;#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[]}]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5-start-apache-geode-on-your-machine&#34;&gt;5. Start Apache Geode on your machine&lt;/h3&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Required&lt;/h4&gt;
Make sure that you have installed Apache Geode on your machine before proceeding.
&lt;/div&gt;

&lt;p&gt;There are shell scripts in the &lt;code&gt;book-service/scripts&lt;/code&gt; directory. The &lt;code&gt;startGemFire&lt;/code&gt; script starts up two locators and two cache servers. The locators allow clients to find the cache servers. To simplify local development, the script also creates the single region (analogous to a table in a relational database) that the app uses.&lt;/p&gt;
&lt;p&gt;Start the scripts in the &lt;code&gt;node-examples/book-service&lt;/code&gt; directory&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mac and Linux&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./scripts/startGemFire.sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C:&amp;gt;powershell .\scripts\startGemFire.ps1
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;6-run-the-app-locally&#34;&gt;6. Run the App Locally&lt;/h3&gt;
&lt;p&gt;With a current working directory of &lt;code&gt;node-examples/book-service&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mac and Linux&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ node src/server.js
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C:&amp;gt;node .\src\server.js
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;
&lt;h4 id=&#34;add-a-book-to-the-bookservice&#34;&gt;Add a Book to the BookService&lt;/h4&gt;
&lt;p&gt;To add a book to the data service, use a curl command:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mac and Linux&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -X PUT \
  &#39;http://localhost:8080/book/put?isbn=0525565329&#39; \
  -H &#39;Content-Type: application/json&#39; \
  -d &#39;{
  &amp;quot;FullTitle&amp;quot;: &amp;quot;The Shining&amp;quot;,
  &amp;quot;ISBN&amp;quot;: &amp;quot;0525565329&amp;quot;,
  &amp;quot;MSRP&amp;quot;: &amp;quot;9.99&amp;quot;,
  &amp;quot;Publisher&amp;quot;: &amp;quot;Anchor&amp;quot;,
  &amp;quot;Authors&amp;quot;: &amp;quot;Stephen King&amp;quot;
}&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C:&amp;gt;curl -X PUT  &amp;quot;http://localhost:8080/book/put?isbn=0525565329&amp;quot;  -H &amp;quot;Content-Type: application/json&amp;quot;  -d &amp;quot;{\&amp;quot;FullTitle\&amp;quot;: \&amp;quot;The Shining\&amp;quot;, \&amp;quot;ISBN\&amp;quot;: \&amp;quot;0525565329\&amp;quot;, \&amp;quot;MSRP\&amp;quot;: \&amp;quot;9.99\&amp;quot;, \&amp;quot;Publisher\&amp;quot;: \&amp;quot;Anchor\&amp;quot;, \&amp;quot;Authors\&amp;quot;: \&amp;quot;Stephen King\&amp;quot;}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;
&lt;h4 id=&#34;look-up-a-book&#34;&gt;Look Up a Book&lt;/h4&gt;
&lt;p&gt;To look up a book in the data service, use a curl command, specifying the ISBN as a key:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -X GET &#39;http://localhost:8080/book/get?isbn=0525565329&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;stop-the-app-and-tear-down-the-apache-geode-cluster&#34;&gt;Stop the App and Tear Down the Apache Geode Cluster&lt;/h2&gt;
&lt;p&gt;When finished running the example locally, shut down the client and server processes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In the shell running &lt;code&gt;node&lt;/code&gt;, use &lt;code&gt;control-C&lt;/code&gt; to stop running the app.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a script to tear down the Apache Geode cluster. With a current working directory of &lt;code&gt;node-examples/book-service&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mac and Linux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ ./scripts/shutdownGemFire.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;C:&amp;gt;powershell .\scripts\shutdownGemFire.ps1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a script to remove the directories and files containing GemFire logs created for the cluster. With a current working directory of &lt;code&gt;node-examples/book-service&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mac and Linux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ ./scripts/clearGemFireData.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;C:&amp;gt;powershell .\scripts\clearGemFire.ps1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unset the &lt;code&gt;VCAP_SERVICES&lt;/code&gt; environment variable to avoid interference with running other examples that would reference this environment variable if it continues to exist.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mac and Linux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ unset VCAP_SERVICES&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;C:&amp;gt;set VCAP_SERVICES=&amp;quot;&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Congratulations! Your local environment is set up and ready to develop with.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;learn-more&#34;&gt;Learn More&lt;/h2&gt;
&lt;p&gt;Now that you have successfully set up your local development environment, check out some other guides&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set up your &lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-tgf4vms-node-js&#34;&gt;Tanzu GemFire service instance&lt;/a&gt; on the Tanzu Application Service.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Node.js - CRUD-ops</title>
      
      <link>/data/tanzu-gemfire/code-samples/crud-ops/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/code-samples/crud-ops/</guid>
      <description>

        
        &lt;p&gt;This Node.js example provides a simple JavaScript application that demonstrates basic CRUD operations (create, read, update, delete) on a local Tanzu GemFire cluster. This app also can be run with a local Apache Geode cluster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Getting Started Locally</title>
      
      <link>/data/tanzu-gemfire/guides/get-started-locally-sbdg/</link>
      <pubDate>Wed, 07 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/guides/get-started-locally-sbdg/</guid>
      <description>

        
        &lt;p&gt;This guide walks you through setting up your local development environment using Apache Geode and a &lt;em&gt;Hello, World!&lt;/em&gt; client application.&lt;/p&gt;
&lt;h2 id=&#34;what-is-apache-geode&#34;&gt;What is Apache Geode?&lt;/h2&gt;
&lt;p&gt;Tanzu GemFire, an enterprise offering, is powered by Apache Geode and adds additional enterprise functionality and integrations.  Apache Geode is the open source core of Tanzu GemFire.   This means that you can use Apache Geode on your local machine when developing and testing your Tanzu GemFire applications.&lt;/p&gt;
&lt;h2 id=&#34;install-apache-geode-for-local-development&#34;&gt;Install Apache Geode for Local Development&lt;/h2&gt;
&lt;p&gt;There are multiple ways to install Apache Geode for local development.  We will highlight two different ways below (brew or a .zip/.tar file), however you can find &lt;a href=&#34;https://geode.apache.org/docs/guide/13/getting_started/installation/install_standalone.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;additional installation options here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;option-1-using-brew&#34;&gt;Option 1: Using brew&lt;/h3&gt;
&lt;p&gt;In a terminal run the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;brew install apache-geode&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This will install the most recent version of Apache Geode.&lt;/p&gt;
&lt;h3 id=&#34;option-2-download-a-zip-or-tar-file&#34;&gt;Option 2: Download a .zip or .tar file.&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download the .zip or .tar file from the &lt;a href=&#34;https://geode.apache.org/releases/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Releases page&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unzip or expand the file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the Geode bin directory to your PATH environment variable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;macOS/Unix/Linux&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PATH=$PATH:$JAVA_HOME/bin:path_to_product/bin
export PATH
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;
&lt;code&gt;set PATH=%PATH%;%JAVA_HOME%\bin;path_to_product\bin&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;check-your-installation&#34;&gt;Check your installation&lt;/h3&gt;
&lt;p&gt;In a terminal type&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gfsh version&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You should see something similar to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh version
1.13.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Apache Geode is now installed on your machine.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;set-up-your-local-environment&#34;&gt;Set Up Your Local Environment&lt;/h2&gt;
&lt;p&gt;This section will guide you through testing a &lt;em&gt;Hello, World!&lt;/em&gt; client app on your local machine to confirm that your local environment is set up correctly.&lt;/p&gt;
&lt;h3 id=&#34;what-youll-need&#34;&gt;What You&amp;rsquo;ll Need&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;https://github.com/gemfire/spring-for-apache-geode-examples/tree/main/hello-world&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Hello, World!&lt;/a&gt; example.&lt;/li&gt;
&lt;li&gt;JDK 8 or 11&lt;/li&gt;
&lt;li&gt;Spring Boot 2.1 or above&lt;/li&gt;
&lt;li&gt;Spring Boot for Apache Geode&lt;/li&gt;
&lt;li&gt;Apache Geode installed on your local machine.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-download-the-hello-world-example&#34;&gt;1. Download the Hello, World! Example&lt;/h3&gt;
&lt;p&gt;Clone the &lt;em&gt;Hello, World!&lt;/em&gt; app from the Tanzu GemFire &lt;a href=&#34;https://github.com/gemfire/spring-for-apache-geode-examples&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;examples repo&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/gemfire/spring-for-apache-geode-examples.git
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-start-an-apache-geode-cluster&#34;&gt;2. Start an Apache Geode Cluster&lt;/h3&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Required&lt;/h4&gt;
Make sure that you have installed Apache Geode on your machine before proceeding.
&lt;/div&gt;

&lt;p&gt;This will start a small local cluster for the &lt;em&gt;Hello, World!&lt;/em&gt; app to connect.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In a terminal start the Geode Shell (gfsh)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start a &lt;strong&gt;locator&lt;/strong&gt;.  Locators provide both discovery and load balancing services.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;start locator --name=hello-world-locator
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start a server.  Servers are primarily used to store data in &lt;strong&gt;regions&lt;/strong&gt; (similar to a table in a relational database.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;start server --name=hello-world-server
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once those commands have finished you can run the &lt;code&gt;list members&lt;/code&gt; command and you should see something similar to&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Member Count : 2

       Name         | Id
------------------- | ---------------------------------------------------------------------------
hello-world-locator | 192.168.1.14(hello-world-locator:33323:locator)&amp;lt;ec&amp;gt;&amp;lt;v0&amp;gt;:41000 [Coordinator]
hello-world-server  | 192.168.1.14(hello-world-server:33423)&amp;lt;v1&amp;gt;:41001
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-build-and-run-the-app&#34;&gt;3. Build and Run the App&lt;/h3&gt;
&lt;p&gt;In a different terminal, navigate to the working directory of &lt;code&gt;spring-for-apache-geode-examples/hello-world&lt;/code&gt;, and build the application&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew build
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;then run the application&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew bootRun
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;We are running a Gradle task so you will most likely see the executing progress bar stop around 75% when the app is up and running.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Now that the application has started, open a browser and go to &lt;strong&gt;(http://localhost:8080)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;You should see something similar to the below, which represents an artificial time delay simulating a database query.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;key: hello&lt;/p&gt;
&lt;p&gt;value: 2019-10-01T16:17:51.557 (this will be your current date &amp;amp; time)&lt;/p&gt;
&lt;p&gt;time to look up: 3057ms (quantity of time that it took to acquire the key-value pair).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Refresh the page&lt;/strong&gt; and you should see something similar to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;key: hello&lt;/p&gt;
&lt;p&gt;value: 2019-10-01T16:17:51.557 (this will be your current date &amp;amp; time)&lt;/p&gt;
&lt;p&gt;time to look up: 6ms (quantity of time that it took to acquire the key-value pair).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Note that the &lt;em&gt;&lt;strong&gt;time to look up&lt;/strong&gt;&lt;/em&gt; has been significantly reduced. This represents the app getting the information from the cache (Apache Geode), instead of querying the database.&lt;/p&gt;
&lt;p&gt;To confirm that your app is connected to your local cluster, in your &lt;strong&gt;gfsh&lt;/strong&gt; terminal run the following commands&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;List the regions&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;list regions
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should see something similar to this, which shows that a region with the name &lt;em&gt;Hello&lt;/em&gt; was created.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;List of regions
---------------
Hello
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Confirm the web page timestamp has the same value as that stored in your &lt;em&gt;Hello&lt;/em&gt; region. Run the &lt;em&gt;gfsh&lt;/em&gt; command&lt;/p&gt;
&lt;p&gt;&lt;code&gt;get --key hello --region=/Hello&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You should see something similar to this, where the &amp;ldquo;Value&amp;rdquo; listed in your terminal should match the &amp;ldquo;value&amp;rdquo; shown on the web page.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Response from the gfsh command&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Result      : true
Key Class   : java.lang.String
Key         : hello
Value Class : java.lang.String
Value       : &amp;quot;2020-12-08T13:46:47.322&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Shown on the Page&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;key: hello
value: 2020-12-08T13:46:47.322
time to look up: 2ms
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-stop-the-app-and-tear-down-the-apache-geode-cluster&#34;&gt;4. Stop the App and Tear Down the Apache Geode Cluster&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Stop the *Hello, World! app.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then shutdown the Apache Geode cluster - this will stop the locator and server, and delete any data you may have in the cluster.&lt;/p&gt;
&lt;p&gt;In your gfsh terminal run the following command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;shutdown --include-locators=true
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Exit gfsh by typing &lt;code&gt;exit&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Congratulations! Your local environment is set up and ready to develop with.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;learn-more&#34;&gt;Learn More&lt;/h2&gt;
&lt;p&gt;Now that you have successfully set up your local development environment, check out some other guides&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Set up your &lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-tgf4vms-sbdg/&#34;&gt;Tanzu GemFire service instance&lt;/a&gt; on the Tanzu Application Service.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up &lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-tgf4k8s-sbdg/&#34;&gt;Tanzu GemFire for Kubernetes&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can get started by implementing the &lt;a href=&#34;/data/tanzu-gemfire/guides/cache-aside-pattern-sbdg&#34;&gt;cache-aside pattern&lt;/a&gt; which will improve the read performance of your application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create an application that utilizes Spring Boot for Apache Geode and Spring Session for &lt;a href=&#34;/data/tanzu-gemfire/guides/session-state-cache-sbdg&#34;&gt;session state caching&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Spring for Apache Geode</title>
      
      <link>/data/tanzu-gemfire/guides/spring-for-apache-geode/</link>
      <pubDate>Wed, 07 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/guides/spring-for-apache-geode/</guid>
      <description>

        
        &lt;p&gt;Utilizing the auto-configuration of Spring Boot with Tanzu GemFire/Apache Geode.  The &lt;a href=&#34;https://docs.spring.io/spring-boot-data-geode-build/current/reference/html5/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Boot for Apache Geode documentation&lt;/a&gt; further discusses the details of many of these topics.&lt;/p&gt;
&lt;h2 id=&#34;version-compatibility&#34;&gt;Version Compatibility&lt;/h2&gt;
&lt;p&gt;The best way to determine the correct version of Spring Boot for Apache Geode for your project, is to use &lt;a href=&#34;https://start.spring.io/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;start.spring.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After selecting your project settings, click on &amp;lsquo;Add Dependencies&amp;rsquo;. Search for &amp;lsquo;Geode&amp;rsquo; and add it to your project. Then select either ‘Generate’ which create a zip file to import into your IDE or ‘Explore’ which will open a build file based on your Project selection (Maven or Gradle)&lt;/p&gt;
&lt;p&gt;You can also refer to the &lt;a href=&#34;https://github.com/spring-projects/spring-boot-data-geode/wiki/Spring-Boot-for-Apache-Geode-and-Pivotal-GemFire-Version-Compatibility-Matrix#version-compatibility-matrix&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Boot for Apache Geode compatibility matrix&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;guides&#34;&gt;Guides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-locally-sbdg/&#34;&gt;Getting Started Locally&lt;/a&gt;: A guide to help get your local development environment up and running.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-tgf4vms-sbdg/&#34;&gt;Getting Started with Tanzu GemFire on TAS&lt;/a&gt;: A guide to help set up a Tanzu GemFire for VMs service instance on the Tanzu Application Service.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-tgf4k8s-sbdg/&#34;&gt;Getting Started with Tanzu GemFire for Kubernetes&lt;/a&gt;: A guide to help set up a  Tanzu GemFire instance on Kubernetes.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/data/tanzu-gemfire/guides/cache-aside-pattern-sbdg&#34;&gt;Cache-Aside Pattern&lt;/a&gt;: Use the Cache Aside pattern with your Spring Boot application to improve your applications performance.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/data/tanzu-gemfire/guides/session-state-cache-sbdg&#34;&gt;Session State Caching&lt;/a&gt;: This guide walks you through how to implement a session state cache using Tanzu GemFire, Spring Boot for Apache Geode, and Spring Session.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Getting Started with Tanzu GemFire on TAS</title>
      
      <link>/data/tanzu-gemfire/guides/get-started-tgf4vms-node-js/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/guides/get-started-tgf4vms-node-js/</guid>
      <description>

        
        &lt;p&gt;This guide walks you through creating a Tanzu GemFire service instance on the Tanzu Application Service using the &lt;code&gt;Book Service&lt;/code&gt; example to confirm that it is working.&lt;/p&gt;
&lt;h2 id=&#34;create-a-tanzu-gemfire-service-instance&#34;&gt;Create A Tanzu GemFire Service Instance&lt;/h2&gt;
&lt;h3 id=&#34;option-1-create-the-service-instance-using-the-cf-cli&#34;&gt;Option 1: Create the service instance using the cf CLI&lt;/h3&gt;
&lt;p&gt;Starting in a terminal&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;cf login&lt;/code&gt;, and create or target your organization’s space.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;cf marketplace -s p-cloudcache&lt;/code&gt; to list your available VMware Tanzu GemFire plans. Take note of the &lt;code&gt;service plan&lt;/code&gt; as this will be your &lt;code&gt;&amp;lt;PLAN-NAME&amp;gt;&lt;/code&gt; in the following step. Note that Tanzu GemFire was previously called Pivotal Cloud Cache).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a Tanzu GemFire service instance within the space with the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cf create-service p-cloudcache &amp;lt;PLAN-NAME&amp;gt; &amp;lt;SERVICE-INSTANCE-NAME&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;&amp;lt;PLAN-NAME&amp;gt;&lt;/code&gt; with one the plan names from step 2.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;&amp;lt;SERVICE-INSTANCE-NAME&amp;gt;&lt;/code&gt; with your own custom name for your service instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;SERVICE-INSTANCE-NAME&amp;gt;&lt;/code&gt; can include alpha-numeric characters, hyphens, and underscores. This is also the name you will use in your &lt;code&gt;manifest.yml&lt;/code&gt; to bind your client application to the service instance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If successful you will see&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Create in progress. Use &#39;cf services&#39; or &#39;cf service &amp;lt;your-service-name&amp;gt;&#39; to check operation status.&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Confirm the Tanzu GemFire service instance has been created by running&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ cf services&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This command outputs the current status of the service instance creation.  In the &lt;strong&gt;last operation&lt;/strong&gt; column you will either see &lt;code&gt;create in progress&lt;/code&gt; if it is still be created or &lt;code&gt;create succeeded&lt;/code&gt; when it is ready to be used.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It can take several minutes for the service instance creation to complete.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;option-2-create-the-service-instance-using-tanzu-application-service-apps-manager&#34;&gt;Option 2: Create the service instance using Tanzu Application Service apps manager&lt;/h3&gt;
&lt;p&gt; &lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Apps Manger&lt;/h4&gt;
&lt;a href=&#34;https://docs.run.pivotal.io/console/dev-console.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apps Manager&lt;/a&gt; is a user interface that must be turned on by the operator of the foundation.
&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Within your org, create a space or navigate to the space that will hold your Tanzu GemFire service instance.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Click on the &lt;strong&gt;Services&lt;/strong&gt; tab.
&lt;img src=&#34;/images/guides/data/tanzu-gemfire/get-started-tgf4vms-node-js/Service_Tab_in_Apps_Manager.png&#34; alt=&#34;Services Link in Apps Manager&#34;  /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Click on the &lt;strong&gt;ADD A SERVICE&lt;/strong&gt; button.
&lt;img src=&#34;/images/guides/data/tanzu-gemfire/get-started-tgf4vms-node-js/add_a_service_button.png&#34; alt=&#34;Add A Service Button in Apps Manager&#34;  /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Click on &lt;em&gt;&lt;strong&gt;Tanzu GemFire&lt;/strong&gt;&lt;/em&gt;.
&lt;img src=&#34;/images/guides/data/tanzu-gemfire/get-started-tgf4vms-node-js/tanzu_gemfire_apps_manager.png&#34; alt=&#34;Click on Tanzu GemFire in Apps Manager&#34;  /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Choose one of the available plans and click &lt;em&gt;&lt;strong&gt;SELECT PLAN&lt;/strong&gt;&lt;/em&gt;.
&lt;img src=&#34;/images/guides/data/tanzu-gemfire/get-started-tgf4vms-node-js/select_a_plan.png&#34; alt=&#34;Select A Plan in Apps Manager&#34;  /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;
&lt;p&gt;Fill in the &lt;strong&gt;Instance Name&lt;/strong&gt; with a custom name for your service instance. The service instance name can include alpha-numeric characters, hyphens, and underscores. This is the name you will use in your &lt;code&gt;manifest.yml&lt;/code&gt;.  (Alternatively, if you have already pushed your application to your space can select it in the &amp;ldquo;Bind to App&amp;rdquo; dropdown - however we prefer to bind our applications through a &lt;code&gt;manifest.yml&lt;/code&gt; file)&lt;/p&gt;
&lt;p&gt;Click &lt;strong&gt;CREATE&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/data/tanzu-gemfire/get-started-tgf4vms-node-js/click_CREATE_button.png&#34; alt=&#34;Click CREATE in Apps Manager&#34;  /&gt;&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;
&lt;p&gt;After clicking create you will see Tanzu GemFire service instance provisioning begin and in the &lt;strong&gt;Last Operation&lt;/strong&gt; column it will say &lt;code&gt;create in progress&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/data/tanzu-gemfire/get-started-tgf4vms-node-js/create_in_progress.png&#34; alt=&#34;Create in progress in Apps Manager&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It can take several minutes for the service instance creation to complete.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;
&lt;p&gt;Once complete you will see &lt;code&gt;create succeeded&lt;/code&gt; under the &lt;strong&gt;Last Operation&lt;/strong&gt; column (you may need to refresh the page for the status to update).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/data/tanzu-gemfire/get-started-tgf4vms-node-js/create_succeeded.png&#34; alt=&#34;Create succeeded in Apps Manager&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;set-up-your-tanzu-application-service-environment&#34;&gt;Set Up Your Tanzu Application Service Environment&lt;/h2&gt;
&lt;p&gt;This section will guide you through testing a &lt;code&gt;Book Service&lt;/code&gt; client application on the Tanzu Application Service to confirm that your Tanzu GemFire service instance and node.js client are set up correctly.&lt;/p&gt;
&lt;h3 id=&#34;what-youll-need&#34;&gt;What You&amp;rsquo;ll Need**&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;https://github.com/gemfire/node-examples/tree/master/book-service&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Book Service&lt;/a&gt; example&lt;/li&gt;
&lt;li&gt;Node.js, version 10.16.3 or above&lt;/li&gt;
&lt;li&gt;The Tanzu GemFire Node.js client&lt;/li&gt;
&lt;li&gt;A running Tanzu GemFire service instance on the Tanzu Application Service&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-clone-the-book-service-example&#34;&gt;1. Clone the Book Service Example&lt;/h3&gt;
&lt;p&gt;Clone the &lt;a href=&#34;https://github.com/gemfire/node-examples&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;node examples&lt;/a&gt; from the GemFire Node Examples repository.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ git clone https://github.com/gemfire/node-examples.git&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-download-nodejs-for-tanzu-gemfire&#34;&gt;2. Download Node.js for Tanzu GemFire&lt;/h3&gt;
&lt;p&gt;To run the &lt;code&gt;Book Service&lt;/code&gt; example, you must download and install the Tanzu GemFire Node.js client library.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to the &lt;a href=&#34;https://network.pivotal.io/products/p-cloudcache/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Tanzu GemFire&lt;/a&gt; product page.&lt;/li&gt;
&lt;li&gt;In the &amp;ldquo;Releases&amp;rdquo; drop down, find and select the NodeJS-Client.&lt;/li&gt;
&lt;li&gt;Click on the file icon to download the tar file (.tgz.).&lt;/li&gt;
&lt;li&gt;Once downloaded, copy it to your &lt;code&gt;Book Service&lt;/code&gt; project directory. Do not untar the tar file &amp;ndash; the npm command installs the Node.js API directly from the compressed .tgz archive.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-install-the-tanzu-gemfire-nodejs-client&#34;&gt;3. Install the Tanzu GemFire Node.js Client&lt;/h3&gt;
&lt;p&gt;In a terminal, change your working directory to &lt;code&gt;node-examples/book-service&lt;/code&gt;, and &lt;code&gt;npm install&lt;/code&gt; the Tanzu GemFire Node.js client you downloaded above, into your project directory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ npm install /project/gemfire-nodejs-client-2.0.0.tgz 
$ npm update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;4-create-a-tanzu-gemfire-service-key&#34;&gt;4. Create a Tanzu GemFire Service Key&lt;/h3&gt;
&lt;p&gt;In order to connect to your Tanzu GemFire service instance and create the needed regions, you must first create a service key.&lt;/p&gt;
&lt;p&gt;In a terminal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;cf login&lt;/code&gt;, and create or target your organization’s space where your Tanzu GemFire service instance is running.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a service key&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ cf create-service-key [YOUR-SERVICE INSTANCE-NAME] [SERVICE-NAME-service-key]&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Output the service key:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ cf service-key [YOUR-SERVICE INSTANCE-NAME] [SERVICE-NAME-service-key]&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy the gfsh connect command labeled as &lt;code&gt;gfsh_login_string&lt;/code&gt;. It will look something like this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;connect --url=https://TAS-name.cf-app.com/gemfire/v1 --user=cluster_operator_XXX --password=YYY --skip-ssl-validation&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-create-the-region-used-by-the-book-service&#34;&gt;5. Create the Region Used by the Book Service&lt;/h3&gt;
&lt;p&gt;Start the Tanzu GemFire CLI by typing &lt;code&gt;gfsh&lt;/code&gt; in your terminal.&lt;/p&gt;
&lt;p&gt;With &lt;code&gt;gfsh&lt;/code&gt; running, Use the connect string from above to connect to the Tanzu GemFire service instance. Use the &lt;code&gt;return&lt;/code&gt; key when prompted for the keystore and truststore values (in this example you don&amp;rsquo;t need to enter any information in them).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt;connect --url=https://TAS-name.cf-app.com/gemfire/v1 --user=cluster_operator_BhKM --password=xucZ --skip-ssl-validation
 key-store:
 key-store-password:
 key-store-type(default: JKS):
 trust-store:
 trust-store-password:
 trust-store-type(default: JKS):
 ssl-ciphers(default: any):
 ssl-protocols(default: any):
 ssl-enabled-components(default: all):
 Successfully connected to: GemFire Manager HTTP service @ https://TAS-name.cf-app.com/gemfire/v1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once connected, create the region that the Book Service expects to find.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt;create region --name=test --type=PARTITION
                 Member                      | Status | Message
    ---------------------------------------- | ------ | ------------------------------------------------
    cacheserver-a75d6fcc                     | OK     | Region &amp;quot;/test&amp;quot; created on &amp;quot;cacheserver-a75d6fcc&amp;quot;

    Cluster configuration for group &#39;cluster&#39; is updated.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Type &lt;code&gt;exit&lt;/code&gt; to quit GFSH.&lt;/p&gt;
&lt;h3 id=&#34;6-edit-the-manifestyaml-file&#34;&gt;6. Edit the &lt;code&gt;manifest.yaml&lt;/code&gt; File&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to the project root directory.&lt;/li&gt;
&lt;li&gt;Open the &lt;code&gt;manifest.yml file&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;PCC-TLS&lt;/code&gt; with the name of your Tanzu GemFire service instance. If you&amp;rsquo;re not sure of the instance name, run the &lt;code&gt;cf services&lt;/code&gt; command.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-push-your-application-to-tas&#34;&gt;7. Push your application to TAS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;In a terminal, navigate to the project root directory.&lt;/li&gt;
&lt;li&gt;Push the application to your TAS environment using &lt;code&gt;cf push&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;cf push&lt;/code&gt; operation will bind the &lt;em&gt;Book Service&lt;/em&gt; app to the Tanzu GemFire service instance named in your &lt;code&gt;manifest.yaml&lt;/code&gt; file  and then start the app.&lt;/p&gt;
&lt;h3 id=&#34;8--interact-with-the-book-service&#34;&gt;8.  Interact with the Book Service&lt;/h3&gt;
&lt;p&gt;Once the BookService app is running, you can now add and look-up books.&lt;/p&gt;
&lt;h4 id=&#34;add-a-book&#34;&gt;Add a Book&lt;/h4&gt;
&lt;p&gt;To add a book to the data service, use a curl command similar to the one used when running with a local cluster, specifying the app route assigned in the &lt;code&gt;cf push&lt;/code&gt; step.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mac and Linux&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -X PUT \
  &#39;https://TAS-name.cf-app.com/book/put?isbn=0525565329&#39; \
  -H &#39;Content-Type: application/json&#39; \
  -d &#39;{
  &amp;quot;FullTitle&amp;quot;: &amp;quot;The Shining&amp;quot;,
  &amp;quot;ISBN&amp;quot;: &amp;quot;0525565329&amp;quot;,
  &amp;quot;MSRP&amp;quot;: &amp;quot;9.99&amp;quot;,
  &amp;quot;Publisher&amp;quot;: &amp;quot;Anchor&amp;quot;,
  &amp;quot;Authors&amp;quot;: &amp;quot;Stephen King&amp;quot;
}&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl -X PUT &amp;quot;https://cloudcache-node-sample.apps.tas-name.cf-app.com/book/put?isbn=0525565329&amp;quot; -H &amp;quot;Content-Type: application/json&amp;quot; -d &amp;quot;{\&amp;quot;FullTitle\&amp;quot;: \&amp;quot;The Shining\&amp;quot;, \&amp;quot;ISBN\&amp;quot;: \&amp;quot;0525565329\&amp;quot;, \&amp;quot;MSRP\&amp;quot;: \&amp;quot;9.99\&amp;quot;, \&amp;quot;Publisher\&amp;quot;: \&amp;quot;Anchor\&amp;quot;, \&amp;quot;Authors\&amp;quot;: \&amp;quot;Stephen King\&amp;quot;}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The curl command responds with a confirmation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`{&amp;quot;initialized&amp;quot;:true}`
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;look-up-a-book&#34;&gt;Look Up a Book&lt;/h4&gt;
&lt;p&gt;To look up a book in the data service, use a curl command similar to the one used when running with a local cluster, specifying the ISBN as a key:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`$ curl -X GET \&#39;https://cloudcache-node-sample.apps.tas-name.cf-app.com/book/get?isbn=0525565329&#39;`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The curl command responds with the requested data:
&lt;code&gt;{&amp;quot;FullTitle&amp;quot;:&amp;quot;The Shining&amp;quot;,&amp;quot;ISBN&amp;quot;:&amp;quot;0525565329&amp;quot;,&amp;quot;MSRP&amp;quot;:&amp;quot;9.99&amp;quot;,&amp;quot;Publisher&amp;quot;:&amp;quot;Anchor&amp;quot;,&amp;quot;Authors&amp;quot;:&amp;quot;Stephen King&amp;quot;}&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;delete-the-app-and-the-service-instance&#34;&gt;Delete the app and the Service Instance&lt;/h2&gt;
&lt;p&gt;There are two ways to delete the app and the Tanzu GemFire service instance&lt;/p&gt;
&lt;h3 id=&#34;option-1-delete-the-app-and-service-using-the-cf-cli&#34;&gt;Option 1: Delete the app and service using the cf cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Stop the running app&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cf stop cloudcache-node-sample&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Delete the app and it&amp;rsquo;s route&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cf delete cloudcache-node-sample -r -f&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the Tanzu GemFire service instance is no longer needed, delete the service&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cf delete-service &amp;lt;YOUR SERVICE NAME&amp;gt;
Really delete the service &amp;lt;YOUR SERVICE NAME&amp;gt;?&amp;gt; y
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;option-2-delete-the-app-and-service-using-apps-manager&#34;&gt;Option 2: Delete the app and service using Apps Manager&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Navigate to the org and space that has your Tanzu GemFire service instance and click on the &lt;em&gt;&lt;strong&gt;App&lt;/strong&gt;&lt;/em&gt; tab.&lt;/li&gt;
&lt;li&gt;Click on the name of the app.&lt;/li&gt;
&lt;li&gt;Click on the &lt;em&gt;&lt;strong&gt;Settings&lt;/strong&gt;&lt;/em&gt; tab.&lt;/li&gt;
&lt;li&gt;Click on &lt;em&gt;&lt;strong&gt;DELETE APP&lt;/strong&gt;&lt;/em&gt; (at the bottom of the page), and confirm that you want to delete the app.&lt;/li&gt;
&lt;li&gt;Click on the &lt;em&gt;&lt;strong&gt;Service&lt;/strong&gt;&lt;/em&gt; tab.&lt;/li&gt;
&lt;li&gt;Click on the name of your service instance.&lt;/li&gt;
&lt;li&gt;Click on the &lt;em&gt;&lt;strong&gt;Settings&lt;/strong&gt;&lt;/em&gt; tab.&lt;/li&gt;
&lt;li&gt;Click on the &lt;em&gt;&lt;strong&gt;DELETE SERVICE INSTANCE&lt;/strong&gt;&lt;/em&gt; button, and confirm the deletion.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Congratulations! You’re ready to start using Tanzu GemFire. You will need to create a new Tanzu GemFire Service Instance when working with your own application.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Node.js</title>
      
      <link>/data/tanzu-gemfire/guides/node-js/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/guides/node-js/</guid>
      <description>

        
        &lt;p&gt;Many developers use Node.js to build scalable network applications, leveraging its asynchronous, event-driven JavaScript runtime. In order to respond to REST requests from remote Web apps, the Node.js apps often need access to information kept in a datastore.&lt;/p&gt;
&lt;p&gt;Using VMware Tanzu GemFire for storing and accessing data can dramatically improve both the performance and resilience of your Node.js apps. Tanzu GemFire is an in-memory, NoSQL, key-value distributed datastore powered by Apache Geode. It delivers high-concurrency, low-latency data access for your applications while also maintaining internal data consistency.&amp;quot;&lt;/p&gt;
&lt;h2 id=&#34;guides&#34;&gt;Guides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-locally-node-js/&#34;&gt;Getting Started Locally&lt;/a&gt;: A guide to help get your local development environment up and running.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-tgf4vms-node-js/&#34;&gt;Getting Started with Tanzu GemFire on TAS&lt;/a&gt;: A guide to help set up a Tanzu GemFire for VMs service instance on the Tanzu Application Service.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Node.js - Put All</title>
      
      <link>/data/tanzu-gemfire/code-samples/put-all/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/code-samples/put-all/</guid>
      <description>

        
        &lt;p&gt;This Node.js example provides a simple JavaScript application that demonstrates basic &lt;code&gt;putAll&lt;/code&gt; and &lt;code&gt;getAll&lt;/code&gt; operations on Tanzu GemFire cluster. This application leverages the CRUD-ops example, which you should review prior starting. This example client works with either a local Apache Geode cluster or with a Tanzu GemFire cluster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Spring - Convert Redis HTTP Session State to Tanzu GemFire</title>
      
      <link>/data/tanzu-gemfire/code-samples/convert-redis-to-gemfire-session/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/code-samples/convert-redis-to-gemfire-session/</guid>
      <description>

        
        &lt;p&gt;This repo contains examples of converting Spring Session Data Redis applications to use Spring Boot for Apache Geode to store HTTP session state data.   Each example app has its own README, and resides in its own directory within this repository:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;spring-session-boot&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;spring-session-boot-json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;spring-session-boot-simple&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Getting Started with Tanzu GemFire on TAS</title>
      
      <link>/data/tanzu-gemfire/guides/get-started-tgf4vms-sbdg/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/guides/get-started-tgf4vms-sbdg/</guid>
      <description>

        
        &lt;p&gt;This guide will walk you through creating and testing a Tanzu GemFire service instance on the Tanzu Application Service (TAS) using a &lt;code&gt;Hello, World!&lt;/code&gt; client application.&lt;/p&gt;
&lt;h2 id=&#34;create-a-tanzu-gemfire-service-instance&#34;&gt;Create A Tanzu GemFire Service Instance&lt;/h2&gt;
&lt;h3 id=&#34;option-1-create-the-service-instance-using-the-cf-cli&#34;&gt;Option 1: Create the service instance using the cf CLI&lt;/h3&gt;
&lt;p&gt;Starting in a terminal&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;cf login&lt;/code&gt;, and create or target your organization’s space.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;cf marketplace -s p-cloudcache&lt;/code&gt; to list your available VMware Tanzu GemFire plans. Take note of the &lt;code&gt;service plan&lt;/code&gt; as this will be your &lt;code&gt;&amp;lt;PLAN-NAME&amp;gt;&lt;/code&gt; in the following step. Note that Tanzu GemFire was previously called Pivotal Cloud Cache).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a Tanzu GemFire service instance within the space with the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cf create-service p-cloudcache &amp;lt;PLAN-NAME&amp;gt; &amp;lt;SERVICE-INSTANCE-NAME&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;&amp;lt;PLAN-NAME&amp;gt;&lt;/code&gt; with one the plan names from step 2.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;&amp;lt;SERVICE-INSTANCE-NAME&amp;gt;&lt;/code&gt; with your own custom name for your service instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;SERVICE-INSTANCE-NAME&amp;gt;&lt;/code&gt; can include alpha-numeric characters, hyphens, and underscores. This is also the name you will use in your &lt;code&gt;manifest.yml&lt;/code&gt; to bind your client application to the service instance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If successful you will see&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Create in progress. Use &#39;cf services&#39; or &#39;cf service &amp;lt;your-service-name&amp;gt;&#39; to check operation status.&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Confirm the Tanzu GemFire service instance has been created by running&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ cf services&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This command outputs the current status of the service instance creation.  In the &lt;strong&gt;last operation&lt;/strong&gt; column you will either see &lt;code&gt;create in progress&lt;/code&gt; if it is still be created or &lt;code&gt;create succeeded&lt;/code&gt; when it is ready to be used.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It can take several minutes for the service instance creation to complete.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;option-2-create-the-service-instance-using-tanzu-application-service-apps-manager&#34;&gt;Option 2: Create the service instance using Tanzu Application Service apps manager&lt;/h3&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Apps Manger&lt;/h4&gt;
&lt;a href=&#34;https://docs.run.pivotal.io/console/dev-console.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apps Manager&lt;/a&gt; is a user interface that must be turned on by the operator of the foundation.
&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Within your org, create a space or navigate to the space that will hold your Tanzu GemFire service instance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;strong&gt;Services&lt;/strong&gt; tab.
&lt;img src=&#34;/images/guides/data/tanzu-gemfire/get-started-tgf4vms-sbdg/Service_Tab_in_Apps_Manager.png&#34; alt=&#34;Services Link in Apps Manager&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;strong&gt;ADD A SERVICE&lt;/strong&gt; button.
&lt;img src=&#34;/images/guides/data/tanzu-gemfire/get-started-tgf4vms-sbdg/add_a_service_button.png&#34; alt=&#34;Add A Service Button in Apps Manager&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;em&gt;&lt;strong&gt;Tanzu GemFire&lt;/strong&gt;&lt;/em&gt;.
&lt;img src=&#34;/images/guides/data/tanzu-gemfire/get-started-tgf4vms-sbdg/tanzu_gemfire_apps_manager.png&#34; alt=&#34;Click on Tanzu GemFire in Apps Manager&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose one of the available plans and click &lt;em&gt;&lt;strong&gt;SELECT PLAN&lt;/strong&gt;&lt;/em&gt;.
&lt;img src=&#34;/images/guides/data/tanzu-gemfire/get-started-tgf4vms-sbdg/select_a_plan.png&#34; alt=&#34;Select A Plan in Apps Manager&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fill in the &lt;strong&gt;Instance Name&lt;/strong&gt; with a custom name for your service instance. The service instance name can include alpha-numeric characters, hyphens, and underscores. This is the name you will use in your &lt;code&gt;manifest.yml&lt;/code&gt;.  (Alternatively, if you have already pushed your application to your space can select it in the &amp;ldquo;Bind to App&amp;rdquo; dropdown - however we prefer to bind our applications through a &lt;code&gt;manifest.yml&lt;/code&gt; file)&lt;/p&gt;
&lt;p&gt;Click &lt;strong&gt;CREATE&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/data/tanzu-gemfire/get-started-tgf4vms-sbdg/click_CREATE_button.png&#34; alt=&#34;Click CREATE in Apps Manager&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After clicking create you will see Tanzu GemFire service instance provisioning begin and in the &lt;strong&gt;Last Operation&lt;/strong&gt; column it will say &lt;code&gt;create in progress&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/data/tanzu-gemfire/get-started-tgf4vms-sbdg/create_in_progress.png&#34; alt=&#34;Create in progress in Apps Manager&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;It can take several minutes for the service instance creation to complete.&lt;/strong&gt;&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;
&lt;p&gt;Once complete you will see &lt;code&gt;create succeeded&lt;/code&gt; under the &lt;strong&gt;Last Operation&lt;/strong&gt; column (you may need to refresh the page for the status to update).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/data/tanzu-gemfire/get-started-tgf4vms-sbdg/create_succeeded.png&#34; alt=&#34;Create succeeded in Apps Manager&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;set-up-your-tanzu-application-service-environment&#34;&gt;Set Up Your Tanzu Application Service Environment&lt;/h2&gt;
&lt;p&gt;This section will guide you through testing a &lt;code&gt;Hello, World!&lt;/code&gt; client application on the Tanzu Application Service to confirm that your Tanzu GemFire service instance is set up correctly.&lt;/p&gt;
&lt;h3 id=&#34;what-youll-need&#34;&gt;What You&amp;rsquo;ll Need&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;https://github.com/gemfire/spring-for-apache-geode-examples/tree/main/hello-world&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Hello, World!&lt;/a&gt; example.&lt;/li&gt;
&lt;li&gt;JDK 8 or 11&lt;/li&gt;
&lt;li&gt;Spring Boot 2.1 or above&lt;/li&gt;
&lt;li&gt;Spring Boot for Apache Geode&lt;/li&gt;
&lt;li&gt;A running Tanzu GemFire service instance on TAS&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-download-the-hello-world-example&#34;&gt;1. Download the Hello, World! Example&lt;/h3&gt;
&lt;p&gt;Clone the Hello, World! app from the &lt;a href=&#34;https://github.com/gemfire/spring-for-apache-geode-examples&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;examples repo&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/gemfire/spring-for-apache-geode-examples.git
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-edit-the-manifestyaml-file&#34;&gt;2. Edit the &lt;code&gt;manifest.yaml&lt;/code&gt; File&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to the &lt;code&gt;spring-for-apache-geode-examples/hello-world&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;Open the &lt;code&gt;manifest.yml file&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Replace the string &lt;code&gt;&amp;lt;your-tanzu-gemfire-service&amp;gt;&lt;/code&gt; with the name of your Tanzu GemFire service instance. If you&amp;rsquo;re not sure of the instance name, run the &lt;code&gt;cf services&lt;/code&gt; command.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-push-your-application-to-tas&#34;&gt;3. Push your application to TAS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;In a terminal, navigate to the &lt;code&gt;hello-world&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;Build the application with &lt;code&gt;./gradlew build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Push the application to your TAS environment using &lt;code&gt;cf push&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;cf push&lt;/code&gt; operation will bind the Hello,World! app to the Tanzu GemFire service instance named in your &lt;code&gt;manifest.yaml&lt;/code&gt; file  and then start the app.&lt;/p&gt;
&lt;p&gt;When the app is up and running, the &lt;code&gt;cf push&lt;/code&gt; command should output information about the app in the terminal.  One the fields listed will be the &lt;code&gt;route&lt;/code&gt;.  In a browser copy and paste the &lt;code&gt;[route from cf push]/hello&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You should see something similar to the below, which represents an artificial time delay simulating a database query.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;key: hello&lt;/p&gt;
&lt;p&gt;value: 2019-10-01T16:17:51.557 (this will be your current date &amp;amp; time)&lt;/p&gt;
&lt;p&gt;time to look up: 3057ms (quantity of time that it took to acquire the key-value pair).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Refresh the page&lt;/strong&gt; and you should see something similar to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;key: hello&lt;/p&gt;
&lt;p&gt;value: 2019-10-01T16:17:51.557 (this will be your current date &amp;amp; time)&lt;/p&gt;
&lt;p&gt;time to look up: 6ms (quantity of time that it took to acquire the key-value pair).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Note that the &lt;em&gt;&lt;strong&gt;time to look up&lt;/strong&gt;&lt;/em&gt; has been significantly reduced. This represents the app getting the information from the cache, Tanzu GemFire, instead of querying the database.&lt;/p&gt;
&lt;h2 id=&#34;delete-the-app-and-the-service-instance&#34;&gt;Delete the app and the Service Instance&lt;/h2&gt;
&lt;p&gt;There are two ways to delete the app and the Tanzu GemFire service instance&lt;/p&gt;
&lt;h3 id=&#34;option-1-delete-the-app-and-service-using-the-cf-cli&#34;&gt;Option 1: Delete the app and service using the cf cli&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Delete the app first, so that the Tanzu GemFire service instance does not have any app bound to it with &lt;code&gt;cf delete helloworld -r -f&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Delete the service by running the &lt;code&gt;cf delete-service &amp;lt;SERVICE-INSTANCE-NAME&amp;gt;&lt;/code&gt; command. Make sure to replace &lt;code&gt;&amp;lt;SERVICE-INSTANCE-NAME&amp;gt;&lt;/code&gt; with the name of your service instance.&lt;/li&gt;
&lt;li&gt;Answer &lt;em&gt;yes&lt;/em&gt; when prompted&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;option-2-delete-the-app-and-service-using-apps-manager&#34;&gt;Option 2: Delete the app and service using Apps Manager&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Navigate to the org and space that has your Tanzu GemFire service instance and click on the &lt;em&gt;&lt;strong&gt;App&lt;/strong&gt;&lt;/em&gt; tab.&lt;/li&gt;
&lt;li&gt;Click on the name of the app.&lt;/li&gt;
&lt;li&gt;Click on the &lt;em&gt;&lt;strong&gt;Settings&lt;/strong&gt;&lt;/em&gt; tab.&lt;/li&gt;
&lt;li&gt;Click on &lt;em&gt;&lt;strong&gt;DELETE APP&lt;/strong&gt;&lt;/em&gt; (at the bottom of the page), and confirm that you want to delete the app.&lt;/li&gt;
&lt;li&gt;Click on the &lt;em&gt;&lt;strong&gt;Service&lt;/strong&gt;&lt;/em&gt; tab.&lt;/li&gt;
&lt;li&gt;Click on the name of your service instance.&lt;/li&gt;
&lt;li&gt;Click on the &lt;em&gt;&lt;strong&gt;Settings&lt;/strong&gt;&lt;/em&gt; tab.&lt;/li&gt;
&lt;li&gt;Click on the &lt;em&gt;&lt;strong&gt;DELETE SERVICE INSTANCE&lt;/strong&gt;&lt;/em&gt; button, and confirm the deletion.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Congratulations! You’re ready to start using Tanzu GemFire. You will need to create a new Tanzu GemFire Service Instance when working with your own application.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;learn-more&#34;&gt;Learn More&lt;/h2&gt;
&lt;p&gt;Now that you have successfully created a running Tanzu GemFire service instance, check out some other guides.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can get started by implementing the &lt;a href=&#34;/data/tanzu-gemfire/guides/cache-aside-pattern-sbdg&#34;&gt;cache-aside pattern&lt;/a&gt; which will improve the read performance of your application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create an application that utilizes Spring Boot for Apache Geode and Spring Session for &lt;a href=&#34;/data/tanzu-gemfire/guides/session-state-cache-sbdg&#34;&gt;session state caching&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Node.js - SSL</title>
      
      <link>/data/tanzu-gemfire/code-samples/ssl/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/code-samples/ssl/</guid>
      <description>

        
        &lt;p&gt;This Node.js example demonstrates basic SSL connection of a client with a GemFire Cache cluster. This application leverages the CRUD-ops example, which should be reviewed prior starting. The example works with either a local Apache Geode or Tanzu GemFire cluster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Getting Started with Tanzu GemFire for Kubernetes</title>
      
      <link>/data/tanzu-gemfire/guides/get-started-tgf4k8s-sbdg/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/guides/get-started-tgf4k8s-sbdg/</guid>
      <description>

        
        &lt;p&gt;This guide walks you through creating and testing a Tanzu GemFire cluster on Kubernetes using a &lt;em&gt;Hello, World!&lt;/em&gt; client application.&lt;/p&gt;
&lt;h2 id=&#34;before-you-start&#34;&gt;Before you start!&lt;/h2&gt;
&lt;p&gt;This guide assumes that the &lt;a href=&#34;http://docs-tgf-staging.cfapps.io/tgf/1-0/install.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Tanzu GemFire Operator&lt;/a&gt; has been installed in your Kubernetes cluster.&lt;/p&gt;
&lt;p&gt;In order to create a GemFire cluster, you will need a &lt;a href=&#34;https://network.pivotal.io/products/tanzu-gemfire-for-kubernetes/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Tanzu Net&lt;/a&gt; account, in order to pull the image from the registry.&lt;/p&gt;
&lt;p&gt;You will also need permission to use &lt;code&gt;kubectl&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;create-a-tanzu-gemfire-cluster&#34;&gt;Create A Tanzu GemFire Cluster&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Verify that you are in the Kubernetes cluster you want to use for Tanzu GemFire&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl config current-context
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a namespace for the Tanzu GemFire cluster (We use the creative &lt;em&gt;namespace&lt;/em&gt; name of &lt;code&gt;tanzu-gemfire&lt;/code&gt; for this example)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl create namespace tanzu-gemfire
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create an image pull secret that will be used to pull down the Tanzu GemFire images needed to create the cluster&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl create secret docker-registry image-pull-secret --namespace=tanzu-gemfire --docker-server=registry.pivotal.io --docker-username=&#39;TANZU NET USERNAME&#39; --docker-password=&#39;TANZU NET PASSWD&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with the name of your namespace, if different.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;TANZU NET USERNAME&lt;/code&gt; with your Tanzu Net Username&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;TANZU NET PASSWD&lt;/code&gt; with your Tanzu Net Password&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create your Tanzu GemFire CRD file.&lt;/p&gt;
&lt;p&gt;Below is a simple yaml file that will create a Tanzu GemFire cluster named &lt;code&gt;hello-world-gemfire-cluster&lt;/code&gt; with 1 &lt;a href=&#34;https://geode.apache.org/docs/guide/13/configuring/running/running_the_locator.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;locator&lt;/a&gt; and 2 &lt;a href=&#34;https://geode.apache.org/docs/guide/13/configuring/running/running_the_cacheserver.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;servers&lt;/a&gt;. Save this as a YAML file in your current working directory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;gemfire.tanzu.vmware.com/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GemFireCluster&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hello-world-gemfire-cluster&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;registry.pivotal.io/tanzu-gemfire-for-kubernetes/gemfire-k8s:1.0.0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;For the full list of GemFire CRD configuration options and explanations check out the Tanzu GemFire &lt;a href=&#34;http://docs-tgf-staging.cfapps.io/tgf/1-0/crd.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Customer Resource Definition template&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;
&lt;p&gt;Apply your Tanzu GemFire CRD YAML from &lt;em&gt;Step 4&lt;/em&gt; to create the Tanzu GemFire cluster&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl --namespace=tanzu-gemfire apply -f CLUSTER-CRD-YAML
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with the name of your namespace, if it&amp;rsquo;s different.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;CLUSTER-CRD-YAML&lt;/code&gt; with the name of the yaml file you created.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If successful you should see in your terminal&lt;/p&gt;
&lt;p&gt;&lt;code&gt; gemfirecluster.gemfire.tanzu.vmware.com/hello-world-gemfire-cluster created&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Confirm that Tanzu GemFire is up and ready to use&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl --namespace=tanzu-gemfire get GemFireClusters
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with the name of your namespace, if it&amp;rsquo;s different.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When the cluster is ready to use the output should look similar to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NAME                          LOCATORS   SERVERS
hello-world-gemfire-cluster   1/1        2/2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Where the &lt;code&gt;NAME&lt;/code&gt; will be the value you have for the &lt;code&gt;name&lt;/code&gt; entry in your CRD file from &lt;em&gt;Step 4&lt;/em&gt; .&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;run-a-spring-boot-for-apache-geode-app-on-kubernetes&#34;&gt;Run a Spring Boot for Apache Geode app on Kubernetes&lt;/h2&gt;
&lt;p&gt;This section will guide you through testing a &lt;em&gt;Hello, World!&lt;/em&gt; client application, that utilizes Spring Boot for Apache Geode.&lt;/p&gt;
&lt;h3 id=&#34;what-youll-need&#34;&gt;What You&amp;rsquo;ll Need&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;https://github.com/gemfire/spring-for-apache-geode-examples/tree/main/hello-world&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Hello, World!&lt;/a&gt; example.&lt;/li&gt;
&lt;li&gt;JDK 8 or 11&lt;/li&gt;
&lt;li&gt;Spring Boot 2.3 or above&lt;/li&gt;
&lt;li&gt;Spring Boot for Apache Geode 1.3 or above&lt;/li&gt;
&lt;li&gt;A running Tanzu GemFire cluster on Kubernetes&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/get-docker/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Docker&lt;/a&gt; installed&lt;/li&gt;
&lt;li&gt;An image repository for the &lt;code&gt;Hello, World!&lt;/code&gt; example.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-download-the-hello-world-example&#34;&gt;1. Download the Hello, World! Example&lt;/h3&gt;
&lt;p&gt;Clone the Hello, World! app from the &lt;a href=&#34;https://github.com/gemfire/spring-for-apache-geode-examples&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;examples repo&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/gemfire/spring-for-apache-geode-examples.git
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-edit-the-applicationproperties-file&#34;&gt;2. Edit the &lt;code&gt;application.properties&lt;/code&gt; File&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Navigate to the &lt;code&gt;spring-for-apache-geode-examples/hello-world&lt;/code&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the &lt;code&gt;application.properties&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Uncomment the two listed properties.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Replace the value for &lt;code&gt;spring.data.gemfire.pool.locators:&lt;/code&gt; with your Tanzu GemFire cluster information, for each locator (in this example we only have one locator).  The information will follow the form:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[GEMFIRE-CLUSTER-NAME]-locator-[LOCATOR-NUMBER].[GEMFIRE-CLUSTER-NAME]-locator.[NAMESPACE-NAME][10334]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For our example the value looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;spring.data.gemfire.pool.locators: hello-world-gemfire-cluster-locator-0.hello-world-gemfire-cluster-locator.tanzu-gemfire[10334]
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Replace the value for &lt;code&gt;spring.data.gemfire.management.http.host:&lt;/code&gt; with your Tanzu GemFire cluster information.  This will allow Spring Boot for Apache Geode to push your &lt;a href=&#34;https://docs.spring.io/autorepo/docs/spring-boot-data-geode-build/current/reference/html5/#geode-configuration-declarative-annotations-productivity-enableclusteraware&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;initial cluster configuration&lt;/a&gt; to GemFire.  The information follows a similar form as above:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[GEMFIRE-CLUSTER-NAME]-locator-[LOCATOR-NUMBER].[GEMFIRE-CLUSTER-NAME]-locator.[NAMESPACE-NAME][GEMFIRE LOCATOR PORT]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For our example the value looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; spring.data.gemfire.management.http.host: hello-world-gemfire-cluster-locator-0.hello-world-gemfire-cluster-locator.tanzu-gemfire
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-build-a-docker-image-with-gradle-or-maven&#34;&gt;3. Build a Docker Image with Gradle or Maven&lt;/h3&gt;
&lt;p&gt;Starting with Spring Boot 2.3, you can now customize and create an OCI image using Spring Boot. In this example we&amp;rsquo;re using the &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/#build-image&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Gradle - packaging OCI images option&lt;/a&gt;.  If you are using Maven check out the instructions found &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#build-image&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In a terminal, navigate to the &lt;code&gt;hello-world&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;Build the application with &lt;code&gt;./gradlew clean build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open the &lt;code&gt;build.gradle&lt;/code&gt; file and update the &lt;code&gt;bootBuildImage&lt;/code&gt; section, with your Docker repository information. This will build an image with the name &lt;code&gt;docker.io/[docker username]/hello-world:0.0.1-SNAPSHOT&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Build the image with &lt;code&gt;./gradlew bootBuildImage&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-push-your-docker-image-to-docker-hub&#34;&gt;4. Push your Docker Image to Docker Hub&lt;/h3&gt;
&lt;p&gt;For this example, we&amp;rsquo;re using Docker Hub as our registry. This will create a repository on Docker Hub called &lt;code&gt;hello-world&lt;/code&gt; and push the image we created into that repository.&lt;/p&gt;
&lt;p&gt;In a terminal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Login to your Docker account&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the &lt;code&gt;docker push [IMAGE NAME HERE]&lt;/code&gt;.  For this example it should be similar to this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker push docker.io/[YOUR DOCKER USERNAME]/hello-world:0.0.1-SNAPSHOT
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-create-a-deployment-in-your-kubernetes-cluster&#34;&gt;5. Create a deployment in your Kubernetes cluster&lt;/h3&gt;
&lt;p&gt;Create a Kubernetes deployment for your &lt;em&gt;Hello, World!&lt;/em&gt; app. This will create a deployment, replicaset, and pod using the hello-world image we created above.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  kubectl --namespace=tanzu-gemfire create deployment hello-world-deployment --image=docker.io/[YOUR DOCKER USERNAME]/hello-world:0.0.1-SNAPSHOT
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If successful you should see &lt;code&gt;deployment.apps/hello-world-deployment created&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;6-create-a-loadbalancer-to-access-the-app&#34;&gt;6. Create a LoadBalancer to access the app&lt;/h3&gt;
&lt;p&gt;In order to access &lt;code&gt;Hello, World!&lt;/code&gt; app from a browser, we need to expose the deployment.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl --namespace=tanzu-gemfire expose deployment/hello-world-deployment --type=&amp;quot;LoadBalancer&amp;quot; --port=80 --target-port=8080
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;If you&amp;rsquo;re trying this locally with MiniKube, you will need to replace &lt;code&gt;LoadBalancer&lt;/code&gt; with &lt;code&gt;NodePort&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;7--access-the-hello-world-application&#34;&gt;7.  Access the Hello, World! Application&lt;/h3&gt;
&lt;p&gt;Once the Load Balancer has been created, you can now access the &lt;em&gt;Hello, World!&lt;/em&gt; application using the &lt;code&gt;External IP&lt;/code&gt; on the LoadBalancer service.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl -n tanzu-gemfire get services
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This should output something similar to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NAME                                  TYPE           CLUSTER-IP     EXTERNAL-IP    PORT(S)              AGE
hello-world-deployment                LoadBalancer   10.0.227.199   20.62.226.18   80:31350/TCP         57s
hello-world-gemfire-cluster-locator   ClusterIP      None           &amp;lt;none&amp;gt;         10334/TCP,4321/TCP   132m
hello-world-gemfire-cluster-server    ClusterIP      None           &amp;lt;none&amp;gt;         40404/TCP,4321/TCP   131m
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In your browser, go to the &lt;code&gt;EXTERNAL-IP&lt;/code&gt; of the &lt;code&gt;hello-world-deployment&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You should see something similar to this, which represents an artificial time delay simulating a database query.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;key: hello&lt;/p&gt;
&lt;p&gt;value: 2019-10-01T16:17:51.557 (this will be your current date &amp;amp; time)&lt;/p&gt;
&lt;p&gt;time to look up: 3057ms (quantity of time that it took to acquire the key-value pair).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Refresh the page&lt;/strong&gt; and you should see something similar to&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;key: hello&lt;/p&gt;
&lt;p&gt;value: 2019-10-01T16:17:51.557 (this will be your current date &amp;amp; time)&lt;/p&gt;
&lt;p&gt;time to look up: 6ms (quantity of time that it took to acquire the key-value pair).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Note that the &lt;em&gt;&lt;strong&gt;time to look up&lt;/strong&gt;&lt;/em&gt; has been significantly reduced. This represents the app getting the information from the cache, Tanzu GemFire, instead of querying the database.&lt;/p&gt;
&lt;h3 id=&#34;8--confirm-that-the-hello-world-app-is-connected&#34;&gt;8.  Confirm that the Hello, World! App is connected&lt;/h3&gt;
&lt;p&gt;If you would like to confirm that your Bike Incident app is actually connected to your Tanzu GemFire cluster you can connect through the Tanzu GemFire / Apache Geode shell - commonly referred to as &lt;em&gt;gfsh&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In a terminal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Start gfsh for kubernetes&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl -n tanzu-gemfire exec -it GEMFIRE-CLUSTER-NAME-locator-0 -- gfsh
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with the name of your namespace, if it&amp;rsquo;s different.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;GEMFIRE-CLUSTER-NAME&lt;/code&gt; with the name of your Tanzu GemFire cluster.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once you see that &lt;code&gt;GFSH&lt;/code&gt; has started, connect to your cluster with the &lt;code&gt;connect&lt;/code&gt; command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt; connect
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once connected run the &lt;code&gt;list regions&lt;/code&gt; command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt; list regions
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You should see something similar to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  List of regions
  ------------------
  Hello
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Confirm the web page timestamp has the same value as that stored in your &lt;em&gt;Hello&lt;/em&gt; region. Run the &lt;em&gt;gfsh&lt;/em&gt; command&lt;/p&gt;
&lt;p&gt;&lt;code&gt;get --key hello --region=/Hello&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You should see something similar to this, where the &amp;ldquo;Value&amp;rdquo; listed in your terminal should match the &amp;ldquo;value&amp;rdquo; shown on the web page.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Response from the gfsh command&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; Result      : true
 Key Class   : java.lang.String
 Key         : hello
 Value Class : java.lang.String
 Value       : &amp;quot;2020-12-08T13:46:47.322&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Shown on the Webpage&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; key: hello
 value: 2020-12-08T13:46:47.322
 time to look up: 2ms
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Congratulations! You’re ready to start using Tanzu GemFire.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;delete-the-hello-world-app&#34;&gt;Delete the Hello, World! app&lt;/h2&gt;
&lt;p&gt;To delete the &lt;em&gt;Hello, World!&lt;/em&gt; app you will need to delete the deployment and the service.&lt;/p&gt;
&lt;p&gt;This will remove the &lt;em&gt;Hello, World!&lt;/em&gt; deployment, replicaset, and pod.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl -n tanzu-gemfire delete deployment hello-world-deployment
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will remove the &lt;em&gt;Hello, World!&lt;/em&gt; service.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl -n tanzu-gemfire delete service hello-world-deployment
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;delete-the-tanzu-gemfire-cluster&#34;&gt;Delete the Tanzu GemFire Cluster&lt;/h2&gt;
&lt;p&gt;If you need to delete your Tanzu GemFire cluster, first remove the cluster&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl -n tanzu-gemfire delete GemFireCluster hello-world-gemfire-cluster
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with your namespace if different.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;hello-world-gemfire-cluster&lt;/code&gt; with the name of your GemFire instance if different.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When the Tanzu GemFire cluster has been completely deleted, remove the persistent volume claims of the Kubernetes cluster. These are disk claims that Kubernetes makes on the underlying system.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; kubectl -n tanzu-gemfire get persistentvolumeclaims
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with your namespace if different.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then delete each persistent volume claim listed.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; kubectl -n tanzu-gemfire delete persistentvolumeclaim PVC_NAME_1 PVC_NAME_2 PVC_NAME_3 ...
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with your namespace if different.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;PVC_NAME_1 PVC_NAME_2 PVC_NAME_3&lt;/code&gt; with each persistent volume claim listed.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;learn-more&#34;&gt;Learn More&lt;/h2&gt;
&lt;p&gt;Now that you have successfully created a running Tanzu GemFire cluster on Kubernetes, check out some other guides.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can get started by implementing the &lt;a href=&#34;/data/tanzu-gemfire/guides/cache-aside-pattern-sbdg&#34;&gt;cache-aside pattern&lt;/a&gt; which will improve the read performance of your application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create an application that utilizes Spring Boot for Apache Geode and Spring Session for &lt;a href=&#34;/data/tanzu-gemfire/guides/session-state-cache-sbdg&#34;&gt;session state caching&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Cache-Aside Pattern</title>
      
      <link>/data/tanzu-gemfire/guides/cache-aside-pattern-sbdg/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/guides/cache-aside-pattern-sbdg/</guid>
      <description>

        
        &lt;p&gt;This guide walks you through how to implement the cache-aside pattern to your Spring Boot application using VMware Tanzu GemFire and &lt;a href=&#34;https://docs.spring.io/spring-boot-data-geode-build/current/reference/html5/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Boot for Apache Geode&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;when-should-i-use-the-cache-aside-pattern&#34;&gt;When should I use the cache-aside pattern?&lt;/h2&gt;
&lt;p&gt;The cache-aside pattern is a great candidate for data that doesn&amp;rsquo;t change often and is frequently read. Some examples include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Front page for a website&lt;/li&gt;
&lt;li&gt;Healthcare policies, procedure codes, providers, and coverage.&lt;/li&gt;
&lt;li&gt;Promotional campaign information&lt;/li&gt;
&lt;li&gt;Product Catalog&lt;/li&gt;
&lt;li&gt;User profiles&lt;/li&gt;
&lt;li&gt;Movie listings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;how-does-the-cache-aside-pattern-work&#34;&gt;How does the cache-aside pattern work?&lt;/h2&gt;
&lt;p&gt;With the cache-aside pattern, the application will request data from the cache. If the data &lt;strong&gt;IS NOT&lt;/strong&gt; in the cache (&lt;strong&gt;cache miss&lt;/strong&gt;), the application will request the data from the data store. Once the application receives the data, it will write that data to the cache (&lt;strong&gt;cache write&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/data/tanzu-gemfire/cache-aside-sbdg/diagrams/CacheMissAndWrite.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;If the data &lt;strong&gt;IS&lt;/strong&gt; in the cache (&lt;strong&gt;cache hit&lt;/strong&gt;), your application will receive the requested data without needing to access the data store.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/data/tanzu-gemfire/cache-aside-sbdg/diagrams/CacheHit.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-youll-need&#34;&gt;What you&amp;rsquo;ll need&lt;/h2&gt;
&lt;p&gt;To complete this guide you need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;https://github.com/gemfire/spring-for-apache-geode-examples/tree/main/cache-aside&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Cache-Aside Cache example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Your favorite text editor or IDE&lt;/li&gt;
&lt;li&gt;JDK 8 or 11&lt;/li&gt;
&lt;li&gt;A Spring Boot application (using 2.3 or greater)&lt;/li&gt;
&lt;li&gt;The Spring Boot for Apache Geode dependency.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;If running on the Tanzu Application Service for VMs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-tgf4vms-sbdg/&#34;&gt;Tanzu GemFire service instance&lt;/a&gt; on the Tanzu Application Service.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;If running on Kubernetes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A &lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-tgf4k8s-sbdg/&#34;&gt;Tanzu GemFire Cluster&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For this example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Our &lt;strong&gt;namespace&lt;/strong&gt; is &lt;code&gt;tanzu-gemfire&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Our &lt;strong&gt;GemFire cluster&lt;/strong&gt; is &lt;code&gt;cache-aside-gemfire-cluster&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/get-docker/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Docker&lt;/a&gt; installed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An image repository for the Cache-Aside Example (we used Docker Hub).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;where-do-we-begin&#34;&gt;Where do we begin?&lt;/h2&gt;
&lt;p&gt;This example begins with a Spring Boot application that is making a call to an external data source (in this case, the free &lt;a href=&#34;https://www.bikewise.org/documentation/api_v2&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Bikewise API&lt;/a&gt;), using a ZIP code as the search term. By implementing the cache-aside pattern you will speed up subsequent searches of that ZIP code.&lt;/p&gt;
&lt;p&gt;In your application the external data source may be a call to a database, a different API, or another microservice.&lt;/p&gt;
&lt;p&gt;You can download the complete application from the &lt;a href=&#34;https://github.com/gemfire/spring-for-apache-geode-examples&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Tanzu GemFire examples&lt;/a&gt; GitHub repository.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/gemfire/spring-for-apache-geode-examples.git
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;add-the-spring-boot-for-apache-geode-dependency&#34;&gt;Add the Spring Boot for Apache Geode Dependency&lt;/h3&gt;
&lt;p&gt;To allow the application to work with Tanzu GemFire and utilize the Spring Boot for Apache Geode dependency, add the following dependency information (for this example we have used Gradle)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gradle&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span class=&#34;n&#34;&gt;ext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;springGeodeVersion&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1.4.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;dependencies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;implementation&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;org.springframework.geode:spring-geode-starter&amp;#39;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;testImplementation&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;org.springframework.geode:spring-geode-starter-test&amp;#39;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;dependencyManagement&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;imports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;mavenBom&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;org.springframework.geode:spring-geode-bom:${springGeodeVersion}&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
    ...
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;spring-geode.version&amp;gt;&lt;/span&gt;1.4.0&lt;span class=&#34;nt&#34;&gt;&amp;lt;/spring-geode.version&amp;gt;&lt;/span&gt;
    ...
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.geode&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-geode-starter&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.geode&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-geode-starter-test&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependencyManagement&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.geode&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-geode-bom&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${spring-geode.version}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;pom&lt;span class=&#34;nt&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;import&lt;span class=&#34;nt&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependencyManagement&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Version&lt;/h4&gt;
Make sure that the minor version of Spring Boot you are using, matches the Spring Boot for Apache Geode version you declare in your dependency.
&lt;/div&gt;

&lt;h3 id=&#34;add-spring-boot-for-apache-geode-annotations&#34;&gt;Add Spring Boot for Apache Geode Annotations&lt;/h3&gt;
&lt;p&gt;Add the following annotations to either your application configuration class or your main application class&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.context.annotation.Configuration&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.data.gemfire.config.annotation.EnableCachingDefinedRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.geode.config.annotation.EnableClusterAware&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@Configuration&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@EnableCachingDefinedRegions&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@EnableClusterAware&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;CacheAsideApplicationConfig&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://docs.spring.io/spring-data/geode/docs/current/reference/html/#bootstrap-annotation-config-caching&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@EnableCachingDefinedRegions&lt;/a&gt;
Inspects the Spring application for components annotated with &lt;a href=&#34;https://docs.spring.io/spring/docs/current/spring-framework-reference/integration.html#cache-annotations&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@Cacheable&lt;/a&gt; to identify the regions (caches) needed by the application at runtime.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.spring.io/autorepo/docs/spring-boot-data-geode-build/current/reference/html5/#geode-configuration-declarative-annotations-productivity-enableclusteraware&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@EnableClusterAware&lt;/a&gt;
Allows the application to seamlessly switch between local-only (application running on local machine) and client/server (in a managed environment such as Tanzu Application Service). This annotation includes the &lt;a href=&#34;https://docs.spring.io/autorepo/docs/spring-boot-data-geode-build/current/reference/html5/#geode-configuration-declarative-annotations-productivity-enableclusteraware&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@EnableClusterConfiguration&lt;/a&gt; annotation, which dynamically creates regions if they do not exist already. Note that the @EnableClusterConfiguration annotation will only create Regions, it will not delete or update existing regions.&lt;/p&gt;
&lt;h3 id=&#34;add-the-cacheable-annotation-to-service-method&#34;&gt;Add the @Cacheable Annotation to Service Method&lt;/h3&gt;
&lt;p&gt;Finally, add the &lt;code&gt;@Cacheable&lt;/code&gt; annotation to the service methods whose results will be cached.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.cache.annotation.Cacheable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@Service&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BikeIncidentService&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RestTemplate&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;restTemplate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@Value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;${bikewise.api.url}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;API_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@Cacheable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;BikeIncidentsByZip&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BikeIncident&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getBikeIncidents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zipCode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IOException&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        
        &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonIncidents&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;restTemplate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getForObject&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;API_URL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zipCode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;convertJsonToBikeIncidents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jsonIncidents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Add the name of the region you wish to be created as an argument to the annotation. In the above example we have &lt;code&gt;@Cacheable(“BikeIncidentsByZip”)&lt;/code&gt;, so a region with the name BikeIncidentsByZip will be used.&lt;/p&gt;
&lt;p&gt;Remember that with the cache-aside pattern, the application will first check in the cache and if the value is found, the application will not run the logic in the annotated method.&lt;/p&gt;
&lt;h3 id=&#34;testing-tip&#34;&gt;Testing Tip&lt;/h3&gt;
&lt;p&gt;When unit testing during development, to verify caching, &lt;code&gt;@Autowire&lt;/code&gt; a CacheManager and use it to obtain your named region and verify its contents.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/test/annotation/DirtiesContext.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@DirtiesContext&lt;/a&gt; is used to destroy the test region and its data after the test is run. This prevents interference with other tests.&lt;/p&gt;
&lt;p&gt;In the cache-aside example, this looks like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.cache.CacheManager&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.test.annotation.DirtiesContext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

   &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
   
&lt;span class=&#34;nd&#34;&gt;@Autowired&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;CacheManager&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cacheManager&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

   &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
   
&lt;span class=&#34;nd&#34;&gt;@Test&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@DirtiesContext&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getBikeIncidents_ShouldPullFromCache_AfterFirstResult&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IOException&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;mockRestServer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;expect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ExpectedCount&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;once&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requestTo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;API_URL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ZIP_CODE_30306&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
       &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;andRespond&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;withSuccess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mockIncidentsJsonForZipcode_30306&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MediaType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;APPLICATION_JSON&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;

   &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BikeIncident&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resultsFor_30306_fromApi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;bikeIncidentService&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getBikeIncidents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ZIP_CODE_30306&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BikeIncident&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resultsFor_30306_fromCache&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;bikeIncidentService&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getBikeIncidents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ZIP_CODE_30306&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

   &lt;span class=&#34;n&#34;&gt;mockRestServer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;verify&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;assertEquals&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;resultsFor_30306_fromApi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;cacheManager&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;BikeIncidentsByZip&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ZIP_CODE_30306&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;assertEquals&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;resultsFor_30306_fromApi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resultsFor_30306_fromCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;run-the-app-locally&#34;&gt;Run the App Locally&lt;/h2&gt;
&lt;h3 id=&#34;build-the-app&#34;&gt;Build the App&lt;/h3&gt;
&lt;p&gt;To run the app on your local machine, in a terminal, navigate to the root of the project and build the app&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gradle&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew clean build
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn clean package
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;start-the-spring-boot-app&#34;&gt;Start the Spring Boot App&lt;/h3&gt;
&lt;p&gt;Then run the Spring Boot command.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gradle&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew bootRun
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn spring-boot:run
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When the app is running, open a browser and go to &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;.  You should see this&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/data/tanzu-gemfire/cache-aside-sbdg/cache-aside-pattern-1.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Enter a ZIP code to search for bike incidents.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/data/tanzu-gemfire/cache-aside-sbdg/cache-aside-pattern-2.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Notice the response time on the right side.  The application has now queried the Bikewise API with the entered ZIP code and stored the response in Tanzu GemFire.&lt;/p&gt;
&lt;p&gt;If you click the search button again with the same ZIP code, you will see that the response time is significantly faster, as the application is now retrieving the information from the Tanzu GemFire cache.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/data/tanzu-gemfire/cache-aside-sbdg/cache-aside-pattern-3.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;run-the-app-on-the-tanzu-application-service&#34;&gt;Run the App on the Tanzu Application Service&lt;/h2&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tanzu GemFire Service Instance&lt;/h4&gt;
To deploy the Bike Incident application to Tanzu Application Service (TAS) make sure you have &lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-tgf4vms-sbdg/&#34;&gt;created a Tanzu GemFire service instance&lt;/a&gt;.
&lt;/div&gt;

&lt;h3 id=&#34;update-the-manifestyaml-file&#34;&gt;Update the manifest.yaml file&lt;/h3&gt;
&lt;p&gt;In the project root directory, open the &lt;code&gt;manifest.yml&lt;/code&gt; file and replace  &lt;code&gt;&amp;lt;your-tanzu-gemfire-service&amp;gt;&lt;/code&gt; with the name of your service instance.&lt;/p&gt;
&lt;h3 id=&#34;push-the-app-to-your-tas-space&#34;&gt;Push the app to your TAS space&lt;/h3&gt;
&lt;p&gt;Once the Tanzu GemFire service instance is running (you can check the status by running the &lt;code&gt;cf services&lt;/code&gt; command), push your app to TAS with &lt;code&gt;cf push&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After the app has successfully been pushed, in the output find the &lt;code&gt;route&lt;/code&gt;.  Then open a browser and copy and paste the route into the browser.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;run-the-app-on-kubernetes&#34;&gt;Run the App on Kubernetes&lt;/h2&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tanzu GemFire Kubernetes Cluster&lt;/h4&gt;
&lt;p&gt;To deploy the Bike Incident application on Kubernetes make sure you have &lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-tgf4k8s-sbdg/&#34;&gt;created a Tanzu GemFire cluster on Kubernetes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For this example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Our &lt;strong&gt;namespace&lt;/strong&gt; is &lt;code&gt;tanzu-gemfire&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Our &lt;strong&gt;GemFire cluster&lt;/strong&gt; is &lt;code&gt;cache-aside-gemfire-cluster&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h3 id=&#34;edit-the-applicationproperties-file&#34;&gt;Edit the &lt;code&gt;application.properties&lt;/code&gt; file&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Navigate to the &lt;code&gt;spring-for-apache-geode-examples/cache-aside&lt;/code&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the &lt;code&gt;application.properties&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Uncomment the two listed properties.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Replace the value for &lt;code&gt;spring.data.gemfire.pool.locators:&lt;/code&gt; with your Tanzu GemFire cluster information, for each locator (in this example we only have one locator).  The information will follow the form:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[GEMFIRE-CLUSTER-NAME]-locator-[LOCATOR-NUMBER].[GEMFIRE-CLUSTER-NAME]-locator.[NAMESPACE-NAME][10334]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For our example the value looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;spring.data.gemfire.pool.locators: cache-aside-gemfire-cluster-locator-0.cache-aside-gemfire-cluster-locator.tanzu-gemfire[10334]
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;cache-aside-gemfire-cluster&lt;/code&gt; with the name of your GemFire cluster if different.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with your namespace if different.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Replace the value for &lt;code&gt;spring.data.gemfire.management.http.host:&lt;/code&gt; with your Tanzu GemFire cluster information.  This will allow Spring Boot for Apache Geode to push your &lt;a href=&#34;https://docs.spring.io/autorepo/docs/spring-boot-data-geode-build/current/reference/html5/#geode-configuration-declarative-annotations-productivity-enableclusteraware&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;initial cluster configuration&lt;/a&gt; to your Tanzu GemFire cluster.  The information follows a similar form as above:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[GEMFIRE-CLUSTER-NAME]-locator-[LOCATOR-NUMBER].[GEMFIRE-CLUSTER-NAME]-locator.[NAMESPACE-NAME][GEMFIRE LOCATOR PORT]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For our example the value looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; spring.data.gemfire.management.http.host: cache-aside-gemfire-cluster-locator-0.cache-aside-gemfire-cluster-locator.tanzu-gemfire
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;cache-aside-gemfire-cluster&lt;/code&gt; with the name of your GemFire cluster if different.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with your namespace if different.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;build-a-docker-image-with-gradle-or-maven&#34;&gt;Build a Docker Image with Gradle or Maven&lt;/h3&gt;
&lt;p&gt;Starting with Spring Boot 2.3, you can now customize and create an OCI image using Spring Boot. In this example we&amp;rsquo;re using the &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/#build-image&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Gradle - packaging OCI images option&lt;/a&gt;.  If you are using Maven check out the instructions found &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#build-image&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In a terminal, navigate to the &lt;code&gt;cache-aside&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;Build the application with &lt;code&gt; ./gradlew clean build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open the &lt;code&gt;build.gradle&lt;/code&gt; file and update the &lt;code&gt;bootBuildImage&lt;/code&gt; section, with your Docker repository information. This will build an image with the name &lt;code&gt;docker.io/[docker username]/bike-incidents:0.0.1-SNAPSHOT&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Build the image with &lt;code&gt;./gradlew bootBuildImage&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;push-your-docker-image-to-docker-hub&#34;&gt;Push your Docker Image to Docker Hub&lt;/h3&gt;
&lt;p&gt;For this example, we&amp;rsquo;re using Docker Hub as our registry. This will create a repository on Docker Hub called &lt;code&gt;bike-incidents&lt;/code&gt; and push the image we created into that repository.&lt;/p&gt;
&lt;p&gt;In a terminal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Login to your Docker account&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the &lt;code&gt;docker push [IMAGE NAME HERE]&lt;/code&gt;.  For this example it should be similar to this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker push docker.io/[YOUR DOCKER USERNAME]/bike-incidents:0.0.1-SNAPSHOT
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;create-a-deployment-in-your-kubernetes-cluster&#34;&gt;Create a deployment in your Kubernetes cluster&lt;/h3&gt;
&lt;p&gt;Create a Kubernetes deployment for your &lt;em&gt;Bike Incidents&lt;/em&gt; app. This will create a deployment, replicaset, and pod using the image we created above.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  kubectl --namespace=tanzu-gemfire create deployment bike-incidents-deployment --image=docker.io/[YOUR DOCKER USERNAME]/bike-incidents:0.0.1-SNAPSHOT
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with your namespace if different.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If successful you should see &lt;code&gt;deployment.apps/bike-incidents-deployment created&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-a-loadbalancer-to-access-the-app&#34;&gt;Create a LoadBalancer to access the app&lt;/h3&gt;
&lt;p&gt;In order to access &lt;code&gt;Bike Incidents&lt;/code&gt; app from a browser, we need to expose the deployment.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl --namespace=tanzu-gemfire expose deployment/bike-incidents-deployment --type=&amp;quot;LoadBalancer&amp;quot; --port=80 --target-port=8080
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with your namespace if different.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;If you&amp;rsquo;re trying this locally with MiniKube, you will need to replace &lt;code&gt;LoadBalancer&lt;/code&gt; with &lt;code&gt;NodePort&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;access-the-bike-incidents-app&#34;&gt;Access the Bike Incidents App&lt;/h3&gt;
&lt;p&gt;Once the Load Balancer has been created, you can now access the &lt;em&gt;Bike Incidents&lt;/em&gt; app using the &lt;code&gt;External IP&lt;/code&gt; on the LoadBalancer service.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl -n tanzu-gemfire get services
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with your namespace if different.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This should output something similar to (your &lt;em&gt;locator&lt;/em&gt; and &lt;em&gt;server&lt;/em&gt; names may be different).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NAME                                  TYPE           CLUSTER-IP     EXTERNAL-IP    PORT(S)              AGE
bike-incidents-deployment            LoadBalancer   10.0.227.199   20.62.226.18   80:31350/TCP         57s
cache-aside-gemfire-cluster-locator   ClusterIP      None           &amp;lt;none&amp;gt;         10334/TCP,4321/TCP   132m
cache-aside-gemfire-cluster-server    ClusterIP      None           &amp;lt;none&amp;gt;         40404/TCP,4321/TCP   131m
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In your browser, go to the &lt;code&gt;EXTERNAL-IP&lt;/code&gt; of the &lt;code&gt;bike-incidents-deployment&lt;/code&gt; and you should see a working &lt;em&gt;Bike Incidents&lt;/em&gt; app.&lt;/p&gt;
&lt;h3 id=&#34;confirm-your-app-is-connected-to-your-tanzu-gemfire-cluster&#34;&gt;Confirm your app is connected to your Tanzu GemFire cluster&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Open a terminal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start gfsh for kubernetes&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl -n tanzu-gemfire exec -it GEMFIRE-CLUSTER-NAME-locator-0 -- gfsh
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with the name of your namespace, if it&amp;rsquo;s different.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;GEMFIRE-CLUSTER-NAME&lt;/code&gt; with the name of your Tanzu GemFire cluster.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once you see that &lt;code&gt;GFSH&lt;/code&gt; has started, connect to your cluster with the &lt;code&gt;connect&lt;/code&gt; command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt; connect
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once connected run the &lt;code&gt;list regions&lt;/code&gt; command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt; list regions
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You should see something similar to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  List of regions
  ------------------
  BikeIncidentsByZip
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This shows that the Spring Boot for Apache Geode app has connected to the Tanzu GemFire cluster and pushed the initial configuration (your region called &lt;code&gt;BikeIncidentsByZip&lt;/code&gt;) to the cluster.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the &lt;code&gt;BikeIncidentsByZip&lt;/code&gt; region IS NOT listed, the first item to check is the &lt;code&gt;application.properties&lt;/code&gt; file.  Confirm that the spring data property values are set correctly.  If you need to update them, make sure you also increment your build number of your image.  This will force &lt;a href=&#34;https://kubernetes.io/docs/concepts/containers/images/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Kubernetes to pull the new image&lt;/a&gt; (as opposed to using a cached version of the image).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Congratulations! You have now deployed a simple Spring Boot for Apache Geode app that implements the cache-aside pattern&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;learn-more&#34;&gt;Learn More&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Create an application that utilizes Spring Boot for Apache Geode and Spring Session for &lt;a href=&#34;/data/tanzu-gemfire/guides/session-state-cache-sbdg&#34;&gt;session state caching&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Spring - Convert Spring Data Redis Pub-Sub to Tanzu GemFire</title>
      
      <link>/data/tanzu-gemfire/code-samples/convert-redis-to-gemfire-pub-sub/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/code-samples/convert-redis-to-gemfire-pub-sub/</guid>
      <description>

        
        &lt;p&gt;The projects in this directory illustrate a Spring Boot application that creates a publish and subscribe channel with either Redis or Tanzu GemFire. In this guide, we will highlight the changes necessary for switching from Spring Data Redis to Spring Boot for Apache Geode using a publish/subscribe application.&lt;/p&gt;
&lt;p&gt;In the Tanzu GemFire example, a &lt;code&gt;Region&lt;/code&gt; will represent the equivalent of a &lt;code&gt;PatternTopic&lt;/code&gt; as defined in the Redis example.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Session State Caching</title>
      
      <link>/data/tanzu-gemfire/guides/session-state-cache-sbdg/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/guides/session-state-cache-sbdg/</guid>
      <description>

        
        &lt;p&gt;This guide walks you through how to implement a session state cache using Tanzu GemFire and &lt;a href=&#34;https://docs.spring.io/spring-boot-data-geode-build/current/reference/html5/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Boot for Apache Geode&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;when-should-i-use-a-session-state-cache&#34;&gt;When should I use a session state cache?&lt;/h2&gt;
&lt;p&gt;Session state caching is useful for storing data associated with an HTTP session. Storing this data in a cache allows it to be retrieved quickly and persisted across log-ins. Some examples where this might be useful include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shopping cart entries&lt;/li&gt;
&lt;li&gt;User preferences (name, site theme, etc.)&lt;/li&gt;
&lt;li&gt;Single Sign On (SSO) credentials&lt;/li&gt;
&lt;li&gt;Site Navigation History&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;how-does-session-state-caching-work&#34;&gt;How does session state caching work?&lt;/h2&gt;
&lt;p&gt;When a user connects to a website that utilizes sessions, an HTTP session is created.&lt;/p&gt;
&lt;p&gt;In our example the &lt;a href=&#34;https://docs.spring.io/spring-session/docs/current/reference/html5/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Session&lt;/a&gt; library takes care of managing the user session. When a user connects, a unique ID for the session is generated and stored as a cookie in the user’s browser. On subsequent requests, the cookie is sent to the server, identifying the session.&lt;/p&gt;
&lt;p&gt;The session UUID is used as a key in a data store holding information associated with the session (see examples of session data above.) The data store can be a traditional database, but this can lead to performance issues when there is a large volume of users, or user data, or both. A cache can improve performance in these cases.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-youll-need&#34;&gt;What you&amp;rsquo;ll need&lt;/h2&gt;
&lt;p&gt;To complete this guide you need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;https://github.com/gemfire/spring-for-apache-geode-examples/tree/main/session-state&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Session State example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Your favorite text editor or IDE&lt;/li&gt;
&lt;li&gt;JDK 8 or 11&lt;/li&gt;
&lt;li&gt;A Spring Boot application (using 2.3 or greater)&lt;/li&gt;
&lt;li&gt;The Spring Boot for Apache Geode dependency.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;If running on the Tanzu Application Service for VMs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-tgf4vms-sbdg/&#34;&gt;Tanzu GemFire service instance&lt;/a&gt; on the Tanzu Application Service.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;If running on Kubernetes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A &lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-tgf4k8s-sbdg/&#34;&gt;Tanzu GemFire Cluster&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For this example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Our &lt;strong&gt;namespace&lt;/strong&gt; is &lt;code&gt;tanzu-gemfire&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Our &lt;strong&gt;GemFire cluster&lt;/strong&gt; is &lt;code&gt;notes-app-gemfire-cluster&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/get-docker/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Docker&lt;/a&gt; installed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An image repository for the Session State Example example (we used Docker Hub).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;where-do-we-begin&#34;&gt;Where do we begin?&lt;/h2&gt;
&lt;p&gt;This example consists of a simple Spring Boot back end application and a React front end application that records user-provided notes, and associates them with the user’s session. If the user navigates away, and then returns to the site, their notes will still be available. The app also offers the ability to destroy the session - analogous to logging out of a website or closing the browser/tab.&lt;/p&gt;
&lt;p&gt;The back end (in the &lt;code&gt;src/main/java/sessionstate/&lt;/code&gt; directory) handles all the session management and storage, and is the main focus of the example.&lt;/p&gt;
&lt;p&gt;The front end (in the &lt;code&gt;frontend/&lt;/code&gt; directory) is provided to illustrate how a web app can interact with the session data. The example front end is written using the React framework, but clients can use any language or framework capable of interacting with a REST endpoint.&lt;/p&gt;
&lt;p&gt;You can download the complete application from the &lt;a href=&#34;https://github.com/gemfire/spring-for-apache-geode-examples&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Tanzu GemFire examples&lt;/a&gt; GitHub repository.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/gemfire/spring-for-apache-geode-examples.git
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;add-the-spring-boot-for-apache-geode-dependency&#34;&gt;Add the Spring Boot for Apache Geode Dependency&lt;/h3&gt;
&lt;p&gt;To allow the application to work with Tanzu GemFire and utilize the Spring Boot for Apache Geode dependency, add the following dependency information (the example code uses Gradle)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gradle&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span class=&#34;n&#34;&gt;ext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;springGeodeVersion&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1.4.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;dependencies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;implementation&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;org.springframework.geode:spring-geode-starter&amp;#39;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;testImplementation&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;org.springframework.geode:spring-geode-starter-test&amp;#39;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;dependencyManagement&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;imports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;mavenBom&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;org.springframework.geode:spring-geode-bom:${springGeodeVersion}&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
    ...
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;spring-geode.version&amp;gt;&lt;/span&gt;1.4.0&lt;span class=&#34;nt&#34;&gt;&amp;lt;/spring-geode.version&amp;gt;&lt;/span&gt;
    ...
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.geode&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-geode-starter&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.geode&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-geode-starter-test&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;&amp;lt;dependencyManagement&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.geode&lt;span class=&#34;nt&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-geode-bom&lt;span class=&#34;nt&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${spring-geode.version}&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;pom&lt;span class=&#34;nt&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;import&lt;span class=&#34;nt&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dependencyManagement&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Version&lt;/h4&gt;
Make sure that the minor version of Spring Boot you are using, matches the Spring Boot for Apache Geode version you declare in your dependency.
&lt;/div&gt;

&lt;h3 id=&#34;add-spring-boot-for-apache-geode-annotations&#34;&gt;Add Spring Boot for Apache Geode Annotations&lt;/h3&gt;
&lt;p&gt;The Spring Boot application will need the following annotations&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@EnableClusterAware&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SessionStateApplication&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
     &lt;span class=&#34;n&#34;&gt;SpringApplication&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SessionStateApplication&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://docs.spring.io/autorepo/docs/spring-boot-data-geode-build/current/reference/html5/#geode-configuration-declarative-annotations-productivity-enableclusteraware&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@EnableClusterAware&lt;/a&gt;
Allows the application to seamlessly switch between local-only (application running on local machine) and client/server (in a managed environment such as Tanzu Application Service). This annotation includes the &lt;a href=&#34;https://docs.spring.io/autorepo/docs/spring-boot-data-geode-build/current/reference/html5/#geode-configuration-declarative-annotations-productivity-enableclusteraware&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@EnableClusterConfiguration&lt;/a&gt; annotation, which dynamically creates regions if they do not exist already. Note that the @EnableClusterConfiguration annotation will only create Regions, it will not delete or update existing regions.&lt;/p&gt;
&lt;p&gt;The example Spring Boot application uses a &lt;code&gt;RestController&lt;/code&gt; that allows the front end application to interact with a REST API to read, update, and destroy session data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@RestController&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SessionController&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nd&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/getSessionNotes&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getSessionNotes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;notes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getSession&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAttribute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;NOTES&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;notes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@PostMapping&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/addSessionNote&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;addSessionNote&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@RequestBody&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;note&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;notes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getSession&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAttribute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;NOTES&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;notes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;notes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;n&#34;&gt;notes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;note&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getSession&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setAttribute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;NOTES&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;notes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@PostMapping&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/invalidateSession&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;invalidateSession&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getSession&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;invalidate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;accessing-and-displaying-session-data-from-the-front-end&#34;&gt;Accessing and Displaying Session Data from the Front End&lt;/h3&gt;
&lt;p&gt;The front end web application accesses the back end REST API using standard GET and POST HTTP methods. See &lt;code&gt;frontend/src/sessionService.js&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axios&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;axios&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;instance&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axios&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;addNote&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;note&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/addSessionNote&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;note&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,{&lt;/span&gt;
       &lt;span class=&#34;nx&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;text/plain&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getNotes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/getSessionNotes&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;destroySession&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/invalidateSession&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;testing-tip&#34;&gt;Testing Tip&lt;/h3&gt;
&lt;p&gt;When unit testing during development, to verify caching, &lt;code&gt;@Autowire&lt;/code&gt; a CacheManager and use it to confirm that session data is properly stored in the cache.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/test/annotation/DirtiesContext.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;@DirtiesContext&lt;/a&gt; is used to destroy the test region and its data after the test is run. This prevents interference with other tests.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@RunWith&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SpringRunner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@SpringBootTest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;classes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SessionStateApplication&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@AutoConfigureMockMvc&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SessionControllerTest&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;nd&#34;&gt;@Autowired&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;MockMvc&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mockMvc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

   &lt;span class=&#34;nd&#34;&gt;@Autowired&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;CacheManager&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cacheManager&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

   &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOTE1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Nothing More Than Memories&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;

   &lt;span class=&#34;nd&#34;&gt;@Test&lt;/span&gt;
   &lt;span class=&#34;nd&#34;&gt;@DirtiesContext&lt;/span&gt;
   &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;addSessionNote_should_addNoteToSessionInCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;MvcResult&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mvcResult&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mockMvc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;perform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/addSessionNote&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
               &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOTE1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
               &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;andExpect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isOk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
               &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;andReturn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;

       &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;encodedSessionUUID&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mvcResult&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getResponse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCookie&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;SESSION&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;

       &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;notesList&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getNotesForSessionInCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encodedSessionUUID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

       &lt;span class=&#34;n&#34;&gt;assertEquals&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOTE1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;notesList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)));&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;run-the-app-locally&#34;&gt;Run the App Locally&lt;/h2&gt;
&lt;p&gt;Navigate to the root of the project  in a command line and run the Spring Boot run command.&lt;/p&gt;
&lt;h3 id=&#34;build-the-app&#34;&gt;Build the App&lt;/h3&gt;
&lt;p&gt;To run the app on your local machine, in a terminal, navigate to the root of the project and build the app&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gradle&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew clean build
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn clean package
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;start-the-spring-boot-app&#34;&gt;Start the Spring Boot App&lt;/h3&gt;
&lt;p&gt;Then run the Spring Boot command.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gradle&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew bootRun
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mvn spring-boot:run
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When the app is running, open a browser and go to &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &amp;ldquo;Enter your note:&amp;rdquo; form can be used to enter notes.&lt;/li&gt;
&lt;li&gt;The &amp;ldquo;DESTROY SESSION&amp;rdquo; button can be used to clear the session data and delete the notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/data/tanzu-gemfire/session-state-cache-sbdg/session-state-frontend.jpg&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;run-the-app-on-the-tanzu-application-service&#34;&gt;Run the App on the Tanzu Application Service&lt;/h2&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tanzu GemFire Service Instance&lt;/h4&gt;
To deploy the application to the Tanzu Application
Service (TAS) make sure you have &lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-tgf4vms-sbdg/&#34;&gt;created a Tanzu GemFire service instance&lt;/a&gt;.
&lt;/div&gt;

&lt;h3 id=&#34;update-the-manifestyaml-file&#34;&gt;Update the manifest.yaml file&lt;/h3&gt;
&lt;p&gt;In the project root directory, open the &lt;code&gt;manifest.yml&lt;/code&gt; file and replace  &lt;code&gt;&amp;lt;SERVICE-INSTANCE-NAME&amp;gt;&lt;/code&gt; with the name of your service instance.&lt;/p&gt;
&lt;h3 id=&#34;push-the-app-to-your-tas-space&#34;&gt;Push the app to your TAS space&lt;/h3&gt;
&lt;p&gt;Once the Tanzu GemFire service instance is running (you can check the status by running the &lt;code&gt;cf services&lt;/code&gt; command), push your app to TAS with &lt;code&gt;cf push&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After the app has successfully been pushed, in the output find the &lt;code&gt;route&lt;/code&gt;.  Then open a browser and copy and paste the route into the browser.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;run-the-app-on-kubernetes&#34;&gt;Run the App on Kubernetes&lt;/h2&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tanzu GemFire Kubernetes Cluster&lt;/h4&gt;
&lt;p&gt;To deploy the Session State Example application on Kubernetes make sure you have &lt;a href=&#34;/data/tanzu-gemfire/guides/get-started-tgf4k8s-sbdg/&#34;&gt;created a Tanzu GemFire cluster on Kubernetes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For this example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Our &lt;strong&gt;namespace&lt;/strong&gt; is &lt;code&gt;tanzu-gemfire&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Our &lt;strong&gt;GemFire cluster&lt;/strong&gt; is &lt;code&gt;notes-app-gemfire-cluster&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h3 id=&#34;edit-the-applicationproperties-file&#34;&gt;Edit the &lt;code&gt;application.properties&lt;/code&gt; file&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Navigate to the application directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the &lt;code&gt;application.properties&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Uncomment the two listed properties.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Replace the value for &lt;code&gt;spring.data.gemfire.pool.locators:&lt;/code&gt; with your Tanzu GemFire cluster information, for each locator (in this example we only have one locator).  The information will follow the form:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[GEMFIRE-CLUSTER-NAME]-locator-[LOCATOR-NUMBER].[GEMFIRE-CLUSTER-NAME]-locator.[NAMESPACE-NAME][10334]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For our example the value looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;spring.data.gemfire.pool.locators: notes-app-gemfire-cluster-locator-0.notes-app-gemfire-cluster-locator.tanzu-gemfire[10334]
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;notes-app-gemfire-cluster&lt;/code&gt; with the name of your GemFire cluster if different.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with your namespace if different.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Replace the value for &lt;code&gt;spring.data.gemfire.management.http.host:&lt;/code&gt; with your Tanzu GemFire cluster information.  This will allow Spring Boot for Apache Geode to push your &lt;a href=&#34;https://docs.spring.io/autorepo/docs/spring-boot-data-geode-build/current/reference/html5/#geode-configuration-declarative-annotations-productivity-enableclusteraware&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;initial cluster configuration&lt;/a&gt; to your Tanzu GemFire cluster.  The information follows a similar form as above:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[GEMFIRE-CLUSTER-NAME]-locator-[LOCATOR-NUMBER].[GEMFIRE-CLUSTER-NAME]-locator.[NAMESPACE-NAME][GEMFIRE LOCATOR PORT]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For our example the value looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; spring.data.gemfire.management.http.host: notes-app-gemfire-cluster-locator-0.notes-app-gemfire-cluster-locator.tanzu-gemfire
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;notes-app-gemfire-cluster&lt;/code&gt; with the name of your GemFire cluster if different.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with your namespace if different.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;build-a-docker-image-with-gradle-or-maven&#34;&gt;Build a Docker Image with Gradle or Maven&lt;/h3&gt;
&lt;p&gt;Starting with Spring Boot 2.3, you can now customize and create an OCI image using Spring Boot. In this example we&amp;rsquo;re using the &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/#build-image&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Gradle - packaging OCI images option&lt;/a&gt;.  If you are using Maven check out the instructions found &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#build-image&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In a terminal, navigate to the application directory.&lt;/li&gt;
&lt;li&gt;Build the application with &lt;code&gt; ./gradlew clean build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open the &lt;code&gt;build.gradle&lt;/code&gt; file and update the &lt;code&gt;bootBuildImage&lt;/code&gt; section, with your Docker repository username. This will build an image with the name &lt;code&gt;docker.io/[YOUR DOCKER USERNAME]/notes-app:0.0.1-SNAPSHOT&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Build the image with &lt;code&gt;./gradlew bootBuildImage&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;push-your-docker-image-to-docker-hub&#34;&gt;Push your Docker Image to Docker Hub&lt;/h3&gt;
&lt;p&gt;For this example, we&amp;rsquo;re using Docker Hub as our registry. This will create a repository on Docker Hub called &lt;code&gt;notes-app&lt;/code&gt; and push the image we created into that repository.&lt;/p&gt;
&lt;p&gt;In a terminal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Login to your Docker account&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the &lt;code&gt;docker push [IMAGE NAME HERE]&lt;/code&gt;.  For this example it should be similar to this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker push docker.io/[YOUR DOCKER USERNAME]/notes-app:0.0.1-SNAPSHOT
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;create-a-deployment-in-your-kubernetes-cluster&#34;&gt;Create a deployment in your Kubernetes cluster&lt;/h3&gt;
&lt;p&gt;Create a Kubernetes deployment for your &lt;em&gt;Notes&lt;/em&gt; app. This will create a deployment, replicaset, and pod using the image we created above.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  kubectl --namespace=tanzu-gemfire create deployment notes-app-deployment --image=docker.io/[YOUR DOCKER USERNAME]/notes-app:0.0.1-SNAPSHOT
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with your namespace if different.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If successful you should see &lt;code&gt;deployment.apps/notes-app-deployment created&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-a-loadbalancer-to-access-the-app&#34;&gt;Create a LoadBalancer to access the app&lt;/h3&gt;
&lt;p&gt;In order to access the &lt;code&gt;Notes&lt;/code&gt; app from a browser, we need to expose the deployment.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl --namespace=tanzu-gemfire expose deployment/notes-app-deployment --type=&amp;quot;LoadBalancer&amp;quot; --port=80 --target-port=8080
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with your namespace if different.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;If you&amp;rsquo;re trying this locally with MiniKube, you will need to replace &lt;code&gt;LoadBalancer&lt;/code&gt; with &lt;code&gt;NodePort&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;access-the-notes-app&#34;&gt;Access the Notes App&lt;/h3&gt;
&lt;p&gt;Once the Load Balancer has been created, you can now access the &lt;em&gt;Notes&lt;/em&gt; app using the &lt;code&gt;External IP&lt;/code&gt; on the LoadBalancer service.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl -n tanzu-gemfire get services
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with your namespace if different.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This should output something similar to (your &lt;em&gt;locator&lt;/em&gt; and &lt;em&gt;server&lt;/em&gt; names may be different).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NAME                        TYPE           CLUSTER-IP    EXTERNAL-IP      PORT(S)              AGE
notes-app-cluster-locator   ClusterIP      None          &amp;lt;none&amp;gt;           10334/TCP,4321/TCP   26h
notes-app-cluster-server    ClusterIP      None          &amp;lt;none&amp;gt;           40404/TCP,4321/TCP   26h
notes-app-deployment        LoadBalancer   10.0.113.16   52.170.169.174   80:30109/TCP         26h
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In your browser, go to the &lt;code&gt;EXTERNAL-IP&lt;/code&gt; of the &lt;code&gt;notes-app-deployment&lt;/code&gt; and you should see a working &lt;em&gt;Notes&lt;/em&gt; app.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/data/tanzu-gemfire/session-state-cache-sbdg/session-state-frontend.jpg&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;h3 id=&#34;confirm-your-app-is-connected-to-your-tanzu-gemfire-cluster&#34;&gt;Confirm your app is connected to your Tanzu GemFire cluster&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Open a terminal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start gfsh for kubernetes&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl -n tanzu-gemfire exec -it GEMFIRE-CLUSTER-NAME-locator-0 -- gfsh
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Replace &lt;code&gt;tanzu-gemfire&lt;/code&gt; with the name of your namespace, if it&amp;rsquo;s different.&lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;GEMFIRE-CLUSTER-NAME&lt;/code&gt; with the name of your Tanzu GemFire cluster.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once you see that &lt;code&gt;GFSH&lt;/code&gt; has started, connect to your cluster with the &lt;code&gt;connect&lt;/code&gt; command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt; connect
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once connected run the &lt;code&gt;list regions&lt;/code&gt; command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt; list regions
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You should see something similar to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  List of regions
  ------------------
  ClusteredSpringSessions
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This shows that the Spring Boot for Apache Geode app has connected to the Tanzu GemFire cluster and pushed the initial Session configuration, including a region called &lt;code&gt;ClusteredSpringSessions&lt;/code&gt;), to the cluster.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the &lt;code&gt;ClusteredSpringSessions&lt;/code&gt; region IS NOT listed, the first item to check is the &lt;code&gt;application.properties&lt;/code&gt; file.  Confirm that the spring data property values are set correctly.  If you need to update them, make sure you also increment your build number of your image.  This will force &lt;a href=&#34;https://kubernetes.io/docs/concepts/containers/images/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Kubernetes to pull the new image&lt;/a&gt; (as opposed to using a cached version of the image).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Congratulations! You have now deployed a Spring Boot for Apache Geode app that implements Session State Caching&lt;/strong&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Next.js Page Counter</title>
      
      <link>/data/tanzu-gemfire/code-samples/nextjs-page-counter/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/code-samples/nextjs-page-counter/</guid>
      <description>

        
        &lt;p&gt;This example demonstrates use of the Node.js client with a simple Next.js web app.&lt;/p&gt;
&lt;p&gt;The rendered site displays a count of page renderings, backed either by a Tanzu GemFire cluster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Node.js - Authentication</title>
      
      <link>/data/tanzu-gemfire/code-samples/authentication/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/code-samples/authentication/</guid>
      <description>

        
        &lt;p&gt;This Node.js example demonstrates the basic authentication and authorization mechanism used when an app interacts with a Tanzu GemFire cluster. The app does a put, a get, and a remove operation to show authorization.&lt;/p&gt;
&lt;p&gt;This example works with either a local Tanzu GemFire cluster or a local Apache Geode cluster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Node.js - Book Service</title>
      
      <link>/data/tanzu-gemfire/code-samples/book-service/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/code-samples/book-service/</guid>
      <description>

        
        &lt;p&gt;This Node.js example provides a simple book-serving app which uses the data service as a system of record. REST endpoints allow an app user to look up books by ISBN or put new books into the service.&lt;/p&gt;
&lt;p&gt;This app can be run with a local Apache Geode or Tanzu GemFire cluster, or with a Tanzu GemFire for VMs service instance. A common development path runs locally first to iterate quickly on feature development prior to pushing the app to a TAS environment to run with Tanzu GemFire for VMs cluster. This app has been tested with Tanzu GemFire for VMs version 1.8.1.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Node.js - Function Execution</title>
      
      <link>/data/tanzu-gemfire/code-samples/function-execution/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/code-samples/function-execution/</guid>
      <description>

        
        &lt;p&gt;This Node.js example provides a simple JavaScript application that demonstrates calling a server-side function on a Tanzu GemFire cluster. This app can be run with either a local Apache Geode cluster or with a Tanzu GemFire cluster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Node.js - Object Put</title>
      
      <link>/data/tanzu-gemfire/code-samples/object-put/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/code-samples/object-put/</guid>
      <description>

        
        &lt;p&gt;This Node.js example provides a simple JavaScript application that demonstrates basic object usage with a local Tanzu GemFire cluster. This app also can be run with a local Apache Geode cluster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Node.js - Query</title>
      
      <link>/data/tanzu-gemfire/code-samples/query/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/code-samples/query/</guid>
      <description>

        
        &lt;p&gt;This Node.js example provides a simple JavaScript application that demonstrates executing a query on a Tanzu GemFire cluster. This app can be run with either a local Apache Geode cluster or with a Tanzu GemFire cluster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: What is Stored in a Region</title>
      
      <link>/data/tanzu-gemfire/blog/what-is-stored-in-a-region/</link>
      <pubDate>Thu, 27 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/what-is-stored-in-a-region/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The Region is the data structure that stores entries in a Cache. Its entries are &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/RegionEntry.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;RegionEntry&lt;/a&gt; instances and are stored in a customized &lt;code&gt;ConcurrentHashMap&lt;/code&gt; called &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/util/concurrent/CustomEntryConcurrentHashMap.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;CustomEntryConcurrentHashMap&lt;/a&gt;. A RegionEntry contains the key which may or may not be kept in deserialized form depending on the key type and the value which is a byte array wrapped by a &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/CachedDeserializable.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;CachedDeserializable&lt;/a&gt; instance in most cases.&lt;/p&gt;
&lt;p&gt;This article describes the different RegionEntry and &lt;code&gt;CachedDeserializable&lt;/code&gt; types and when they are used.&lt;/p&gt;
&lt;h2 id=&#34;region-architecture&#34;&gt;Region Architecture&lt;/h2&gt;
&lt;p&gt;There are mainly two different kinds of Regions, namely replicated and partitioned.&lt;/p&gt;
&lt;h3 id=&#34;replicated-region&#34;&gt;Replicated Region&lt;/h3&gt;
&lt;p&gt;A replicated Region is implemented by &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/DistributedRegion.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;DistributedRegion&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The architecture diagram below shows the relationship between DistributedRegions and RegionEntries.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/what-is-stored-in-a-region/diagrams/barry_05_27_2021_distributedregion_architecture.png&#34; alt=&#34;DistributedRegion Architecture Diagram&#34;  /&gt;&lt;/p&gt;
&lt;h3 id=&#34;partitioned-region&#34;&gt;Partitioned Region&lt;/h3&gt;
&lt;p&gt;A partitioned Region is implemented by &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegion.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;PartitionedRegion&lt;/a&gt; which contains a collection of BucketRegions. A &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/BucketRegion.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;BucketRegion&lt;/a&gt; is an extension of DistributedRegion.&lt;/p&gt;
&lt;p&gt;The architecture diagram below shows the relationship between &lt;code&gt;PartitionedRegions&lt;/code&gt; and RegionEntries.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/what-is-stored-in-a-region/diagrams/barry_05_27_2021_partitionedregion_architecture.png&#34; alt=&#34;PartitionedRegion Architecture Diagram&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;regionentry-creation&#34;&gt;RegionEntry Creation&lt;/h2&gt;
&lt;p&gt;When a Region is created, it creates a subclass of &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/AbstractRegionMap.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;AbstractRegionMap&lt;/a&gt; to hold its entries. The &lt;code&gt;AbstractRegionMap&lt;/code&gt; uses a &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/RegionEntryFactory.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;RegionEntryFactory&lt;/a&gt; to determine the type of RegionEntry to create when requested.&lt;/p&gt;
&lt;h3 id=&#34;regionentryfactory&#34;&gt;RegionEntryFactory&lt;/h3&gt;
&lt;p&gt;The type of &lt;code&gt;RegionEntryFactory&lt;/code&gt; created by a Region depends on several factors including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;whether statistics are enabled&lt;/li&gt;
&lt;li&gt;whether LRU eviction is enabled&lt;/li&gt;
&lt;li&gt;whether overflow to disk or persistence is enabled&lt;/li&gt;
&lt;li&gt;whether concurrency checking is enabled&lt;/li&gt;
&lt;li&gt;whether off-heap memory is used&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are several groupings of &lt;code&gt;RegionEntryFactory&lt;/code&gt; types including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VersionedThin&lt;/code&gt; — creates RegionEntry instances for Regions that have concurrency checking enabled and statistics disabled&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VersionedStats&lt;/code&gt; — creates RegionEntry instances for Regions that have both concurrency checking and statistics enabled&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VMThin&lt;/code&gt; — creates RegionEntry instances for Regions that have both concurrency checking and statistics disabled&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VMStats&lt;/code&gt; — creates RegionEntry instances for Regions that have concurrency checking disabled and statistics enabled&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each of these groupings includes several different &lt;code&gt;RegionEntryFactory&lt;/code&gt; types. For example, the &lt;code&gt;VersionedThin&lt;/code&gt; grouping includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VersionedThinRegionEntryHeapFactory&lt;/code&gt; — creates &lt;code&gt;VersionedThinRegionEntryHeap&lt;/code&gt;* instances for Regions with basic configuration. See &lt;a href=&#34;https://github.com/apache/geode/blob/681b5edb87f2a30593135145d6801a44c062b181/geode-core/src/main/java/org/apache/geode/internal/cache/entries/VersionedThinRegionEntryHeap.java#L41&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;createEntry&lt;/a&gt; for the RegionEntry types created by this &lt;code&gt;RegionEntryFactory&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VersionedThinLRURegionEntryHeapFactory&lt;/code&gt; — creates &lt;code&gt;VersionedThinLRURegionEntryHeap&lt;/code&gt;* instances for Regions with LRU destroy eviction configured. See &lt;a href=&#34;https://github.com/apache/geode/blob/681b5edb87f2a30593135145d6801a44c062b181/geode-core/src/main/java/org/apache/geode/internal/cache/entries/VersionedThinLRURegionEntryHeap.java#L41&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;createEntry&lt;/a&gt; for the RegionEntry types created by this &lt;code&gt;RegionEntryFactory&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VersionedThinDiskRegionEntryHeapFactory&lt;/code&gt; — creates &lt;code&gt;VersionedThinDiskRegionEntryHeap&lt;/code&gt;* instances for Regions with persistence configured. See &lt;a href=&#34;https://github.com/apache/geode/blob/681b5edb87f2a30593135145d6801a44c062b181/geode-core/src/main/java/org/apache/geode/internal/cache/entries/VersionedThinDiskRegionEntryHeap.java#L41&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;createEntry&lt;/a&gt; for the RegionEntry types created by this &lt;code&gt;RegionEntryFactory&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VersionedThinDiskLRURegionEntryHeapFactory&lt;/code&gt; — creates &lt;code&gt;VersionedThinDiskLRURegionEntryHeap&lt;/code&gt;* instances for Regions with LRU overflow eviction configured. See &lt;a href=&#34;https://github.com/apache/geode/blob/681b5edb87f2a30593135145d6801a44c062b181/geode-core/src/main/java/org/apache/geode/internal/cache/entries/VersionedThinDiskLRURegionEntryHeap.java#L41&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;createEntry&lt;/a&gt; for the RegionEntry types created by this &lt;code&gt;RegionEntryFactory&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Off-heap versions of each of these &lt;code&gt;VersionedThin&lt;/code&gt; factories also exist. In addition, each of these is duplicated for the &lt;code&gt;VMStats&lt;/code&gt;, &lt;code&gt;VMThin&lt;/code&gt; and &lt;code&gt;VersionedStats&lt;/code&gt; &lt;code&gt;RegionEntryFactory&lt;/code&gt; types. See &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/region/entry/RegionEntryFactoryBuilder.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;RegionEntryFactoryBuilder&lt;/a&gt; for a complete list of the 32 different &lt;code&gt;RegionEntryFactory&lt;/code&gt; types.&lt;/p&gt;
&lt;h3 id=&#34;regionentry&#34;&gt;RegionEntry&lt;/h3&gt;
&lt;p&gt;The base implementation of RegionEntry is called &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/entries/AbstractRegionEntry.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;AbstractRegionEntry&lt;/a&gt;. It has several direct abstract subclasses including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VMThinRegionEntry&lt;/code&gt; — is a RegionEntry that has statistics disabled&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VMStatsRegionEntry&lt;/code&gt; — is a RegionEntry that provides extra statistics including hit, miss and lastAccessedTime&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AbstractLRURegionEntry&lt;/code&gt; — is a RegionEntry that provides LRU destroy eviction behavior&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AbstractDiskRegionEntry&lt;/code&gt; — is a RegionEntry that provides persistence or LRU overflow eviction behavior&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each of these has many concrete subclasses.&lt;/p&gt;
&lt;p&gt;The type of RegionEntry created by a &lt;code&gt;RegionEntryFactory&lt;/code&gt; depends on the type of key:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;String keys (1–7 characters, 8–15 characters, 16+ characters)&lt;/li&gt;
&lt;li&gt;Integer keys&lt;/li&gt;
&lt;li&gt;Long keys&lt;/li&gt;
&lt;li&gt;UUID keys&lt;/li&gt;
&lt;li&gt;Object keys&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each of these key types causes a different RegionEntry type to be created. Combined with &lt;code&gt;RegionEntryFactory&lt;/code&gt; factors listed above, there are 192 different RegionEntry types that can be created.&lt;/p&gt;
&lt;p&gt;All concrete RegionEntry types are auto-generated using the &lt;em&gt;&lt;a href=&#34;https://github.com/apache/geode/blob/develop/dev-tools/generateRegionEntryClasses.sh&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;generateRegionEntryClasses.sh&lt;/a&gt;&lt;/em&gt; script and &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/entries/LeafRegionEntry.cpp&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;LeafRegionEntry&lt;/a&gt; class.&lt;/p&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;p&gt;Shown below are examples of RegionEntry types for common Region shortcuts. The code I used to create and log different kinds of RegionEntry instances is &lt;a href=&#34;https://github.com/boglesby/log-region-entries&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PARTITION_REDUNDANT&lt;/strong&gt;
The RegionEntry instances in a Region defined with the PARTITION_REDUNDANT shortcut are:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| Key Class             |   RegionEntry Type                       |
| -------------------   |   -------------------------------------- |
| Domain Object         |   VersionedThinRegionEntryHeapObjectKey  |
| Integer               |   VersionedThinRegionEntryHeapIntKey     |
| Long                  |   VersionedThinRegionEntryHeapLongKey    |
| String (1-7 chars)    |   VersionedThinRegionEntryHeapStringKey1 |
| String (8-15 chars)   |   VersionedThinRegionEntryHeapStringKey2 |
| String (16+ chars)    |   VersionedThinRegionEntryHeapObjectKey  |
| UUID                  |   VersionedThinRegionEntryHeapUUIDKey    |
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note: There are different types of RegionEntry instances containing String keys. Depending on the number of characters in the String, the String key is stored in a &lt;code&gt;StringKey1&lt;/code&gt;, &lt;code&gt;StringKey2&lt;/code&gt; or Object RegionEntry like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VMThinRegionEntryHeapStringKey1 — encodes String keys of length 1–7 characters into a long field&lt;/li&gt;
&lt;li&gt;VMThinRegionEntryHeapStringKey2 — encodes String keys of length 8–15 characters into two long fields&lt;/li&gt;
&lt;li&gt;VMThinRegionEntryHeapObjectKey — stores String keys of length 16+ characters in an Object field&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;PARTITION_REDUNDANT_HEAP_LRU&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The RegionEntry instances in a Region defined with the PARTITION_REDUNDANT_HEAP_LRU shortcut are:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| Key Class           | RegionEntry Type                          |
| ------------------- | ----------------------------------------- |
| Domain Object       | VersionedThinLRURegionEntryHeapObjectKey  |
| Integer             | VersionedThinLRURegionEntryHeapIntKey     |
| Long                | VersionedThinLRURegionEntryHeapLongKey    |
| String (1-7 chars)  | VersionedThinLRURegionEntryHeapStringKey1 |
| String (8-15 chars) | VersionedThinLRURegionEntryHeapStringKey2 |
| String (16+ chars)  | VersionedThinLRURegionEntryHeapObjectKey  |
| UUID                | VersionedThinLRURegionEntryHeapUUIDKey    |
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;PARTITION_REDUNDANT_OVERFLOW&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The RegionEntry instances in a Region defined with the PARTITION_REDUNDANT_OVERFLOW shortcut are:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| Key Class           | RegionEntry Type                              |
| ------------------- | --------------------------------------------- |
| Domain Object       | VersionedThinDiskLRURegionEntryHeapObjectKey  |
| Integer             | VersionedThinDiskLRURegionEntryHeapIntKey     |
| Long                | VersionedThinDiskLRURegionEntryHeapLongKey    |
| String (1-7 chars)  | VersionedThinDiskLRURegionEntryHeapStringKey1 |
| String (8-15 chars) | VersionedThinDiskLRURegionEntryHeapStringKey2 |
| String (16+ chars)  | VersionedThinDiskLRURegionEntryHeapObjectKey  |
| UUID                | VersionedThinDiskLRURegionEntryHeapUUIDKey    |
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;PARTITION_REDUNDANT_PERSISTENT&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The RegionEntry instances in a Region defined with the PARTITION_REDUNDANT_PERSISTENT shortcut are:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| Key Class           | RegionEntry Type                           |
| ------------------- | ------------------------------------------ |
| Domain Object       | VersionedThinDiskRegionEntryHeapObjectKey  |
| Integer             | VersionedThinDiskRegionEntryHeapIntKey     |
| Long                | VersionedThinDiskRegionEntryHeapLongKey    |
| String (1-7 chars)  | VersionedThinDiskRegionEntryHeapStringKey1 |
| String (8-15 chars) | VersionedThinDiskRegionEntryHeapStringKey2 |
| String (16+ chars)  | VersionedThinDiskRegionEntryHeapObjectKey  |
| UUID                | VersionedThinDiskRegionEntryHeapUUIDKey    |
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;PARTITION_REDUNDANT_PERSISTENT_OVERFLOW&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The RegionEntry instances in a Region defined with the PARTITION_REDUNDANT_PERSISTENT_OVERFLOW shortcut are:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| Key Class           | RegionEntry Type                              |
| ------------------- | --------------------------------------------- |
| Domain Object       | VersionedThinDiskLRURegionEntryHeapObjectKey  |
| Integer             | VersionedThinDiskLRURegionEntryHeapIntKey     |
| Long                | VersionedThinDiskLRURegionEntryHeapLongKey    |
| String (1-7 chars)  | VersionedThinDiskLRURegionEntryHeapStringKey1 |
| String (8-15 chars) | VersionedThinDiskLRURegionEntryHeapStringKey2 |
| String (16+ chars)  | VersionedThinDiskLRURegionEntryHeapObjectKey  |
| UUID                | VersionedThinDiskLRURegionEntryHeapUUIDKey    |
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;cacheddeserializable&#34;&gt;CachedDeserializable&lt;/h2&gt;
&lt;p&gt;When a key and value are stored in a Region, the key is first deserialized into its object instance, and the value is serialized into a byte array. The value is then wrapped by a &lt;code&gt;CachedDeserializable&lt;/code&gt; using &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/CachedDeserializableFactory.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;CachedDeserializableFactory&lt;/a&gt;. The RegionEntry is created with the key and &lt;code&gt;CachedDeserializable&lt;/code&gt; value. The RegionEntry converts UUID and String keys of length 1–15 into long fields. It stores Long keys in a long field, and Integer keys in an int field.&lt;/p&gt;
&lt;p&gt;There are several implementations of &lt;code&gt;CachedDeserializable&lt;/code&gt; including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/VMCachedDeserializable.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;VMCachedDeserializable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/PreferBytesCachedDeserializable.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;PreferBytesCachedDeserializable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/StoreAllCachedDeserializable.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;StoreAllCachedDeserializable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;CachedDeserializableFactory&lt;/code&gt; decides which of these to instantiate for a specific value based on several factors including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the value of the PDX read-serialized boolean&lt;/li&gt;
&lt;li&gt;the value of the &lt;a href=&#34;https://github.com/apache/geode/blob/e52217ff06f5d1643ede4c3494718fc8bab80f33/geode-core/src/main/java/org/apache/geode/internal/cache/CachedDeserializableFactory.java#L36&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;gemfire.PREFER_SERIALIZED&lt;/a&gt; java system property&lt;/li&gt;
&lt;li&gt;the value of the &lt;a href=&#34;https://github.com/apache/geode/blob/e52217ff06f5d1643ede4c3494718fc8bab80f33/geode-core/src/main/java/org/apache/geode/internal/cache/CachedDeserializableFactory.java#L41&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;gemfire.STORE_ALL_VALUE_FORMS&lt;/a&gt; java system property&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;vmcacheddeserializable&#34;&gt;VMCachedDeserializable&lt;/h3&gt;
&lt;p&gt;A &lt;code&gt;VMCachedDeserializable&lt;/code&gt; is the default value stored in the RegionEntry. It can store either the byte array or deserialized value. It is initially created with the byte array. The byte array value is replaced by the deserialized value if a server-side operation is done on that entry (e.g. &lt;code&gt;CacheListener getNewValue&lt;/code&gt; is invoked or a get is done in a Function).&lt;/p&gt;
&lt;p&gt;On a Region defined with the PARTITION shortcut, a RegionEntry looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| Property                                | Value                                  |
| --------------------------------------- | -------------------------------------- |
| Region Entry Class                      | VersionedThinRegionEntryHeapStringKey1 |
| Region Entry Key Class                  | String                                 |
| Region Entry Key                        | 0                                      |
| Region Entry Value Class                | VMCachedDeserializable                 |
| CachedDeserializable Value Class        | [B                                     |
| CachedDeserializable Value Bytes        | [B@1a4b421b                            |
| CachedDeserializable Value Bytes Length | 37                                     |
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If a server-side get is done on that entry, the same RegionEntry looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| Property                         | Value                                                |
| -------------------------------- | ---------------------------------------------------- |
| Region Entry Class               | VersionedThinRegionEntryHeapStringKey1               |
| Region Entry Key Class           | String                                               |
| Region Entry Key                 | 0                                                    |
| Region Entry Value Class         | VMCachedDeserializable                               |
| CachedDeserializable Value Class | Trade                                                |
| CachedDeserializable Value       | Trade(id=0; security=VMW; quantity=50; price=160.50) | 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;preferbytescacheddeserializable&#34;&gt;PreferBytesCachedDeserializable&lt;/h3&gt;
&lt;p&gt;A &lt;code&gt;PreferBytesCachedDeserializable&lt;/code&gt; always stores the byte array value.&lt;/p&gt;
&lt;p&gt;If PDX read-serialized is true or the &lt;em&gt;&lt;code&gt;gemfire.PREFER_SERIALIZED&lt;/code&gt;&lt;/em&gt; java system property is set to true (default is false), the RegionEntry will contain a &lt;code&gt;PreferBytesCachedDeserializable&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;If a server-side operation is done on that entry, the byte array is either wrapped by a PdxInstance if PDX read-serialized is true or the domain object if the system property is set and returned to the caller. The &lt;code&gt;PreferBytesCachedDeserializable&lt;/code&gt; is unaffected and continues to contain the byte array.&lt;/p&gt;
&lt;p&gt;On a Region defined with the PARTITION shortcut and PDX read-serialized set to true, a RegionEntry looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| Property                                | Value                                  |
| --------------------------------------- | -------------------------------------- |
| Region Entry Class                      | VersionedThinRegionEntryHeapStringKey1 |
| Region Entry Key Class                  | String                                 |
| Region Entry Key                        | 0                                      |
| Region Entry Value Class                | PreferBytesCachedDeserializable        |
| CachedDeserializable Value Class        | [B                                     |
| CachedDeserializable Value Bytes        | [B@770f6519                            |
| CachedDeserializable Value Bytes Length | 37                                     |
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;On a Region defined with the PARTITION shortcut and the system property set to true, a RegionEntry looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| Property                                | Value                                  |
| --------------------------------------- | -------------------------------------- |
| Region Entry Class                      | VersionedThinRegionEntryHeapStringKey1 |
| Region Entry Key Class                  | String                                 |
| Region Entry Key                        | 0                                      |
| Region Entry Value Class                | PreferBytesCachedDeserializable        |
| CachedDeserializable Value Class        | [B                                     |
| CachedDeserializable Value Bytes        | [B@5e7a11de                            |
| CachedDeserializable Value Bytes Length | 36                                     |
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;storeallcacheddeserializable&#34;&gt;StoreAllCachedDeserializable&lt;/h3&gt;
&lt;p&gt;A &lt;code&gt;StoreAllCachedDeserializable&lt;/code&gt; stores both the byte array and deserialized values. The use of this type is controlled entirely by the gemfire.&lt;code&gt;STORE_ALL_VALUE_FORMS&lt;/code&gt; java system property. It is false by default. If it is set to true, the RegionEntry will contain a &lt;code&gt;StoreAllCachedDeserializable&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;On a Region defined with the PARTITION shortcut and the system property set to true, a RegionEntry looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| Property                                | Value                                                |
| --------------------------------------- | ---------------------------------------------------- |
| Region Entry Class                      | VersionedThinRegionEntryHeapStringKey1               |
| Region Entry Key Class                  | String                                               |
| Region Entry Key                        | 0                                                    |
| Region Entry Value Class                | StoreAllCachedDeserializable                         |
| CachedDeserializable Value Class        | [B                                                   |
| CachedDeserializable Value Bytes        | [B@6ff9593b                                          |
| CachedDeserializable Value Bytes Length | 35                                                   |
| CachedDeserializable Value Object Class | Trade                                                |
| CachedDeserializable Value Object       | Trade(id=0; security=VMW; quantity=50; price=160.50) |
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This article has shown the RegionEntry and &lt;code&gt;CachedDeserializable&lt;/code&gt; types used by Regions with various configurations and key types.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Transmitting Deltas Between Different Apache Geode Distributed Systems</title>
      
      <link>/data/tanzu-gemfire/blog/transmitting-deltas-between-different-apache-geode-distributed-systems/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/transmitting-deltas-between-different-apache-geode-distributed-systems/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Apache Geode provides a &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/Delta.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Delta&lt;/a&gt; interface that facilitates serializing the changes to an object between two JVMs rather than the entire object when changes are made to that object. For large objects, this provides an optimization that is supported from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;clients to servers&lt;/li&gt;
&lt;li&gt;servers to servers in the same DistributedSystem&lt;/li&gt;
&lt;li&gt;servers to clients&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sending Deltas from servers in one &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/distributed/DistributedSystem.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;DistributedSystem&lt;/a&gt; to servers in another (e.g. two WAN sites) is not supported. Currently, each event sent between the DistributedSystems contains the entire object. Normally, objects are stored in Regions as byte arrays. For Deltas, that is not the case. Instead, Deltas are represented as fully-deserialized objects. When a change to a Delta is received, it is applied to the in-memory object. Combine this with the fact that sending Deltas between DistributedSystems is not supported, and that means the entire object is serialized each time it is updated in the sending DistributedSystem and deserialized in the receiving one. Since Deltas are mainly used for objects that can grow very large (like sessions), this can be inefficient.&lt;/p&gt;
&lt;p&gt;This article describes a way to send the delta bytes between the DistributedSystems instead of sending the entire object bytes.&lt;/p&gt;
&lt;h2 id=&#34;architecture&#34;&gt;Architecture&lt;/h2&gt;
&lt;p&gt;For this implementation, each event travels the path below between a client in the sending DistributedSystem and a server in the receiving DistributedSystem:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A client does a put operation on the data Region&lt;/li&gt;
&lt;li&gt;The full or delta bytes of the object are sent from the client to a server depending on whether the operation is a create or update&lt;/li&gt;
&lt;li&gt;The &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/cache/CacheWriter.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;CacheWriter&lt;/a&gt; on the data Region in the server sets the &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/cache/wan/GatewaySender.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewaySender&lt;/a&gt; queue key&lt;/li&gt;
&lt;li&gt;The &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/cache/CacheListener.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;CacheListener&lt;/a&gt; on the data Region in the server creates an &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/cache/EntryEvent.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;EntryEvent&lt;/a&gt; on the proxy Region containing the appropriate bytes (either delta or full) and distributes that event to the GatewaySender attached to the proxy Region&lt;/li&gt;
&lt;li&gt;The GatewaySender attached to the proxy Region sends the event to a server in the receiving DistributedSystem&lt;/li&gt;
&lt;li&gt;A &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/cache/wan/GatewayReceiver.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewayReceiver&lt;/a&gt; in a server on the receiving DistributedSystem receives the event&lt;/li&gt;
&lt;li&gt;The CacheWriter in the proxy Region puts the appropriate bytes (either delta or full) into the data Region&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: The &lt;code&gt;GatewaySender&lt;/code&gt; and &lt;code&gt;GatewayReceiver&lt;/code&gt; in these steps actually encompass several different objects.&lt;/p&gt;
&lt;p&gt;This diagram shows the architecture of this implementation with one server in each DistributedSystem for simplicity:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/transmitting-deltas-between-different-apache-geode-distributed-systems/diagrams/barry_2021_03_23_architecture_diagram.png&#34; alt=&#34;Sequence Diagram for Sending Deltas Between DistributedSystems&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;region-configuration&#34;&gt;Region Configuration&lt;/h2&gt;
&lt;p&gt;The Region configuration of the above architecture looks like this in XML:&lt;/p&gt;
&lt;h3 id=&#34;data-region&#34;&gt;Data Region&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;region&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Trade&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;refid=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PARTITION_REDUNDANT&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;region-attributes&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;cache-writer&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;class-name&amp;gt;&lt;/span&gt;example.server.callback.GatewaySenderDeltaCacheWriter&lt;span class=&#34;nt&#34;&gt;&amp;lt;/class-name&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/cache-writer&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;cache-listener&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;class-name&amp;gt;&lt;/span&gt;example.server.callback.GatewaySenderDeltaCacheListener&lt;span class=&#34;nt&#34;&gt;&amp;lt;/class-name&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/cache-listener&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/region-attributes&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/region&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;proxy-region&#34;&gt;Proxy Region&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;region&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Trade_gateway_sender_delta_proxy&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;refid=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PARTITION_REDUNDANT&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;region-attributes&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;gateway-sender-ids=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ny&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;partition-attributes&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;colocated-with=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/Trade&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;redundant-copies=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;cache-writer&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;class-name&amp;gt;&lt;/span&gt;example.server.callback.GatewaySenderProxyCacheWriter&lt;span class=&#34;nt&#34;&gt;&amp;lt;/class-name&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/cache-writer&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/region-attributes&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/region&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;caveats&#34;&gt;Caveats&lt;/h2&gt;
&lt;p&gt;There are a few caveats to this implementation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The receiving DistributedSystem must have the full object to be able to apply the delta bytes so both DistributedSystems must start from the same state (either both empty or one a copy of the other).&lt;/li&gt;
&lt;li&gt;The receiving DistributedSystem proxy Region stores the most recent bytes for each key.&lt;/li&gt;
&lt;li&gt;Eviction cannot be enabled for the proxy Region. If it is enabled and an entry is evicted, a destroy event received from the sending DistributedSystem is ignored.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;All source code described in this article as well as an example usage is available &lt;a href=&#34;https://github.com/boglesby/send-delta-between-wan-sites&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The implementation consists of the following three &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/cache/CacheCallback.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;CacheCallback&lt;/a&gt; classes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;GatewaySenderDeltaCacheWriter&lt;/strong&gt; attached to the data Region&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;GatewaySenderDeltaCacheListener&lt;/strong&gt; attached to the data Region&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;GatewaySenderProxyCacheWriter&lt;/strong&gt; attached to the proxy Region&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;gatewaysenderdeltacachewriter&#34;&gt;GatewaySenderDeltaCacheWriter&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;GatewaySenderDeltaCacheWriter&lt;/strong&gt; process method:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;initializes the tail key in the event&lt;/li&gt;
&lt;li&gt;sets the tail key as the callback argument of the event&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The tail key is the key in the GatewaySender queue. In normal &lt;code&gt;GatewaySender-enabled&lt;/code&gt; regions, the tail key is initialized by the primary BucketRegion’s &lt;a href=&#34;https://github.com/apache/geode/blob/23c373e2e47d9ab9951fc2b2e19a94e29d756a15/geode-core/src/main/java/org/apache/geode/internal/cache/BucketRegion.java#L578&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;handleWANEvent&lt;/a&gt; method. It is then replicated to redundant servers. Since the data Region in this case is not &lt;code&gt;GatewaySender-enabled&lt;/code&gt;, this doesn’t happen. Once the tail key is initialized in the event, it is set into the callback argument. This is done because the tail key is only replicated between servers in &lt;code&gt;GatewaySender-enabled&lt;/code&gt; Regions. It is ignored in &lt;code&gt;non-GatewaySender-enabled&lt;/code&gt; Regions.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EntryEvent&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isFromRemoteWANSite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Update the tailKey (which is the key in the queue)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// The tailKey is set by handleWANEvent in the event in the primary.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// It won&amp;#39;t be called in this case since the data region is not WAN-enabled.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;setTailKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Set the callback argument since the tail key is not serialized between members
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// if the region is not wan-enabled.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setCallbackArgument&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getTailKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;strong&gt;GatewaySenderDeltaCacheWriter&lt;/strong&gt; &lt;code&gt;setTailKey&lt;/code&gt; method invokes the BucketRegion’s &lt;code&gt;handleWANEvent&lt;/code&gt; method to set the tail key.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setTailKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getProxyRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getBucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;handleWANEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;gatewaysenderdeltacachelistener&#34;&gt;GatewaySenderDeltaCacheListener&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;GatewaySenderDeltaCacheListener&lt;/strong&gt; process method:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gets the co-located proxy Region&lt;/li&gt;
&lt;li&gt;creates an &lt;code&gt;EntryEvent&lt;/code&gt; using the proxy Region and input &lt;code&gt;EntryEvent&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;retrieves the proxy Region’s GatewaySenders&lt;/li&gt;
&lt;li&gt;distributes the &lt;code&gt;EntryEvent&lt;/code&gt; to each GatewaySender&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EntryEvent&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isFromRemoteWANSite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Get the GatewaySender proxy region
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxyRegion&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getProxyRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Create the appropriate event
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxyEvent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;createProxyEntryEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxyRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Add the event to any GatewaySender queues
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;deliverToGatewaySenderQueues&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxyEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;strong&gt;GatewaySenderDeltaCacheListener&lt;/strong&gt; &lt;code&gt;createProxyEntryEvent&lt;/code&gt; method creates the &lt;code&gt;EntryEvent&lt;/code&gt; on the proxy Region.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;EntryEvent&lt;/code&gt; contains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/cache/Operation.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Operation&lt;/a&gt; (CREATE, UPDATE, DESTROY)&lt;/li&gt;
&lt;li&gt;the proxy Region&lt;/li&gt;
&lt;li&gt;the key&lt;/li&gt;
&lt;li&gt;the value bytes if CREATE (full object) or UPDATE (delta)&lt;/li&gt;
&lt;li&gt;a boolean callback argument denoting whether the bytes are delta or full&lt;/li&gt;
&lt;li&gt;the tail key generated by the &lt;strong&gt;GatewaySenderDeltaCacheWriter&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;the originating &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/distributed/DistributedMember.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;DistributedMember&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the originating &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/EventID.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;EventID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the originating &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/ClientProxyMembershipID.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;ClientProxyMembershipID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the originating &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/versions/VersionTag.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;VersionTag&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;createProxyEntryEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxyRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isDelta&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Operation&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDeltaBytes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;newValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDeltaBytes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Operation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;UPDATE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;isDelta&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCachedSerializedNewValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;newValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCachedSerializedNewValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Operation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;isDelta&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Operation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;DESTROY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;isDelta&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxyEvent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxyRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isDelta&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/*callbackArg*/&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isOriginRemote&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDistributedMember&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* generateCallbacks */&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getEventId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;proxyEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setContext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getContext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;proxyEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setVersionTag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getVersionTag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;proxyEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setTailKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCallbackArgument&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxyEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;strong&gt;GatewaySenderDeltaCacheListener&lt;/strong&gt; &lt;code&gt;deliverToGatewaySenderQueues&lt;/code&gt; method retrieves the proxy Region’s GatewaySenders and distributes the event to each one.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;deliverToGatewaySenderQueues&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wanEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wanEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Cache&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;senderIds&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAttributes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getGatewaySenderIds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;senderId&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;senderIds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Get the GatewaySender
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;AbstractGatewaySender&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sender&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AbstractGatewaySender&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getGatewaySender&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;senderId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Distribute the EntryEvent to the GatewaySender
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;distribute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getEnumListenerEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wanEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getOperation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wanEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getRemoteDsIds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;senderIds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;gatewaysenderproxycachewriter&#34;&gt;GatewaySenderProxyCacheWriter&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;GatewaySenderProxyCacheWriter&lt;/strong&gt; process method:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gets the co-located data Region&lt;/li&gt;
&lt;li&gt;invokes the &lt;code&gt;LocalRegion&lt;/code&gt; &lt;a href=&#34;https://github.com/apache/geode/blob/23c373e2e47d9ab9951fc2b2e19a94e29d756a15/geode-core/src/main/java/org/apache/geode/internal/cache/LocalRegion.java#L5181&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;basicBridgePut&lt;/a&gt; or &lt;a href=&#34;https://github.com/apache/geode/blob/23c373e2e47d9ab9951fc2b2e19a94e29d756a15/geode-core/src/main/java/org/apache/geode/internal/cache/LocalRegion.java#L5435&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;basicBridgeDestroy&lt;/a&gt; method depending on the &lt;code&gt;EntryEvent&lt;/code&gt;’s operation and boolean callback argument. The basicBridgePut method is invoked with either the full bytes or delta bytes from the input &lt;code&gt;EntryEvent&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EntryEvent&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isFromRemoteWANSite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[])&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getNewValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;Operation&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getOperation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;callbackArg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCallbackArgument&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getOperation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isDestroy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;getDataRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;basicBridgeDestroy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRawCallbackArgument&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getContext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getClientEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deltaBytes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isObject&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;callbackArg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;deltaBytes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[])&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getNewValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getNewValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;isObject&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;getDataRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;basicBridgePut&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;deltaBytes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isObject&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRawCallbackArgument&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getContext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getClientEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;future&#34;&gt;Future&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/wan/GatewaySenderEventImpl.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewaySenderEventImpl&lt;/a&gt; represents an event being sent between two DistributedSystems. It needs to be modified to be able to store the delta bytes in the sending DistributedSystem, and the &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/command/GatewayReceiverCommand.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewayReceiverCommand&lt;/a&gt; should be modified to be able to apply those delta bytes in the receiving DistributedSystem.&lt;/p&gt;
&lt;p&gt;In addition, the sending DistributedSystem currently has no knowledge of the state of the objects in the receiving DistributedSystem. This has to be changed so that the sending DistributedSystem knows when it must send the full bytes rather than the delta bytes in the case where the receiving DistributedSystem doesn’t have the full object.&lt;/p&gt;
&lt;p&gt;One potential way to do this is to modify the &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/wan/AbstractGatewaySenderEventProcessor.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;AbstractGatewaySenderEventProcessor&lt;/a&gt;. The AbstractGatewaySenderEventProcessor creates &lt;code&gt;GatewaySenderEventImpls&lt;/code&gt;, builds batches of these and causes them to be sent to the receiving DistributedSystem. It could be modified to track which objects in the receiving DistributedSystem require full object bytes rather than the delta bytes. This can be done by tracking the time when the connection to the receiving DistributedSystem was made and also the last time the full object bytes were sent for each entry. If the entry time is before the connection time, the full bytes would be resent; otherwise the delta bytes would be sent. From the sending DistributedSystem’s perspective, if no connection can be made to any server in the receiving DistributedSystem, it is down. When it comes back up (when the sending DistributedSystem can connect to it), it could potentially be a brand new DistributedSystem. The sending DistributedSystem would have no knowledge of this, so the full bytes would have to be sent.&lt;/p&gt;
&lt;p&gt;Another potential way to do this is to modify the &lt;a href=&#34;https://github.com/apache/geode/blob/0abd7667b324da3a88fa341675b68f08118c83cb/geode-wan/src/main/java/org/apache/geode/internal/cache/wan/GatewaySenderEventRemoteDispatcher.java#L581&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewayAck&lt;/a&gt; and &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-wan/src/main/java/org/apache/geode/internal/cache/wan/GatewaySenderEventRemoteDispatcher.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewaySenderEventRemoteDispatcher&lt;/a&gt;. The &lt;code&gt;GatewayAck&lt;/code&gt; is the acknowledgement returned from the receiving DistributedSystem for each batch of &lt;code&gt;GatewaySenderEventImpls&lt;/code&gt;. The &lt;code&gt;GatewaySenderEventRemoteDispatcher&lt;/code&gt; process the &lt;code&gt;GatewayAcks&lt;/code&gt;. The &lt;code&gt;GatewayAck&lt;/code&gt; currently contains among other fields a collection of exceptions that occur while processing the batch on the receiving DistributedSystem. The collection could be modified to contain an &lt;code&gt;InvalidDeltaException&lt;/code&gt; for each entry that doesn’t exist on the remote DistributedSystem. For each one, the &lt;code&gt;GatewaySenderEventRemoteDispatcher&lt;/code&gt; in the sending DistributedSystem could be modified to create and enqueue a GatewaySenderEventImpl with the full bytes.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Calculating the Size of an Apache Geode GatewaySender Queue</title>
      
      <link>/data/tanzu-gemfire/blog/calculating-gatewaysender-event-queue-size/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/calculating-gatewaysender-event-queue-size/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The in-memory size of an Apache Geode &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/cache/wan/GatewaySender.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewaySender&lt;/a&gt; queue can be used to determine the amount of queue memory to allocate for that GatewaySender. The &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/size/ObjectGraphSizer.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;ObjectGraphSizer&lt;/a&gt; can be used to calculate the size of any object in bytes and also to create a histogram of the object being sized. It does this by recursively traversing each field of the object. An &lt;a href=&#34;https://github.com/apache/geode/blob/77ef0b71d8b98cdac5b6de35a68c20ccba22126e/geode-core/src/main/java/org/apache/geode/internal/size/ObjectGraphSizer.java#L242&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;ObjectFilter&lt;/a&gt; can be used in conjunction with the ObjectGraphSizer to accept or reject each object as it is traversed. Its basic use is to reject objects that shouldn’t be included in the size.&lt;/p&gt;
&lt;p&gt;This article describes how to use the ObjectGraphSizer to calculate the size of a GatewaySender queue.&lt;/p&gt;
&lt;p&gt;Note: See the &lt;a href=&#34;/data/tanzu-gemfire/blog/logging-apache-geode-gatewaysender-queue-events/#gatewaysender-queue-implementation&#34;&gt;GatewaySender Queue Implementation&lt;/a&gt; section of my &lt;strong&gt;Logging Apache Geode GatewaySender Queue Events&lt;/strong&gt; blog for details on the architecture of GatewaySenders.&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;All source code described in this article as well as an example usage is available &lt;a href=&#34;https://github.com/boglesby/calculate-gateway-sender-queue-size&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The implementation consists of a &lt;a href=&#34;https://github.com/boglesby/calculate-gateway-sender-queue-size/blob/master/server/src/main/java/example/server/function/CalculateGatewaySenderQueueEntrySizesFunction.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;CalculateGatewaySenderQueueEntrySizesFunction&lt;/a&gt;, a number of &lt;a href=&#34;https://github.com/boglesby/calculate-gateway-sender-queue-size/blob/master/server/src/main/java/example/server/function/GatewaySenderQueueEntrySizer.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewaySenderQueueEntrySizers&lt;/a&gt; and a &lt;a href=&#34;https://github.com/boglesby/calculate-gateway-sender-queue-size/blob/master/server/src/main/java/example/server/function/GatewayQueueEventRegionEntryObjectFilter.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewayQueueEventRegionEntryObjectFilter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For each input GatewaySender id, the &lt;strong&gt;CalculateGatewaySenderQueueEntrySizesFunction&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gets the GatewaySender for the input identifier&lt;/li&gt;
&lt;li&gt;creates the appropriate &lt;strong&gt;GatewaySenderQueueEntrySizer&lt;/strong&gt; based on the type of GatewaySender&lt;/li&gt;
&lt;li&gt;invokes the &lt;strong&gt;GatewaySenderQueueEntrySizer&lt;/strong&gt; &lt;em&gt;calculateEntrySizes&lt;/em&gt; method&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The supported types of GatewaySenderQueueEntrySizer are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boglesby/calculate-gateway-sender-queue-size/blob/master/server/src/main/java/example/server/function/SerialGatewaySenderQueueEntrySizer.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;SerialGatewaySenderQueueEntrySizer&lt;/a&gt; for serial GatewaySenders&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boglesby/calculate-gateway-sender-queue-size/blob/master/server/src/main/java/example/server/function/ParallelGatewaySenderQueueEntrySizer.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;ParallelGatewaySenderQueueEntrySizer&lt;/a&gt; for parallel GatewaySenders&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/boglesby/calculate-gateway-sender-queue-size/blob/master/server/src/main/java/example/server/function/ParallelGatewaySenderQueueByBucketEntrySizer.java****&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;ParallelGatewaySenderQueueByBucketEntrySizer&lt;/a&gt; for parallel GatewaySenders whose entries are to be sized by bucket&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The GatewayQueueEventRegionEntryObjectFilter is used by ObjectGraphSizer to include or exclude specific objects from the entry size.&lt;/p&gt;
&lt;h3 id=&#34;serial-gatewaysender&#34;&gt;Serial GatewaySender&lt;/h3&gt;
&lt;p&gt;The SerialGatewaySenderQueueEntrySizer is used to size serial GatewaySender entries. It:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gets and sorts the replicated Regions implementing the GatewaySender queue (one per dispatcher thread)&lt;/li&gt;
&lt;li&gt;streams each Region sorted by name and calculates the size of its entries sorted by key&lt;/li&gt;
&lt;li&gt;adds a summary of total sizes&lt;/li&gt;
&lt;li&gt;logs the results&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get-queue-regions&#34;&gt;Get Queue Regions&lt;/h4&gt;
&lt;p&gt;The &lt;em&gt;getRegions&lt;/em&gt; method gets a sorted list of the serial GatewaySender’s Regions like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InternalGatewaySender&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getQueues&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rq&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Comparator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;comparing&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;collect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Collectors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;calculate-queue-region-sizes&#34;&gt;Calculate Queue Region Sizes&lt;/h4&gt;
&lt;p&gt;The &lt;em&gt;addAndReturnSizes&lt;/em&gt; method streams the queue Region’s entries, sorts them by long key, invokes addAndReturnSize for each and sums their sizes like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;addAndReturnSizes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringBuilder&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;summaryOnly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;totalBytes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NonTXEntry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;entrySet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegionEntry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;mapToLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addAndReturnSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;summaryOnly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;totalBytes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;em&gt;addAndReturnSize&lt;/em&gt; method calculates the size of an entry using the ObjectGraphSizer and &lt;strong&gt;GatewayQueueEventRegionEntryObjectFilter&lt;/strong&gt; like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;addAndReturnSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringBuilder&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RegionEntry&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regionEntry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;summaryOnly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;numBytes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0l&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;ObjectGraphSizer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;ObjectFilter&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GatewayQueueEventRegionEntryObjectFilter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;numBytes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ObjectGraphSizer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regionEntry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;summaryOnly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;addEntry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regionEntry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;numBytes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLogger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;warning&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Caught exception attempting to dump the size of &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regionEntry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;numBytes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;accept-or-reject-objects&#34;&gt;Accept or Reject Objects&lt;/h4&gt;
&lt;p&gt;The &lt;em&gt;accept&lt;/em&gt; method rejects objects with specific conditions like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;accept&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RegionEntry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EnumListenerEvent&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TransactionId&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EventID&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GatewaySenderEventImpl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;accept&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;example-output&#34;&gt;Example Output&lt;/h4&gt;
&lt;p&gt;The primary server’s log file will contain a message for the serial GatewaySender’s primary entries like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2021/01/02 09:18:15.760 HST &amp;lt;ServerConnection on port 58546 Thread 2&amp;gt; tid=0x7e] 
Serial GatewaySender nyserial contains the following 1000 primary entries and sizes grouped by dispatcher:

 Dispatcher nyserial.0 contains the following 200 entries:
  key=0; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=808
  key=1; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=624
  key=2; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=856
  key=3; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,224
  key=4; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=720
  ...
  
 Dispatcher nyserial.0 contains 171,608 total bytes

 Dispatcher nyserial.1 contains the following 200 entries:
  key=0; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=472
  key=1; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=504
  key=2; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=520
  key=3; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=792
  key=4; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,312
  ...

 Dispatcher nyserial.1 contains 180,528 total bytes

 Dispatcher nyserial.2 contains the following 200 entries:
  key=0; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,120
  key=1; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,264
  key=2; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,104
  key=3; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=792
  key=4; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=968
  ...

 Dispatcher nyserial.2 contains 177,848 total bytes

 Dispatcher nyserial.3 contains the following 200 entries:
  key=0; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,240
  key=1; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,048
  key=2; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,040
  key=3; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,016
  key=4; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,104
  ...

 Dispatcher nyserial.3 contains 170,504 total bytes

 Dispatcher nyserial.4 contains the following 200 entries:
  key=0; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,240
  key=1; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=728
  key=2; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=848
  key=3; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=912
  key=4; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=496
  ...

 Dispatcher nyserial.4 contains 178,424 total bytes

Serial GatewaySender nyserial contains 1000 primary entries entries consisting of 878,912 bytes
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Any secondary server’s log file will contain a message for the serial GatewaySender’s secondary events like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2021/01/02 09:18:15.729 HST &amp;lt;ServerConnection on port 58457 Thread 2&amp;gt; tid=0x89] 
Serial GatewaySender nyserial contains the following 1000 secondary entries and sizes grouped by dispatcher:

 Dispatcher nyserial.0 contains the following 200 entries:
  key=0; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=840
  key=1; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=656
  key=2; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=888
  key=3; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=1,256
  key=4; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=752
  ...

 Dispatcher nyserial.0 contains 178,008 total bytes

 Dispatcher nyserial.1 contains the following 200 entries:
  key=0; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=504
  key=1; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=536
  key=2; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=552
  key=3; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=824
  key=4; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=1,344
  ...

 Dispatcher nyserial.1 contains 186,928 total bytes

 Dispatcher nyserial.2 contains the following 200 entries:
  key=0; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=1,152
  key=1; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=1,296
  key=2; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=1,136
  key=3; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=824
  key=4; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=1,000
  ...

 Dispatcher nyserial.2 contains 184,248 total bytes

 Dispatcher nyserial.3 contains the following 200 entries:
  key=0; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=1,272
  key=1; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=1,080
  key=2; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=1,072
  key=3; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=1,048
  key=4; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=1,136
  ...

 Dispatcher nyserial.3 contains 176,904 total bytes

 Dispatcher nyserial.4 contains the following 200 entries:
  key=0; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=1,272
  key=1; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=760
  key=2; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=880
  key=3; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=944
  key=4; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=VMCachedDeserializable; numBytes=528
  ...

 Dispatcher nyserial.4 contains 184,824 total bytes

Serial GatewaySender nyserial contains 1000 secondary entries entries consisting of 910,912 bytes
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;parallel-gatewaysender&#34;&gt;Parallel GatewaySender&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;ParallelGatewaySenderQueueEntrySizer&lt;/strong&gt; is used to size parallel GatewaySender entries. It:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gets the PartitionedRegion implementing the GatewaySender’s queue&lt;/li&gt;
&lt;li&gt;gets the PartitionedRegion’s local primary entries&lt;/li&gt;
&lt;li&gt;streams the primary entries sorted by key and calculates its size&lt;/li&gt;
&lt;li&gt;repeats the previous two steps for the local secondary entries&lt;/li&gt;
&lt;li&gt;adds a summary of total sizes&lt;/li&gt;
&lt;li&gt;logs the results&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get-queue-region&#34;&gt;Get Queue Region&lt;/h4&gt;
&lt;p&gt;The PartitionedRegion implementing the parallel GatewaySender’s queue is retrieved using code like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ParallelGatewaySenderQueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;QSTRING&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;get-primary-queue-entries&#34;&gt;Get Primary Queue Entries&lt;/h4&gt;
&lt;p&gt;The set of local primary BucketRegions is retrieved from the PartitionedRegion using code like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;brs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDataStore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAllLocalPrimaryBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;em&gt;getEntries&lt;/em&gt; method gets a list of all the primary entries by streaming the set of BucketRegions and flat-mapping their entries like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NonTXEntry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getEntries&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;brs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NonTXEntry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;brs&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;flatMap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;entrySet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;collect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Collectors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;get-secondary-queue-entries&#34;&gt;Get Secondary Queue Entries&lt;/h4&gt;
&lt;p&gt;There isn’t an existing method to get the set of local secondary BucketRegions like the getAllLocalPrimaryBucketRegions method for primary BucketRegions. The &lt;em&gt;getLocalSecondaryBucketRegions&lt;/em&gt; method gets the set of local secondary BucketRegions like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getLocalSecondaryBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;primaryBucketRegions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDataStore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAllLocalPrimaryBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allBucketRegions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HashSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDataStore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAllLocalBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;allBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;removeAll&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;primaryBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;em&gt;getEntries&lt;/em&gt; method above gets a list of all the secondary entries.&lt;/p&gt;
&lt;h4 id=&#34;calculate-sizes-of-the-queue-entries&#34;&gt;Calculate Sizes of the Queue Entries&lt;/h4&gt;
&lt;p&gt;The &lt;em&gt;addAndReturnSizes&lt;/em&gt; method streams the list of entries, sorts them by long key, invokes addAndReturnSize for each and sums their sizes like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;addAndReturnSizes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringBuilder&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NonTXEntry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entries&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;summaryOnly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isPrimary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;totalBytes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entries&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegionEntry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;mapToLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addAndReturnSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;summaryOnly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;totalBytes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;em&gt;addAndReturnSize&lt;/em&gt; method in the serial case above is used to calculate size of an entry.&lt;/p&gt;
&lt;h4 id=&#34;example-output-1&#34;&gt;Example Output&lt;/h4&gt;
&lt;p&gt;Each server’s log file will contain a message for the parallel GatewaySender’s primary and secondary queues like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2021/01/02 09:19:47.956 HST &amp;lt;ServerConnection on port 58395 Thread 4&amp;gt; tid=0x8d] 
Parallel GatewaySender ny contains the following 331 primary entries and sizes:
  key=114; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,408
  key=117; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=792
  key=119; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=752
  key=120; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,072
  key=122; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=744
  ...

Parallel GatewaySender ny contains the following 335 secondary entries and sizes:
  key=118; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,248
  key=123; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=784
  key=126; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,408
  key=128; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,112
  key=133; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,000
  ...

Parallel GatewaySender ny contains:

 331 primary entries consisting of 293,384 bytes
 335 secondary entries consisting of 294,272 bytes
 666 total entries consisting of 587,656 bytes
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;parallel-gatewaysender-grouped-by-bucket&#34;&gt;Parallel GatewaySender Grouped By Bucket&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;ParallelGatewaySenderQueueByBucketEntrySizer&lt;/strong&gt; is used to size parallel GatewaySender entries grouped by bucket. It:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gets the PartitionedRegion implementing the GatewaySender’s queue&lt;/li&gt;
&lt;li&gt;gets the PartitionedRegion’s local primary BucketRegions&lt;/li&gt;
&lt;li&gt;streams the local primary BucketRegions sorted by id and calculates its size&lt;/li&gt;
&lt;li&gt;streams each BucketRegion’s entries sorted by long key and calculates its size&lt;/li&gt;
&lt;li&gt;repeats the previous three steps for the local secondary BucketRegions&lt;/li&gt;
&lt;li&gt;adds a summary of total sizes&lt;/li&gt;
&lt;li&gt;logs the results&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get-queue-region-1&#34;&gt;Get Queue Region&lt;/h4&gt;
&lt;p&gt;The PartitionedRegion implementing the parallel GatewaySender’s queue is retrieved using code like above.&lt;/p&gt;
&lt;h4 id=&#34;get-primary-bucketregions&#34;&gt;Get Primary BucketRegions&lt;/h4&gt;
&lt;p&gt;The set of local primary BucketRegions is retrieved from the PartitionedRegion using code like above.&lt;/p&gt;
&lt;h4 id=&#34;get-secondary-bucketregions&#34;&gt;Get Secondary BucketRegions&lt;/h4&gt;
&lt;p&gt;The set of local secondary BucketRegions is retrieved from the PartitionedRegion using the &lt;em&gt;getLocalSecondaryBucketRegions&lt;/em&gt; method above.&lt;/p&gt;
&lt;h4 id=&#34;calculate-sizes-of-the-bucketregions&#34;&gt;Calculate Sizes of the BucketRegions&lt;/h4&gt;
&lt;p&gt;The &lt;em&gt;addAndReturnSizes&lt;/em&gt; method streams the set of BucketRegions, sorts them by id, invokes &lt;em&gt;addAndReturnSizes&lt;/em&gt; for each and sums their sizes like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;addAndReturnSizes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringBuilder&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;brs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;numEntries&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;summaryOnly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isPrimary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;brs&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Comparator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;comparingInt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;mapToLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addAndReturnSizes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;summaryOnly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;calculate-size-of-the-entries-in-a-bucketregion&#34;&gt;Calculate Size of the Entries in a BucketRegion&lt;/h4&gt;
&lt;p&gt;The &lt;em&gt;addAndReturnSizes&lt;/em&gt; method streams a BucketRegion’s entries, sorts them by long key, invokes &lt;em&gt;addAndReturnSize&lt;/em&gt; for each and sums their sizes like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;addAndReturnSizes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringBuilder&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;summaryOnly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;totalBytes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NonTXEntry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;entrySet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegionEntry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;mapToLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addAndReturnSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;summaryOnly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;totalBytes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The addAndReturnSize method in the serial case above is used to calculate size of an entry.&lt;/p&gt;
&lt;h4 id=&#34;example-output-2&#34;&gt;Example Output&lt;/h4&gt;
&lt;p&gt;Each server’s log file will contain a message for the parallel GatewaySender’s primary and secondary queues like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2021/01/02 09:21:08.501 HST &amp;lt;ServerConnection on port 58395 Thread 5&amp;gt; tid=0x8f] 
Parallel GatewaySender ny contains the following 38 primary buckets consisting of 331 total entries and sizes grouped by bucket:

 Bucket 1 contains the following 9 entries and sizes:
  key=114; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,408
  key=227; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,328
  key=340; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,000
  key=453; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=536
  key=566; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,128
  key=679; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=744
  key=792; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=432
  key=905; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,216
  key=1018; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=440

 Bucket 1 contains 8,232 total bytes

 Bucket 4 contains the following 10 entries and sizes:
  key=117; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=792
  key=230; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=672
  key=343; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=640
  key=456; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=912
  key=569; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,208
  key=682; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=872
  key=795; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,360
  key=908; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=696
  key=1021; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=704
  key=1134; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,336

 Bucket 4 contains 9,192 total bytes

 Bucket 6 contains the following 7 entries and sizes:
  key=119; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=752
  key=232; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,192
  key=345; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=800
  key=458; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,120
  key=571; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,272
  key=684; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=928
  key=797; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,280

 Bucket 6 contains 7,344 total bytes

 Bucket 7 contains the following 7 entries and sizes:
  key=120; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,072
  key=233; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=496
  key=346; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,272
  key=459; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=728
  key=572; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,096
  key=685; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=448
  key=798; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,152

 Bucket 7 contains 6,264 total bytes

 Bucket 9 contains the following 5 entries and sizes:
  key=122; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=744
  key=235; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=488
  key=348; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,216
  key=461; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=488
  key=574; entryClass=VMThinDiskLRURegionEntryHeapLongKey; valueClass=GatewaySenderEventImpl; numBytes=1,344

 Bucket 9 contains 4,280 total bytes

 ...

Parallel GatewaySender ny contains:

 331 primary entries consisting of 293,384 bytes
 335 secondary entries consisting of 294,272 bytes
 666 total entries consisting of 587,656 bytes
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;future&#34;&gt;Future&lt;/h2&gt;
&lt;p&gt;A GatewaySender API that uses the ObjectGraphSizer to calculate its size in bytes would be a very useful addition to Apache Geode.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Calculating Apache Geode GatewaySender Event Queue, Transmission and Processing Times </title>
      
      <link>/data/tanzu-gemfire/blog/calculating-gatewaysender-event-queue-transmission-processing-times/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/calculating-gatewaysender-event-queue-transmission-processing-times/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Calculating queue, transmission and total processing times for Apache Geode &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/cache/wan/GatewaySender.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewaySender&lt;/a&gt; events can be helpful for WAN resource capacity planning like the amount of queue memory to allocate and the number of dispatcher threads to configure. Unfortunately, this data is not readily available in Apache Geode out-of-the-box.&lt;/p&gt;
&lt;p&gt;This article describes how to implement a &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/cache/wan/GatewayEventFilter.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewayEventFilter&lt;/a&gt; to calculate these times using a custom Apache Geode &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/Statistics.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Statistics&lt;/a&gt; object readable via &lt;a href=&#34;https://gemtalksystems.com/products/vsd/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;vsd&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;All source code described in this article is available &lt;a href=&#34;https://github.com/boglesby/calculate-gateway-sender-event-times&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/calculate-gateway-sender-event-times/blob/master/server/src/main/java/example/server/filter/TimingGatewayEventFilter.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;TimingGatewayEventFilter&lt;/a&gt; implements the GatewayEventFilter interface to calculate queue, transmission and total processing times for GatewaySender events. The interface defines three methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;beforeEnqueue&lt;/strong&gt; is invoked before the &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/cache/wan/GatewayQueueEvent.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewayQueueEvent&lt;/a&gt; is added to the queue&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;beforeTransmit&lt;/strong&gt; is invoked after the GatewayQueueEvent is removed from the queue but before it is transmitted to the remote site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;afterAcknowledgement&lt;/strong&gt; is invoked after the GatewayQueueEvent acknowledgement is received from the remote site&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/calculate-gateway-sender-event-times/blob/master/server/src/main/java/example/server/statistics/GatewaySenderQueueStatistics.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewaySenderQueueStatistics&lt;/a&gt; creates a custom Statistics object that defines the following statistics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;queuedEvents&lt;/strong&gt; — the number of events added to the GatewaySender’s queue&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;transmittedEvents&lt;/strong&gt; — the number of events transmitted to the remote site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;acknowledgedEvents&lt;/strong&gt; — the number of events acknowledged by the remote site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;minimumQueueTime&lt;/strong&gt; — the minimum time an event spent in the GatewaySender’s queue&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;maximumQueueTime&lt;/strong&gt; — the maximum time an event spent in the GatewaySender’s queue&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;totalQueueTime&lt;/strong&gt; — the total time events spent in the GatewaySender’s queue&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;minimumTransmissionTime&lt;/strong&gt; — the minimum time an event spent in transmission including processing time on the remote site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;maximumTransmissionTime&lt;/strong&gt; — the maximum time an event spent in transmission including processing time on the remote site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;totalTransmissionTime&lt;/strong&gt; — the total time events spent in transmission including processing time on the remote site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;minimumProcessingTime&lt;/strong&gt; — the minimum time an event spent being processed including queue time on the local site, transmission time between sites and processing time on the remote site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;maximumProcessingTime&lt;/strong&gt; — the maximum time an event spent being processed including queue time on the local site, transmission time between sites and processing time on the remote site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;totalProcessingTime&lt;/strong&gt; — the total time events spent being processed including queue time on the local site, transmission time between sites and processing time on the remote site&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: The &lt;strong&gt;queuedEvents&lt;/strong&gt; statistic is the same as &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/wan/GatewaySenderStats.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewaySenderStatistics&lt;/a&gt; eventsQueued, and the &lt;strong&gt;transmittedEvents&lt;/strong&gt; statistic is the same as GatewaySenderStatistics eventsDistributed. They are included here for completeness.&lt;/p&gt;
&lt;h3 id=&#34;before-enqueueing-the-gatewayqueueevent&#34;&gt;Before Enqueueing the GatewayQueueEvent&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;TimingGatewayEventFilter&lt;/strong&gt; beforeEnqueue method is invoked for each GatewayQueueEvent before it is added to the queue. It tracks the queue start time and invokes the &lt;strong&gt;GatewaySenderQueueStatistics&lt;/strong&gt; beforeEnqueue method.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;beforeEnqueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GatewayQueueEvent&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// Increment the queued events
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;queueStatistics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;beforeEnqueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Set the queue start time for this event
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;GatewaySenderEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GatewaySenderEventImpl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;queueStartTimes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getShadowKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;strong&gt;GatewaySenderQueueStatistics&lt;/strong&gt; beforeEnqueue method increments the queued events.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;beforeEnqueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;incLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queuedEventsId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;before-transmitting-the-gatewayqueueevent&#34;&gt;Before Transmitting the GatewayQueueEvent&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;TimingGatewayEventFilter&lt;/strong&gt; beforeTransmit method is invoked for each GatewayQueueEvent before it is transmitted to the remote site. It retrieves the queue start time, tracks the transmission start time and invokes the &lt;strong&gt;GatewaySenderQueueStatistics&lt;/strong&gt; beforeTransmit method.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;beforeTransmit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GatewayQueueEvent&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// This method can be called multiple times for the same batch if the remote site is
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// not connected.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;GatewaySenderEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GatewaySenderEventImpl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(!&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;transmissionStartTimes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;containsKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getShadowKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Get the current time and update the statistics
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;queueStatistics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;beforeTransmit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;queueStartTimes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getShadowKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    
    &lt;span class=&#34;c1&#34;&gt;// Set the transmit start time for this event
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;transmissionStartTimes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getShadowKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;strong&gt;GatewaySenderQueueStatistics&lt;/strong&gt; beforeTransmit method increments the transmitted events and total, minimum and maximum time spent on the queue.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;beforeTransmit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueStartTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueStartTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;incLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transmittedEventsId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  
  &lt;span class=&#34;c1&#34;&gt;// Update queue time statistics
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;incLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;totalQueueTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;minimumQueueTimeNotSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;compareAndSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minimumQueueTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minimumQueueTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maximumQueueTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maximumQueueTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;after-receiving-the-gatewayqueueevent-acknowledgement&#34;&gt;After Receiving the GatewayQueueEvent Acknowledgement&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;TimingGatewayEventFilter&lt;/strong&gt; afterAcknowledgement method is invoked for each GatewayQueueEvent after its acknowledgement has been received from the remote site. It retrieves the queue and transmission start times and invokes the &lt;strong&gt;GatewaySenderQueueStatistics&lt;/strong&gt; afterAcknowledgement method.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;afterAcknowledgement&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GatewayQueueEvent&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// Get transmit start time for this event
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;GatewaySenderEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GatewaySenderEventImpl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueStartTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;queueStartTimes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getShadowKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;transmissionStartTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;transmissionStartTimes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getShadowKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
  
  &lt;span class=&#34;c1&#34;&gt;// If the event was not transmitted by this member, ignore it.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// Only handle primary events.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transmissionStartTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Update the statistics
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;queueStatistics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;afterAcknowledgement&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transmissionStartTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueStartTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;strong&gt;GatewaySenderQueueStatistics&lt;/strong&gt; afterAcknowledgement method increments the acknowledged events and total, minimum and maximum transmission time as well as the total, minimum and maximum processing time.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;afterAcknowledgement&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;transmissionStartTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueStartTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;transmissionTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;transmissionStartTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;processTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentTime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueStartTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  
  &lt;span class=&#34;c1&#34;&gt;// Update acknowledged events
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;incLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;acknowledgedEventsId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  
  &lt;span class=&#34;c1&#34;&gt;// Update transmission time statistics
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;incLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;totalTransmissionTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;transmissionTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;minimumTransmissionTimeNotSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;compareAndSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minimumTransmissionTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;transmissionTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minimumTransmissionTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;transmissionTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maximumTransmissionTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;transmissionTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maximumTransmissionTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;transmissionTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  
  &lt;span class=&#34;c1&#34;&gt;// Update processing time statistics
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;incLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;totalProcessingTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;processTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;minimumProcessingTimeNotSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;compareAndSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minimumProcessingTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;processTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minimumProcessingTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;processTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maximumProcessingTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;processTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maximumProcessingTimeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;processTime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;statistics-output&#34;&gt;Statistics Output&lt;/h2&gt;
&lt;p&gt;Sample vsd charts for the statistics defined by the &lt;strong&gt;GatewaySenderQueueStatistics&lt;/strong&gt; are shown below.&lt;/p&gt;
&lt;h3 id=&#34;queued-transmitted-and-acknowledged-events&#34;&gt;Queued, Transmitted and Acknowledged Events&lt;/h3&gt;
&lt;p&gt;This chart shows the number of events queued, transmitted and acknowledged for the specific GatewaySender.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/calculating-gatewaysender-event-queue-transmission-processing-times/barry_2020_12_01_vsd_events.gif&#34; alt=&#34;This vsd chart shows the GatewaySenderQueueStatistics queuedEvents (selected), transmittedEvents and acknowledgedEvents&#34;  /&gt;&lt;/p&gt;
&lt;h3 id=&#34;queue-transmission-and-processing-times&#34;&gt;Queue, Transmission and Processing Times&lt;/h3&gt;
&lt;p&gt;This chart shows total queue, transmission and processing times for all of the GatewaySender’s events.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/calculating-gatewaysender-event-queue-transmission-processing-times/barry_2020_12_01_vsd_times.gif&#34; alt=&#34;This vsd chart shows the GatewayenderQueueStatistics totalQueueTime (selected), totalTransmissionTime and totalProcessingTime&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;future&#34;&gt;Future&lt;/h2&gt;
&lt;p&gt;GatewaySender event queue, transmission and processing time statistics like these available out-of-the-box would be a useful addition to Apache Geode.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Implementing a Spring Boot JMX Notification Listener for Apache Geode</title>
      
      <link>/data/tanzu-gemfire/blog/spring-boot-jmx-notification-listener/</link>
      <pubDate>Mon, 12 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/spring-boot-jmx-notification-listener/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Apache Geode issues JMX Notifications for specific &lt;a href=&#34;https://geode.apache.org/docs/guide/14/managing/management/list_of_mbean_notifications.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;system events&lt;/a&gt; and system alerts (e.g. warning and severe messages).&lt;/p&gt;
&lt;p&gt;JMX Notifications include but are not limited to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;when members join and leave the DistributedSystem&lt;/li&gt;
&lt;li&gt;when Regions are created and destroyed&lt;/li&gt;
&lt;li&gt;when GatewaySenders are created, started and stopped&lt;/li&gt;
&lt;li&gt;when warning or above messages are logged (depending on the DistributedSystemMXBean &lt;a href=&#34;https://github.com/apache/geode/blob/c78dddd28f5dd18861668a83327b54bac8c7050b/geode-core/src/main/java/org/apache/geode/management/DistributedSystemMXBean.java#L157&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;alert level&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This article describes a Spring Boot JMX Notification listener application that connects to and listens for JMX Notifications from Apache Geode members.&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;All source code described in this article is available &lt;a href=&#34;https://github.com/boglesby/jmx-notification-listener&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/jmx-notification-listener/blob/master/src/main/java/example/client/jmx/GeodeJmxNotificationListener.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GeodeJmxNotificationListener&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;connects to the MBeanServer running in the JMX manager (the locator)&lt;/li&gt;
&lt;li&gt;changes the DistributedSystemMXBean’s alert level from severe (the default) to warning&lt;/li&gt;
&lt;li&gt;adds itself as a NotificationListener to the DistributedSystemMXBean&lt;/li&gt;
&lt;li&gt;handles JMX Notifications by handing them off to a &lt;a href=&#34;https://github.com/boglesby/jmx-notification-listener/blob/master/src/main/java/example/client/jmx/JmxNotificationHandler.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;JmxNotificationHandler&lt;/a&gt; for processing&lt;/li&gt;
&lt;li&gt;implements the &lt;a href=&#34;https://github.com/boglesby/jmx-notification-listener/blob/master/src/main/java/example/client/jmx/JmxConnectionHandler.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;JmxConnectionHandler&lt;/a&gt; interface to manipulate the JMX connection&lt;/li&gt;
&lt;li&gt;implements the &lt;a href=&#34;https://github.com/boglesby/jmx-notification-listener/blob/master/src/main/java/example/client/jmx/JmxNotificationsAccessor.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;JmxNotificationsAccessor&lt;/a&gt; interface to provide access to the JMX Notifications.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/jmx-notification-listener/blob/master/src/main/java/example/client/JmxNotificationClient.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;JmxNotificationClient&lt;/a&gt; application class autowires the &lt;strong&gt;GeodeJmxNotificationListener&lt;/strong&gt; as a &lt;strong&gt;JmxConnectionHandler&lt;/strong&gt;, and its &lt;a href=&#34;https://github.com/boglesby/jmx-notification-listener/blob/a3b5d04134e29a42bd227aa33be95ad7191801b3/src/main/java/example/client/JmxNotificationClient.java#L32&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;connectJmxConnectionHandler&lt;/a&gt; Bean method causes the connection to the JMX manager to be made.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/jmx-notification-listener/blob/a3b5d04134e29a42bd227aa33be95ad7191801b3/src/main/java/example/client/controller/GeodeJmxNotificationController.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GeodeJmxNotificationController&lt;/a&gt; REST controller class autowires the &lt;strong&gt;GeodeJmxNotificationListener&lt;/strong&gt; as a &lt;strong&gt;JmxNotificationsAccessor&lt;/strong&gt; to access the JMX Notifications.&lt;/p&gt;
&lt;h3 id=&#34;connect-to-the-mbeanserver&#34;&gt;Connect to the MBeanServer&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/jmx-notification-listener/blob/a3b5d04134e29a42bd227aa33be95ad7191801b3/src/main/java/example/client/jmx/GeodeJmxNotificationListener.java#L55&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;connectToMBeanServer&lt;/a&gt; method repeatedly attempts to connect to the MBeanServer in the JMX manager until it succeeds. A connection attempt will be made every 5 seconds by default (controlled by the &lt;em&gt;jmx.listener.connection.retry.delay&lt;/em&gt; property).&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/jmx-notification-listener/blob/a3b5d04134e29a42bd227aa33be95ad7191801b3/src/main/java/example/client/jmx/GeodeJmxNotificationListener.java#L73&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;attemptToConnectToMBeanServer&lt;/a&gt; method actually makes the connection like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;attemptToConnectToMBeanServer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// Create JMXServiceURL
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;urlStr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CONNECTION_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;hostName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;hostName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;JMXServiceURL&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;JMXServiceURL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;urlStr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Attempting to connect to {}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Create the JMXConnector
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;JMXConnector&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jmxConnector&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;JMXConnectorFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Connected to {}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Get the MBeanServerConnection
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;serverConnection&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jmxConnector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getMBeanServerConnection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;connected&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Initialize the system mbean name
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;distributedSystem&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ObjectName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DISTRIBUTED_SYSTEM_MBEAN_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Monitoring {}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;distributedSystem&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the connection cannot be made, messages like these will be logged:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2020-10-06 08:40:01.631  INFO 14635 --- [         task-1] e.c.jmx.GeodeJmxNotificationListener     : Attempting to connect to service:jmx:rmi://localhost/jndi/rmi://localhost:1099/jmxrmi
2020-10-06 08:40:01.634  WARN 14635 --- [         task-1] e.c.jmx.GeodeJmxNotificationListener     : Caught the following exception attempting to connect to the JMX manager at localhost:1099. Will retry in 5000 ms.
java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.ServiceUnavailableException [Root exception is java.rmi.ConnectException: Connection refused to host: localhost; nested exception is: 
  java.net.ConnectException: Connection refused (Connection refused)]
  at javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:369) ~[na:1.8.0_151]
  at javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:270) ~[na:1.8.0_151]
  at javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:229) ~[na:1.8.0_151]
  at example.client.jmx.GeodeJmxNotificationListener.attemptToConnectToMBeanServer(GeodeJmxNotificationListener.java:80) ~[main/:na]
  at example.client.jmx.GeodeJmxNotificationListener.connectToMBeanServer(GeodeJmxNotificationListener.java:58) ~[main/:na]
Caused by: javax.naming.ServiceUnavailableException: null
  at com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:136) ~[na:1.8.0_151]
  at com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.java:205) ~[na:1.8.0_151]
  at javax.naming.InitialContext.lookup(InitialContext.java:417) ~[na:1.8.0_151]
  at javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnector.java:1955) ~[na:1.8.0_151]
  at javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.java:1922) ~[na:1.8.0_151]
  at javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:287) ~[na:1.8.0_151]
Caused by: java.rmi.ConnectException: Connection refused to host: localhost; nested exception is: 
  java.net.ConnectException: Connection refused (Connection refused)
  at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:619) ~[na:1.8.0_151]
  at sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:216) ~[na:1.8.0_151]
  at sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:202) ~[na:1.8.0_151]
  at sun.rmi.server.UnicastRef.newCall(UnicastRef.java:338) ~[na:1.8.0_151]
  at sun.rmi.registry.RegistryImpl_Stub.lookup(RegistryImpl_Stub.java:112) ~[na:1.8.0_151]
  at com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:132) ~[na:1.8.0_151]
Caused by: java.net.ConnectException: Connection refused (Connection refused)
  at java.net.PlainSocketImpl.socketConnect(Native Method) ~[na:1.8.0_151]
  at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_151]
  at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_151]
  at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_151]
  at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_151]
  at java.net.Socket.connect(Socket.java:589) ~[na:1.8.0_151]
  at java.net.Socket.connect(Socket.java:538) ~[na:1.8.0_151]
  at java.net.Socket.&amp;lt;init&amp;gt;(Socket.java:434) ~[na:1.8.0_151]
  at java.net.Socket.&amp;lt;init&amp;gt;(Socket.java:211) ~[na:1.8.0_151]
  at sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:40) ~[na:1.8.0_151]
  at sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:148) ~[na:1.8.0_151]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once the connection is made, messages like these will be logged:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2020-10-06 08:45:11.048  INFO 14848 --- [         task-1] e.c.jmx.GeodeJmxNotificationListener     : Attempting to connect to service:jmx:rmi://localhost/jndi/rmi://localhost:1099/jmxrmi
2020-10-06 08:45:11.121  INFO 14848 --- [         task-1] e.c.jmx.GeodeJmxNotificationListener     : Connected to service:jmx:rmi://localhost/jndi/rmi://localhost:1099/jmxrmi
2020-10-06 08:45:11.122  INFO 14848 --- [         task-1] e.c.jmx.GeodeJmxNotificationListener     : Monitoring GemFire:service=System,type=Distributed
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;change-alert-level&#34;&gt;Change Alert Level&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/jmx-notification-listener/blob/a3b5d04134e29a42bd227aa33be95ad7191801b3/src/main/java/example/client/jmx/GeodeJmxNotificationListener.java#L92&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;changeAlertLevel&lt;/a&gt; method invokes the changeAlertLevel operation on the DistributedSystemMXBean to change the alert level from severe to warning like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;changeAlertLevel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;serverConnection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;invoke&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;distributedSystem&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;changeAlertLevel&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;warning&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;java.lang.String&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;add-notificationlistener&#34;&gt;Add NotificationListener&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/jmx-notification-listener/blob/a3b5d04134e29a42bd227aa33be95ad7191801b3/src/main/java/example/client/jmx/GeodeJmxNotificationListener.java#L96&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;addNotificationListener&lt;/a&gt; method adds the &lt;strong&gt;GeodeJmxNotificationListener&lt;/strong&gt; as a NotificationListener to the DistributedSystemMXBean like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;addNotificationListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;serverConnection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;addNotificationListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;distributedSystem&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;handle-notifications&#34;&gt;Handle Notifications&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/jmx-notification-listener/blob/a3b5d04134e29a42bd227aa33be95ad7191801b3/src/main/java/example/client/jmx/GeodeJmxNotificationListener.java#L121&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;handleNotification&lt;/a&gt; method handles &lt;strong&gt;JMX Notifications&lt;/strong&gt; by handing them off to each JMXNotificationHandler like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;handleNotification&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Notification&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;notification&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;handback&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;notifications&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;notification&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;notificationHandlers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;handler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;handleNotification&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;notification&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;handback&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;check-connection-to-the-mbeanserver&#34;&gt;Check Connection to the MBeanServer&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/jmx-notification-listener/blob/a3b5d04134e29a42bd227aa33be95ad7191801b3/src/main/java/example/client/jmx/GeodeJmxNotificationListener.java#L102&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;checkConnection&lt;/a&gt; method verifies the connection to the MBeanServer in the JMX manager is still valid. This method is scheduled to run every 1 second by default (controlled by the &lt;em&gt;jmx.listener.check.connection.delay&lt;/em&gt; property).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;checkConnection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;connected&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Verify the default domain is accessible.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// See ClientCommunicatorAdmin checkConnection and RemoteMBeanServerConnection getDefaultDomain.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;serverConnection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDefaultDomain&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IOException&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ioe&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;connected&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;connectToMBeanServer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Caught the following exception attempting to re-establish the connection:&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the connection is lost, output like this will be logged and the connection will be re-attempted using the &lt;a href=&#34;https://medium.com/@boglesby_2508/implementing-a-spring-boot-jmx-notification-listener-for-apache-geode-f50b743549e1#294c&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;connectToMBeanServer&lt;/a&gt; method described above:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2020-10-11 08:17:25.226  WARN 1906 --- [   scheduling-1] e.c.jmx.GeodeJmxNotificationListener     : Lost the connection to the JMX manager and will attempt to reconnect:

java.rmi.ConnectException: Connection refused to host: localhost; nested exception is: 
  java.net.ConnectException: Connection refused (Connection refused)
  at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:619) ~[na:1.8.0_151]
  at sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:216) ~[na:1.8.0_151]
  at sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:202) ~[na:1.8.0_151]
  at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:129) ~[na:1.8.0_151]
  at com.sun.jmx.remote.internal.PRef.invoke(Unknown Source) ~[na:na]
  at javax.management.remote.rmi.RMIConnectionImpl_Stub.getDefaultDomain(Unknown Source) ~[na:1.8.0_151]
  at javax.management.remote.rmi.RMIConnector$RemoteMBeanServerConnection.getDefaultDomain(RMIConnector.java:1045) ~[na:1.8.0_151]
  at example.client.jmx.GeodeJmxNotificationListener.checkConnection(GeodeJmxNotificationListener.java:107) ~[main/:na]
Caused by: java.net.ConnectException: Connection refused (Connection refused)
  at java.net.PlainSocketImpl.socketConnect(Native Method) ~[na:1.8.0_151]
  at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_151]
  at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_151]
  at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_151]
  at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_151]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;logging&#34;&gt;Logging&lt;/h3&gt;
&lt;p&gt;Implementations of the &lt;strong&gt;JmxNotificationHandler&lt;/strong&gt; interface do the actual handling of the JMX Notification. The example provides one implementation called &lt;strong&gt;LoggingJmxNotificationHandler&lt;/strong&gt; which just logs the JMX Notification. Other implementations could post the JMX Notification to Slack, email it or store it in an external database, for example.&lt;/p&gt;
&lt;p&gt;Examples of logged Notifications include:&lt;/p&gt;
&lt;p&gt;DiskStore disk usage warning:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2020-10-06 11:01:43.781  INFO 17214 --- [otifForwarder-1] e.c.jmx.LoggingJmxNotificationHandler    : LoggingJmxNotificationHandler received notification[source=DistributedSystem(1); type=system.alert; sequence number=12; time stamp=1602018103778; message=The disk volume . for disk store DEFAULT has exceeded the warning usage threshold and is 95% full; userData={AlertLevel=warning, Member=server-1, Thread=DiskStoreMonitor1 tid=0x2e}]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;GatewaySender remote locator warning:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2020-10-06 11:01:51.702  INFO 17214 --- [otifForwarder-1] e.c.jmx.LoggingJmxNotificationHandler    : LoggingJmxNotificationHandler received notification[source=DistributedSystem(1); type=system.alert; sequence number=30; time stamp=1602018111699; message=Remote locator host port information for remote site 2 is not available in local locator 192.168.1.10[10334].; userData={AlertLevel=warning, Member=server-1, Thread=Event Processor for GatewaySender_ny_0 tid=0x44}]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Member joined:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2020-10-06 11:01:33.413  INFO 17214 --- [otifForwarder-1] e.c.jmx.LoggingJmxNotificationHandler    : LoggingJmxNotificationHandler received notification[source=server-1; type=gemfire.distributedsystem.cache.member.joined; sequence number=5; time stamp=1602018093392; message=Member Joined server-1; userData=null]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Member departed / crashed:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2020-10-06 11:03:16.463  INFO 17214 --- [otifForwarder-1] e.c.jmx.LoggingJmxNotificationHandler    : LoggingJmxNotificationHandler received notification[source=server-1; type=gemfire.distributedsystem.cache.member.departed; sequence number=71; time stamp=1602018196460; message=Member Departed server-1 has crashed = true; userData=null]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Region created:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2020-10-06 11:02:08.961  INFO 17214 --- [otifForwarder-1] e.c.jmx.LoggingJmxNotificationHandler    : LoggingJmxNotificationHandler received notification[source=server-1; type=gemfire.distributedsystem.cache.region.created; sequence number=63; time stamp=1602018128958; message=Region Created With Name /PartitionedTrade; userData=server-1]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;rest-apis&#34;&gt;REST APIs&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;GeodeJmxNotificationController&lt;/strong&gt; provides several REST APIs for accessing the JMX Notifications including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;getting the JMX Notifications as JSON&lt;/li&gt;
&lt;li&gt;clearing the JMX Notifications&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getting-the-jmx-notifications&#34;&gt;&lt;strong&gt;Getting the JMX Notifications&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Each JMX Notification is added to a list as it is received. The list of JMX Notifications can be retrieved using the getnotifications request method like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl http://localhost:8080/getnotifications
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The JMX Notifications are returned as JSON strings. Some examples are:&lt;/p&gt;
&lt;p&gt;DiskStore disk usage warning:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;DistributedSystem(1)&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;system.alert&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;sequenceNumber&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;timeStamp&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1601942062695&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;userData&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;nt&#34;&gt;&amp;#34;AlertLevel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;warning&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 &lt;span class=&#34;nt&#34;&gt;&amp;#34;Member&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;server-1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 &lt;span class=&#34;nt&#34;&gt;&amp;#34;Thread&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;DiskStoreMonitor1 tid=0x2f&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;The disk volume . for disk store DEFAULT has exceeded the warning usage threshold and is 95.2% full&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;GatewaySender&lt;/code&gt; remote locator warning:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;DistributedSystem(1)&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;system.alert&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;sequenceNumber&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;timeStamp&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1601942071601&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;userData&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;AlertLevel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;warning&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Member&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;server-1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Thread&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Event Processor for GatewaySender_ny_0 tid=0x43&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Remote locator host port information for remote site 2 is not available in local locator localhost[10334].&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Member joined:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;server-1&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gemfire.distributedsystem.cache.member.joined&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;sequenceNumber&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;timeStamp&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1601942068493&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;userData&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Member Joined server-1&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Member departed / crashed:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;server-1&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gemfire.distributedsystem.cache.member.departed&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;sequenceNumber&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;68&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;timeStamp&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1601942310608&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;userData&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Member Departed server-2 has crashed = true&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Region created:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;server-1&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gemfire.distributedsystem.cache.region.created&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;sequenceNumber&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;59&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;timeStamp&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1601942089284&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;userData&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;server-1&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Region Created With Name /PartitionedTrade&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;clearing-the-jmx-notifications&#34;&gt;&lt;strong&gt;Clearing the JMX Notifications&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;The list of JMX Notifications can be cleared using the clearnotifications request method like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -X POST http://localhost:8080/clearnotifications
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note: the list of JMX Notifications is cleared automatically every 24 hours by default (controlled by the &lt;code&gt;jmx.listener.clear.notifications.delay&lt;/code&gt; property) using the scheduled &lt;code&gt;clearNotifications&lt;/code&gt; method.&lt;/p&gt;
&lt;h2 id=&#34;future&#34;&gt;Future&lt;/h2&gt;
&lt;p&gt;An out-of-the-box Spring Boot JMX Notification client with various supported &lt;code&gt;JmxNotificationHandler&lt;/code&gt; plugins would be a useful addition to Apache Geode.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Logging Apache Geode PartitionedRegion Entry Details Per Bucket</title>
      
      <link>/data/tanzu-gemfire/blog/logging-partitionedregion-entry-details-per-bucket/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/logging-partitionedregion-entry-details-per-bucket/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;An Apache Geode &lt;a href=&#34;https://geode.apache.org/docs/guide/112/developing/partitioned_regions/chapter_overview.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;PartitionedRegion&lt;/a&gt; is a Region that partitions its entries among all the servers that define it. The entries are stored in BucketRegions. Properties that affect the number and location of the BucketRegions include the &lt;a href=&#34;https://geode.apache.org/docs/guide/112/developing/partitioned_regions/configuring_bucket_for_pr.html#configuring_total_buckets&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;total number of buckets&lt;/a&gt; and the &lt;a href=&#34;https://geode.apache.org/docs/guide/112/developing/partitioned_regions/set_pr_redundancy.html#set_pr_redundancy&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;number of redundant copies&lt;/a&gt;. The primary BucketRegion is hosted on one server, and if the number of redundant copies is greater than zero, the redundant BucketRegions are hosted on other servers. In addition, if &lt;a href=&#34;https://geode.apache.org/docs/guide/112/developing/eviction/chapter_overview.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;eviction&lt;/a&gt; with overflow is configured, entry values are evicted to disk once the JVM’s used heap memory reaches a configured percentage of maximum.&lt;/p&gt;
&lt;p&gt;Bucket and entry details available for the entire PartitionedRegion per member or across the DistributedSystem include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the number of buckets&lt;/li&gt;
&lt;li&gt;the number of primary buckets&lt;/li&gt;
&lt;li&gt;the number of bucket entries&lt;/li&gt;
&lt;li&gt;the number of bucket bytes&lt;/li&gt;
&lt;li&gt;the number of bucket entries in memory&lt;/li&gt;
&lt;li&gt;the number of bucket entries on disk&lt;/li&gt;
&lt;li&gt;the number of bucket bytes in memory&lt;/li&gt;
&lt;li&gt;the number of bucket bytes on disk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This article shows how to get similar details for each BucketRegion in the PartitionedRegion.&lt;/p&gt;
&lt;h2 id=&#34;accessing-entry-details-for-the-partitionedregion&#34;&gt;Accessing Entry Details for the PartitionedRegion&lt;/h2&gt;
&lt;p&gt;Currently, the details listed above are available for the PartitionedRegion via either &lt;a href=&#34;https://geode.apache.org/docs/guide/112/managing/statistics/chapter_overview.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Statistics&lt;/a&gt; or &lt;a href=&#34;https://geode.apache.org/docs/guide/112/tools_modules/gfsh/chapter_overview.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;gfsh&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;via-statistics&#34;&gt;Via Statistics&lt;/h3&gt;
&lt;p&gt;Bucket and entry details are provided by PartitionedRegionStats and DiskRegionStatistics.&lt;/p&gt;
&lt;p&gt;A PartitionedRegionStats object is defined for each PartitionedRegion and includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bucketCount — the number of buckets defined in the member&lt;/li&gt;
&lt;li&gt;primaryBucketCount — the number of primary buckets defined in the member&lt;/li&gt;
&lt;li&gt;dataStoreEntryCount — the number of entries in the member&lt;/li&gt;
&lt;li&gt;dataStoreBytesInUse — the number of bytes in memory in the member&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A DiskRegionStatistics object is defined for each persistent or overflowed PartitionedRegion and includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;entriesInVM — the number of entries in memory&lt;/li&gt;
&lt;li&gt;entriesOnlyOnDisk — the number of entries on disk&lt;/li&gt;
&lt;li&gt;bytesOnlyOnDisk — the size of the entries on disk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This vsd chart shows the PartitionedRegionStats bucketCount (selected) and primaryBucketCount:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/logging-partitionedregion-entry-details-per-bucket/barry_2020_09_vsd_1.gif&#34; alt=&#34;This vsd chart shows the PartitionedRegionStats bucketCount (selected) and primaryBucketCount&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;This vsd chart shows PartitionedRegionStats dataStoreBytesInUse (selected) and dataStoreEntryCount:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/logging-partitionedregion-entry-details-per-bucket/barry_2020_09_vsd_2.gif&#34; alt=&#34;This vsd chart shows PartitionedRegionStats dataStoreBytesInUse (selected) and dataStoreEntryCount&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;This vsd chart shows the DiskRegionStatistics bytesOnlyOnDisk (selected), entriesInVM and entriesOnlyOnDisk:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/logging-partitionedregion-entry-details-per-bucket/barry_2020_09_vsd_3.gif&#34; alt=&#34;This vsd chart shows the DiskRegionStatistics bytesOnlyOnDisk (selected), entriesInVM and entriesOnlyOnDisk&#34;  /&gt;&lt;/p&gt;
&lt;h3 id=&#34;via-gfsh&#34;&gt;Via gfsh&lt;/h3&gt;
&lt;p&gt;The gfsh show metrics command lists PartitionedRegion bucket count and entry size per member or across the DistributedSystem.&lt;/p&gt;
&lt;h4 id=&#34;per-member&#34;&gt;Per member:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt;show metrics --region=/Trade --member=server-1
Category  |            Metric            | Value
--------- | ---------------------------- | ------
partition | bucketCount                  | 75
          | primaryBucketCount           | 37
          | totalBucketSize              | 331869
diskstore | totalEntriesOnlyOnDisk       | 134643
gfsh&amp;gt;show metrics --region=/Trade --member=server-2
Category  |            Metric            | Value
--------- | ---------------------------- | ------
partition | bucketCount                  | 75
          | primaryBucketCount           | 38
          | totalBucketSize              | 331862
diskstore | totalEntriesOnlyOnDisk       | 138806
gfsh&amp;gt;show metrics --region=/Trade --member=server-3
Category  |            Metric            | Value
--------- | ---------------------------- | ------
partition | bucketCount                  | 76
          | primaryBucketCount           | 38
          | totalBucketSize              | 336269
diskstore | totalEntriesOnlyOnDisk       | 141941
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;across-the-distributed-system&#34;&gt;Across the Distributed System:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt;show metrics --region=/Trade
Category  |            Metric            | Value
--------- | ---------------------------- | -------
partition | bucketCount                  | 226
          | primaryBucketCount           | 113
          | totalBucketSize              | 1000000
          | averageBucketSize            | 1474
diskstore | totalEntriesOnlyOnDisk       | 415390
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;All source code described in this article as well as an example usage is available &lt;a href=&#34;https://github.com/boglesby/log-partitioned-region-bucket-details&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In order to get the bucket and entry details per BucketRegion, it is necessary to iterate the BucketRegions in each member. The &lt;strong&gt;LogPartitionedRegionBucketDetailsFunction&lt;/strong&gt; and its supporting objects do that.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/log-partitioned-region-bucket-details/blob/master/server/src/main/java/example/PartitionedRegionDetails.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;LogPartitionedRegionBucketDetailsFunction&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gets the PartitionedRegion&lt;/li&gt;
&lt;li&gt;creates and logs a PartitionedRegionDetails&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/log-partitioned-region-bucket-details/blob/master/server/src/main/java/example/PartitionedRegionDetails.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;PartitionedRegionDetails&lt;/a&gt; keeps track of the total number of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;primary and redundant buckets&lt;/li&gt;
&lt;li&gt;bytes in memory and on disk&lt;/li&gt;
&lt;li&gt;entries in memory and on disk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It iterates the BucketRegions and for each:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;creates a &lt;strong&gt;BucketRegionDetails&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;adds the &lt;strong&gt;BucketRegionDetails&lt;/strong&gt; to the appropriate list (primary or redundant)&lt;/li&gt;
&lt;li&gt;increments the appropriate entry totals&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each &lt;a href=&#34;https://github.com/boglesby/log-partitioned-region-bucket-details/blob/master/server/src/main/java/example/BucketRegionDetails.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;BucketRegionDetails&lt;/a&gt; encapsulates:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the number of bucket entries&lt;/li&gt;
&lt;li&gt;the number of bucket entries in memory&lt;/li&gt;
&lt;li&gt;the number of bucket entries on disk&lt;/li&gt;
&lt;li&gt;the number of bucket bytes&lt;/li&gt;
&lt;li&gt;the number of bucket bytes in memory&lt;/li&gt;
&lt;li&gt;the number of bucket bytes on disk&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;execute-logpartitionedregionbucketdetailsfunction&#34;&gt;Execute LogPartitionedRegionBucketDetailsFunction&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;LogPartitionedRegionBucketDetailsFunction&lt;/strong&gt; &lt;em&gt;execute&lt;/em&gt; method gets the PartitionedRegion and creates and logs the &lt;strong&gt;PartitionedRegionDetails&lt;/strong&gt; like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FunctionContext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;RegionFunctionContext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rfc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RegionFunctionContext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rfc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDataSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;

 &lt;span class=&#34;c1&#34;&gt;// Create the PartitionedRegion details
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PartitionedRegionDetails&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prDetails&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PartitionedRegionDetails&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

 &lt;span class=&#34;c1&#34;&gt;// Log the PartitionedRegion details
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLogger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prDetails&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;

 &lt;span class=&#34;c1&#34;&gt;// Return the result
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getResultSender&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;lastResult&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;initialize-partitionedregiondetails&#34;&gt;Initialize PartitionedRegionDetails&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;PartitionedRegionDetails&lt;/strong&gt; is initialized by sorting the BucketRegions by bucket id, and, for each, updating the appropriate totals like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;initialize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDataStore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAllLocalBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Comparator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;comparingInt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;
     &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;BucketRegionDetails&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bri&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BucketRegionDetails&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;initializeTotalDetails&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bri&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
       &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegionAdvisor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isPrimaryForBucket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
         &lt;span class=&#34;n&#34;&gt;initializeTotalPrimaryDetails&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bri&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
       &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
         &lt;span class=&#34;n&#34;&gt;initializeTotalRedundantDetails&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bri&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
       &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
     &lt;span class=&#34;o&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;em&gt;initializeTotalDetails&lt;/em&gt;, &lt;em&gt;initializeTotalPrimaryDetails&lt;/em&gt; and &lt;em&gt;initializeTotalRedundantDetails&lt;/em&gt; methods increment the appropriate entry and bytes totals.&lt;/p&gt;
&lt;h3 id=&#34;initialize-bucketregiondetails&#34;&gt;Initialize BucketRegionDetails&lt;/h3&gt;
&lt;p&gt;The BucketRegionDetails is initialized from various fields of the BucketRegion like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;initialize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;bucketId&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;entries&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;entriesInMemory&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getNumEntriesInVM&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;entriesOnDisk&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getNumOverflowOnDisk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;bytes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getTotalBytes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;bytesInMemory&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getBytesInMemory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;bytesOnDisk&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getNumOverflowBytesOnDisk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;server-logging-output&#34;&gt;Server Logging Output&lt;/h2&gt;
&lt;p&gt;Executing the &lt;strong&gt;LogPartitionedRegionBucketDetailsFunction&lt;/strong&gt; will cause each server to log a message like this for the total, primary and redundant buckets:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/09/10 06:33:05.292 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x39] Region /Trade Bucket Details:

 Total buckets=75; entries=331,829; entriesInMemory=203,252; entriesOnDisk=128,577; bytes=360,187,189; bytesInMemory=222,546,698; bytesOnDisk=137,640,491
 Primary buckets=38; entries=168,128; entriesInMemory=145,349; entriesOnDisk=22,779; bytes=183,513,535; bytesInMemory=159,144,094; bytesOnDisk=24,369,441
 Redundant buckets=37; entries=163,701; entriesInMemory=57,903; entriesOnDisk=105,798; bytes=176,673,654; bytesInMemory=63,402,604; bytesOnDisk=113,271,050

Primary Buckets:

 Bucket id=0; entries=4,424; entriesInMemory=3,824; entriesOnDisk=600; bytes=4,828,915; bytesInMemory=4,187,013; bytesOnDisk=641,902
 Bucket id=2; entries=4,427; entriesInMemory=3,827; entriesOnDisk=600; bytes=4,832,171; bytesInMemory=4,190,252; bytesOnDisk=641,919
 Bucket id=4; entries=4,428; entriesInMemory=3,828; entriesOnDisk=600; bytes=4,833,252; bytesInMemory=4,191,364; bytesOnDisk=641,888
 Bucket id=6; entries=4,424; entriesInMemory=3,824; entriesOnDisk=600; bytes=4,828,837; bytesInMemory=4,186,916; bytesOnDisk=641,921
 Bucket id=7; entries=4,423; entriesInMemory=3,823; entriesOnDisk=600; bytes=4,827,813; bytesInMemory=4,185,909; bytesOnDisk=641,904
 ...
 Bucket id=98; entries=4,433; entriesInMemory=3,833; entriesOnDisk=600; bytes=4,838,678; bytesInMemory=4,196,813; bytesOnDisk=641,865
 Bucket id=100; entries=4,432; entriesInMemory=3,832; entriesOnDisk=600; bytes=4,837,709; bytesInMemory=4,195,823; bytesOnDisk=641,886
 Bucket id=106; entries=4,429; entriesInMemory=3,829; entriesOnDisk=600; bytes=4,834,263; bytesInMemory=4,192,412; bytesOnDisk=641,851
 Bucket id=107; entries=4,427; entriesInMemory=3,828; entriesOnDisk=599; bytes=4,832,083; bytesInMemory=4,191,257; bytesOnDisk=640,826
 Bucket id=111; entries=4,422; entriesInMemory=3,824; entriesOnDisk=598; bytes=4,826,617; bytesInMemory=4,186,864; bytesOnDisk=639,753

Redundant Buckets:

 Bucket id=5; entries=4,427; entriesInMemory=1,816; entriesOnDisk=2,611; bytes=4,783,851; bytesInMemory=1,988,468; bytesOnDisk=2,795,383
 Bucket id=8; entries=4,423; entriesInMemory=836; entriesOnDisk=3,587; bytes=4,755,980; bytesInMemory=915,386; bytesOnDisk=3,840,594
 Bucket id=11; entries=4,419; entriesInMemory=1,617; entriesOnDisk=2,802; bytes=4,770,412; bytesInMemory=1,770,589; bytesOnDisk=2,999,823
 Bucket id=12; entries=4,421; entriesInMemory=1,613; entriesOnDisk=2,808; bytes=4,772,575; bytesInMemory=1,766,236; bytesOnDisk=3,006,339
 Bucket id=14; entries=4,415; entriesInMemory=1,455; entriesOnDisk=2,960; bytes=4,762,319; bytesInMemory=1,593,211; bytesOnDisk=3,169,108
 ...
 Bucket id=103; entries=4,425; entriesInMemory=1,489; entriesOnDisk=2,936; bytes=4,773,800; bytesInMemory=1,630,440; bytesOnDisk=3,143,360
 Bucket id=104; entries=4,427; entriesInMemory=1,112; entriesOnDisk=3,315; bytes=4,766,974; bytesInMemory=1,217,665; bytesOnDisk=3,549,309
 Bucket id=108; entries=4,424; entriesInMemory=1,192; entriesOnDisk=3,232; bytes=4,765,510; bytesInMemory=1,305,184; bytesOnDisk=3,460,326
 Bucket id=109; entries=4,425; entriesInMemory=1,812; entriesOnDisk=2,613; bytes=4,781,517; bytesInMemory=1,984,097; bytesOnDisk=2,797,420
 Bucket id=110; entries=4,423; entriesInMemory=1,660; entriesOnDisk=2,763; bytes=4,775,867; bytesInMemory=1,817,656; bytesOnDisk=2,958,211

&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;future&#34;&gt;Future&lt;/h2&gt;
&lt;p&gt;A gfsh command and API that provides these partitioned Region bucket details would be a useful addition to Apache Geode.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Routing Events Directly to a Parallel Apache Geode AsyncEventQueue</title>
      
      <link>/data/tanzu-gemfire/blog/routing-events-directly-to-a-parallel-geode-asynceventqueue/</link>
      <pubDate>Sat, 29 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/routing-events-directly-to-a-parallel-geode-asynceventqueue/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;An Apache Geode &lt;a href=&#34;https://geode.apache.org/docs/guide/112/developing/events/implementing_write_behind_event_handler.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;AsyncEventQueue&lt;/a&gt; is used to asynchronously process events after they have been applied to a Region. They are normally used to replay Region events into a relational database or other remote data store. Other use cases want to take advantage of asynchronously processing events in parallel without actually storing entries in a Region. In these cases, each event just needs to be routed directly to the AsyncEventQueue. This behavior is effectively possible with serial AsyncEventQueues and replicated Regions. All servers can define a Region as a &lt;a href=&#34;https://geode.apache.org/docs/guide/11/reference/topics/region_shortcuts_reference.html#reference_n1q_jpy_lk&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;REPLICATE_PROXY&lt;/a&gt; and operations are allowed on that Region. Events go through the Region without being applied to it and are delivered to the serial AsyncEventQueue. The same cannot be done with parallel AsyncEventQueues and partitioned Regions. If all servers define a Region as &lt;a href=&#34;https://geode.apache.org/docs/guide/11/reference/topics/region_shortcuts_reference.html#reference_v4m_jpy_lk&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;PARTITION_PROXY&lt;/a&gt;, an operation on that Region will fail with a &lt;a href=&#34;https://geode.apache.org/releases/latest/javadoc/org/apache/geode/cache/PartitionedRegionStorageException.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;PartitionedRegionStorageException&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This article shows how to route events directly to a parallel AsyncEventQueue using Functions.&lt;/p&gt;
&lt;h2 id=&#34;parallel-asynceventqueue-architecture&#34;&gt;Parallel AsyncEventQueue Architecture&lt;/h2&gt;
&lt;h3 id=&#34;normal-usage-with-region-operations&#34;&gt;Normal Usage With Region Operations&lt;/h3&gt;
&lt;p&gt;Normally, events get delivered to AsyncEventsQueues as a result of Region operations like create, update and destroy. Here is a simplified diagram of that architecture:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/routing-events-directly-to-a-parallel-geode-asynceventqueue/diagrams/barry_08_29_arch_diagram1.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;h3 id=&#34;usage-with-function-invocations&#34;&gt;Usage With Function Invocations&lt;/h3&gt;
&lt;p&gt;An alternate architecture bypasses the Region operation and replication in the diagram above and instead uses Function invocations to route the data between the primary and redundant servers. Here is a simplified diagram of that architecture:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/routing-events-directly-to-a-parallel-geode-asynceventqueue/diagrams/barry_08_29_arch_diagram2.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;All of the code for this example is &lt;a href=&#34;https://github.com/boglesby/route-to-async-event-queue&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The implementation consists mainly of a &lt;a href=&#34;https://github.com/boglesby/route-to-async-event-queue/blob/master/server/src/main/java/example/server/function/PrimaryRoutingFunction.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;PrimaryRoutingFunction&lt;/a&gt; and a &lt;a href=&#34;https://github.com/boglesby/route-to-async-event-queue/blob/master/server/src/main/java/example/server/function/SecondaryRoutingFunction.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;SecondaryRoutingFunction&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;PrimaryRoutingFunction&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Retrieves the routing partitioned Region&lt;/li&gt;
&lt;li&gt;Creates an EntryEventImpl with the Region, key, value and EventID as parameters
** Uses the key’s BucketRegion to set the EntryEventImpl’s tail key (which is the key in the AsyncEventQueue queue Region)&lt;/li&gt;
&lt;li&gt;Gets the redundant DistributedMembers for the key&lt;/li&gt;
&lt;li&gt;Invokes the &lt;strong&gt;SecondaryRoutingFunction&lt;/strong&gt; on those DistributedMembers with the Region name, key, value, EventID and tail key as arguments&lt;/li&gt;
&lt;li&gt;Gets the (primary) AsyncEventQueue for the routing Region&lt;/li&gt;
&lt;li&gt;Gets the AsyncEventQueue’s GatewaySender&lt;/li&gt;
&lt;li&gt;Distributes the EntryEventImpl to the GatewaySender&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;strong&gt;SecondaryRoutingFunction&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Retrieves the routing partitioned Region&lt;/li&gt;
&lt;li&gt;Creates an EntryEventImpl with the Region, key, value, EventID and tail key as parameters&lt;/li&gt;
&lt;li&gt;Gets the (secondary) AsyncEventQueue for the routing Region&lt;/li&gt;
&lt;li&gt;Gets the AsyncEventQueue’s GatewaySender&lt;/li&gt;
&lt;li&gt;Distributes the EntryEventImpl to the GatewaySender&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/route-to-async-event-queue/blob/master/server/src/main/java/example/server/function/BaseFunction.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;BaseFunction&lt;/a&gt; provides methods common to both functions.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/route-to-async-event-queue/blob/master/server/src/main/java/example/server/aeq/RoutingAsyncEventListener.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;RoutingAsyncEventListener&lt;/a&gt; is an &lt;a href=&#34;https://geode.apache.org/releases/latest/javadoc/org/apache/geode/cache/asyncqueue/AsyncEventListener.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;AsyncEventListener&lt;/a&gt; that processes AsyncEvents by logging and counting them.&lt;/p&gt;
&lt;h3 id=&#34;create-entryeventimpl&#34;&gt;Create EntryEventImpl&lt;/h3&gt;
&lt;p&gt;An EntryEventImpl is created by both functions. It represents the Region operation and is delivered to the AsyncEventQueue.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/boglesby/route-to-async-event-queue/blob/e47ab33c29f88da3a15af36a7f59ba83ea47fcfd/server/src/main/java/example/server/function/BaseFunction.java#L29&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;createEvent&lt;/a&gt; method:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;creates the EntryEventImpl with the Region, key, value and EventID as parameters&lt;/li&gt;
&lt;li&gt;sets the tail key (in the constructor if secondary; through the BucketRegion if primary)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;createEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;EventID&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eventId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tailKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// Create the EntryEventImpl
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;entryEventFactory&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Operation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;CREATE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getMyId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eventId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Set the event&amp;#39;s tail key. If the input tailKey == -1, then this is the primary.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// The tailKey is set directly in the event in the secondary.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tailKey&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setTailKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tailKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// The tailKey is set by handleWANEvent in the event in the primary.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// handleWANEvent also updates the BucketRegion&amp;#39;s most recent tail key.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getBucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;handleWANEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;invoke-secondaryroutingfunction&#34;&gt;Invoke SecondaryRoutingFunction&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;PrimaryRoutingFunction&lt;/strong&gt; invokes the &lt;strong&gt;SecondaryRoutingFunction&lt;/strong&gt; on any redundant DistributedMembers. This invocation replaces the Region event replication in the normal usage. The &lt;a href=&#34;https://github.com/boglesby/route-to-async-event-queue/blob/e47ab33c29f88da3a15af36a7f59ba83ea47fcfd/server/src/main/java/example/server/function/PrimaryRoutingFunction.java#L49&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;routeToSecondaryMembers&lt;/a&gt; method:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gets the redundant DistributedMembers for the key&lt;/li&gt;
&lt;li&gt;invokes the &lt;strong&gt;SecondaryRoutingFunction&lt;/strong&gt; on those redundant DistributedMembers&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;routeToSecondaryMembers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// Get the redundant members for this key
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DistributedMember&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redundantMembers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PartitionRegionHelper&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRedundantMembersForKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Create and execute the SecondaryRoutingFunction on those members if necessary
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;redundantMembers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isEmpty&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getFullPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getEventId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getTailKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;};&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;FunctionService&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;onMembers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;redundantMembers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setArguments&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;SecondaryRoutingFunction&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getResult&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FunctionException&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;c1&#34;&gt;// If the remote member is killed, a FunctionException is thrown. Log a warning and continue.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;pr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLogger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;warning&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PrimaryRoutingFunction caught exception executing SecondaryRoutingFunction for key=&amp;#34;&lt;/span&gt;
          &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;; value=&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getNewValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;deliver-entryeventimpl-to-asynceventqueue&#34;&gt;Deliver EntryEventImpl to AsyncEventQueue&lt;/h3&gt;
&lt;p&gt;The EntryEventImpl is delivered to the AsyncEventQueue by both functions. The &lt;a href=&#34;https://github.com/boglesby/route-to-async-event-queue/blob/e47ab33c29f88da3a15af36a7f59ba83ea47fcfd/server/src/main/java/example/server/function/BaseFunction.java#L46&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;deliverToAsyncEventQueue&lt;/a&gt; method:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gets the AsyncEventQueue for the event’s Region&lt;/li&gt;
&lt;li&gt;gets the AsyncEventQueue’s GatewaySender&lt;/li&gt;
&lt;li&gt;distributes the event to the GatewaySender&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;deliverToAsyncEventQueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EntryEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// Get the AsyncEventQueue
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueId&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAsyncEventQueueIds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;iterator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;  
  &lt;span class=&#34;n&#34;&gt;AsyncEventQueueImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AsyncEventQueueImpl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAsyncEventQueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queueId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Get the GatewaySender
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;AbstractGatewaySender&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sender&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AbstractGatewaySender&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getSender&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Distribute the EntryEvent to the GatewaySender
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;distribute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EnumListenerEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;AFTER_CREATE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;REMOTE_DS_IDS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;server-logging-output&#34;&gt;Server Logging Output&lt;/h3&gt;
&lt;h4 id=&#34;normal-usage&#34;&gt;Normal Usage&lt;/h4&gt;
&lt;p&gt;In normal usage, the &lt;strong&gt;PrimaryRoutingFunction&lt;/strong&gt; and &lt;strong&gt;RoutingAsyncEventListener&lt;/strong&gt; in the primary server will log messages like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/08/23 13:12:13.750 HST &amp;lt;ServerConnection on port 51965 Thread 1&amp;gt; tid=0x5b] PrimaryRoutingFunction processing args= [PDX[14273398,example.client.domain.Trade]{id=2}, EventID[id=31 bytes;threadID=1;sequenceID=2]]

[info 2020/08/23 13:12:13.762 HST &amp;lt;ServerConnection on port 51965 Thread 1&amp;gt; tid=0x5b] PrimaryRoutingFunction processing args= [PDX[14273398,example.client.domain.Trade]{id=3}, EventID[id=31 bytes;threadID=1;sequenceID=3]]

[info 2020/08/23 13:12:13.789 HST &amp;lt;ServerConnection on port 51965 Thread 1&amp;gt; tid=0x5b] PrimaryRoutingFunction processing args= [PDX[14273398,example.client.domain.Trade]{id=8}, EventID[id=31 bytes;threadID=1;sequenceID=8]]

[info 2020/08/23 13:12:13.797 HST &amp;lt;ServerConnection on port 51965 Thread 1&amp;gt; tid=0x5b] PrimaryRoutingFunction processing args= [PDX[14273398,example.client.domain.Trade]{id=9}, EventID[id=31 bytes;threadID=1;sequenceID=9]]

[info 2020/08/23 13:12:14.412 HST &amp;lt;Event Processor for GatewaySender_AsyncEventQueue_routing_aeq_0&amp;gt; tid=0x47] RoutingAsyncEventListener: Processing 4 events (total=4; possibleDuplicate=0)
  key=2; value=PDX[14273398,example.client.domain.Trade]{id=2}; possibleDuplicate=false
  key=3; value=PDX[14273398,example.client.domain.Trade]{id=3}; possibleDuplicate=false
  key=8; value=PDX[14273398,example.client.domain.Trade]{id=8}; possibleDuplicate=false
  key=9; value=PDX[14273398,example.client.domain.Trade]{id=9}; possibleDuplicate=false
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;strong&gt;SecondaryRoutingFunction&lt;/strong&gt; in the secondary servers will log messages like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/08/23 13:12:13.756 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x3d] SecondaryRoutingFunction processing args= [/Router, 2, PDX[14273398,example.client.domain.Trade]{id=2}, EventID[id=31 bytes;threadID=1;sequenceID=2], 163]

[info 2020/08/23 13:12:13.763 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x3d] SecondaryRoutingFunction processing args= [/Router, 3, PDX[14273398,example.client.domain.Trade]{id=3}, EventID[id=31 bytes;threadID=1;sequenceID=3], 164]

[info 2020/08/23 13:12:13.790 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x3d] SecondaryRoutingFunction processing args= [/Router, 8, PDX[14273398,example.client.domain.Trade]{id=8}, EventID[id=31 bytes;threadID=1;sequenceID=8], 169]

[info 2020/08/23 13:12:13.799 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x39] SecondaryRoutingFunction processing args= [/Router, 9, PDX[14273398,example.client.domain.Trade]{id=9}, EventID[id=31 bytes;threadID=1;sequenceID=9], 170]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;killed-server&#34;&gt;Killed Server&lt;/h3&gt;
&lt;p&gt;If a server is killed while routing events, the server logs will contain messages like below.&lt;/p&gt;
&lt;p&gt;In this example, the last log messages from the &lt;strong&gt;PrimaryRoutingFunction&lt;/strong&gt; in the killed server were:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/08/23 14:17:05.681 HST &amp;lt;ServerConnection on port 56033 Thread 1&amp;gt; tid=0x5a] PrimaryRoutingFunction processing args= [PDX[8290614,example.client.domain.Trade]{id=756}, EventID[id=31 bytes;threadID=1;sequenceID=756]]

[info 2020/08/23 14:17:05.691 HST &amp;lt;ServerConnection on port 56033 Thread 1&amp;gt; tid=0x5a] PrimaryRoutingFunction processing args= [PDX[8290614,example.client.domain.Trade]{id=758}, EventID[id=31 bytes;threadID=1;sequenceID=758]]

[info 2020/08/23 14:17:05.709 HST &amp;lt;ServerConnection on port 56033 Thread 1&amp;gt; tid=0x5a] PrimaryRoutingFunction processing args= [PDX[8290614,example.client.domain.Trade]{id=764}, EventID[id=31 bytes;threadID=1;sequenceID=764]]

[info 2020/08/23 14:17:05.717 HST &amp;lt;ServerConnection on port 56033 Thread 1&amp;gt; tid=0x5a] PrimaryRoutingFunction processing args= [PDX[8290614,example.client.domain.Trade]{id=766}, EventID[id=31 bytes;threadID=1;sequenceID=766]]

[info 2020/08/23 14:17:05.742 HST &amp;lt;ServerConnection on port 56033 Thread 1&amp;gt; tid=0x5a] PrimaryRoutingFunction processing args= [PDX[8290614,example.client.domain.Trade]{id=769}, EventID[id=31 bytes;threadID=1;sequenceID=769]]

[info 2020/08/23 14:17:05.757 HST &amp;lt;ServerConnection on port 56033 Thread 1&amp;gt; tid=0x5a] PrimaryRoutingFunction processing args= [PDX[8290614,example.client.domain.Trade]{id=772}, EventID[id=31 bytes;threadID=1;sequenceID=772]]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This server was killed before the &lt;strong&gt;RoutingAsyncEventListener&lt;/strong&gt; could process these six events.&lt;/p&gt;
&lt;p&gt;Of these six events, three of them were processed by the &lt;strong&gt;SecondaryRoutingFunction&lt;/strong&gt; in one redundant server. Once the server was killed, these events were processed as possible duplicates by the &lt;strong&gt;RoutingAsyncEventListener&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/08/23 14:17:05.682 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x3a] SecondaryRoutingFunction processing args= [/Router, 756, PDX[8290614,example.client.domain.Trade]{id=756}, EventID[id=31 bytes;threadID=1;sequenceID=756], 990]

[info 2020/08/23 14:17:05.692 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x3a] SecondaryRoutingFunction processing args= [/Router, 758, PDX[8290614,example.client.domain.Trade]{id=758}, EventID[id=31 bytes;threadID=1;sequenceID=758], 766]

[info 2020/08/23 14:17:05.718 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x3a] SecondaryRoutingFunction processing args= [/Router, 766, PDX[8290614,example.client.domain.Trade]{id=766}, EventID[id=31 bytes;threadID=1;sequenceID=766], 908]

[info 2020/08/23 14:17:11.505 HST &amp;lt;Event Processor for GatewaySender_AsyncEventQueue_routing_aeq_0&amp;gt; tid=0x45] RoutingAsyncEventListener: Processing 5 events (total=266; possibleDuplicate=3)
  key=758; value=PDX[8290614,example.client.domain.Trade]{id=758}; possibleDuplicate=true
  key=766; value=PDX[8290614,example.client.domain.Trade]{id=766}; possibleDuplicate=true
  key=756; value=PDX[8290614,example.client.domain.Trade]{id=756}; possibleDuplicate=true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The other redundant server processed the other three events in the same way:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/08/23 14:17:05.710 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x37] SecondaryRoutingFunction processing args= [/Router, 764, PDX[8290614,example.client.domain.Trade]{id=764}, EventID[id=31 bytes;threadID=1;sequenceID=764], 793]

[info 2020/08/23 14:17:05.744 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x37] SecondaryRoutingFunction processing args= [/Router, 769, PDX[8290614,example.client.domain.Trade]{id=769}, EventID[id=31 bytes;threadID=1;sequenceID=769], 572]

[info 2020/08/23 14:17:05.758 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x37] SecondaryRoutingFunction processing args= [/Router, 772, PDX[8290614,example.client.domain.Trade]{id=772}, EventID[id=31 bytes;threadID=1;sequenceID=772], 822]

[info 2020/08/23 14:17:11.490 HST &amp;lt;Event Processor for GatewaySender_AsyncEventQueue_routing_aeq_0&amp;gt; tid=0x45] RoutingAsyncEventListener: Processing 4 events (total=266; possibleDuplicate=3)
  key=769; value=PDX[8290614,example.client.domain.Trade]{id=769}; possibleDuplicate=true
  key=764; value=PDX[8290614,example.client.domain.Trade]{id=764}; possibleDuplicate=true
  key=772; value=PDX[8290614,example.client.domain.Trade]{id=772}; possibleDuplicate=true
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;future&#34;&gt;Future&lt;/h2&gt;
&lt;p&gt;Two useful additions to Apache Geode would be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Allowing configuration of a PARTITION_PROXY Region on all members into which operations can be done&lt;/li&gt;
&lt;li&gt;An API to deliver events directly to AsyncEventQueues&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Threads Used in Apache Geode Function Execution</title>
      
      <link>/data/tanzu-gemfire/blog/threads-used-in-geode-function-execution/</link>
      <pubDate>Fri, 31 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/threads-used-in-geode-function-execution/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;When a client executes an Apache Geode Function, the type and attributes of the Function request dictate the threads that processes it on the server.&lt;/p&gt;
&lt;p&gt;Apache Geode defines a number of thread pools and threads to process different kinds of messages. The ones involved in Function execution are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the Acceptor thread pool which creates &lt;strong&gt;ServerConnection&lt;/strong&gt; threads to handle all requests from the client&lt;/li&gt;
&lt;li&gt;the Function Execution thread pool which creates &lt;strong&gt;Function Execution Processor&lt;/strong&gt; threads to process Function execution requests&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;P2P message reader&lt;/strong&gt; threads which handle messages between servers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When a client executes a Function, a &lt;strong&gt;ServerConnection&lt;/strong&gt; will initially handle the request. Depending on the type and attributes of the request, the &lt;strong&gt;ServerConnection&lt;/strong&gt; may hand it off to a &lt;strong&gt;Function Execution Processor&lt;/strong&gt; to process. If the Function execution does any replication (e.g. Region put), a &lt;strong&gt;P2P message reader&lt;/strong&gt; in the remote server will process that replication. The thread processing the Function execution request is important for several reasons.&lt;/p&gt;
&lt;h2 id=&#34;description-of-reasons&#34;&gt;Description of Reasons&lt;/h2&gt;
&lt;h3 id=&#34;p2p-message-reader-threads&#34;&gt;P2P Message Reader Threads&lt;/h3&gt;
&lt;p&gt;One reason the thread processing the Function execution request is important is that it determines the type of &lt;strong&gt;P2P message reader&lt;/strong&gt; in the remote server that handles data replications resulting from the Function execution. When a server is started, it creates two shared &lt;strong&gt;P2P message readers&lt;/strong&gt; for each other server. One handles ordered messages like UpdateMessage; the other handles unordered messages like CreateRegionMessage. Depending on the message type, the &lt;strong&gt;P2P message reader&lt;/strong&gt; either processes the message itself or hands it off to one of several internal thread pools for processing. With the &lt;a href=&#34;https://geode.apache.org/docs/guide/12/managing/monitor_tune/performance_controls_controlling_socket_use.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;conserve-sockets&lt;/a&gt; property set to true (the default), these are the only &lt;strong&gt;P2P message readers&lt;/strong&gt; receiving messages from remote servers. Having only two &lt;strong&gt;P2P message readers&lt;/strong&gt; for each remote server can be a performance bottleneck. Setting &lt;em&gt;conserve-sockets&lt;/em&gt; to false addresses this by allowing multiple &lt;strong&gt;P2P message readers&lt;/strong&gt; for each remote server. Each one receives and processes a specific remote server’s thread’s requests. This provides better throughput.&lt;/p&gt;
&lt;p&gt;A replication from a &lt;strong&gt;ServerConnection&lt;/strong&gt; honors the conserve-sockets setting so an unshared &lt;strong&gt;P2P message reader&lt;/strong&gt; is used in the remote server. By default, a replication from a &lt;strong&gt;Function Execution Processor&lt;/strong&gt; does not honor the conserve-sockets setting so a shared &lt;strong&gt;P2P message reader&lt;/strong&gt; is used in the remote server. The default behavior can be changed by setting the socket policy like this in the Function execute method:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FunctionContext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;DistributedSystem&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setThreadsSocketPolicy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// Process request
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;finally&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;DistributedSystem&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setThreadsSocketPolicy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;thread-pool-maximum-sizes&#34;&gt;Thread Pool Maximum Sizes&lt;/h3&gt;
&lt;p&gt;Another reason the thread processing the Function execution request is important is that each thread pool defines a different default maximum number of threads. The Acceptor thread pool default is 800. It can be changed during server startup like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh start server --name=server-1 --server-port=0 --max-connections=1600 ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The Function Execution thread pool default is variable depending on the number of CPUs available. It is defined like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_FE_THREADS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getInteger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;DistributionManager.MAX_FE_THREADS&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Runtime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRuntime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;availableProcessors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In a Function-heavy application, the default maximum is often not enough. It can be changed during server startup like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh start server --name=server-1 --server-port=0 --J=-DDistributionManager.MAX_FE_THREADS=128 ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This article describes several common Function execution use cases and which threads processes those requests.&lt;/p&gt;
&lt;h2 id=&#34;thread-examples&#34;&gt;Thread Examples&lt;/h2&gt;
&lt;p&gt;A thread dump of an Apache Geode server will show many threads. The ones relevant to this article are shown below.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;ServerConnection&lt;/strong&gt; looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`&amp;quot;ServerConnection on port 64777 Thread 1&amp;quot; #75 daemon prio=5 os_prio=31 tid=0x00007ff8498d7800 nid=0xb10f waiting on condition [0x000070000501d000]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A &lt;strong&gt;Function Execution Processor&lt;/strong&gt; looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;Function Execution Processor2&amp;quot; #56 daemon prio=10 os_prio=31 tid=0x00007ff84ab34800 nid=0x7a03 waiting on condition [0x0000700004e17000]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A shared &lt;strong&gt;P2P message reader&lt;/strong&gt; looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;P2P message reader for (server-2:81597)&amp;lt;v2&amp;gt;:41002 shared ordered uid=6 port=64802&amp;quot; #59 daemon prio=5 os_prio=31 tid=0x00007ff84c49a800 nid=0x7c03 runnable [0x0000700005120000]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;An unshared &lt;strong&gt;P2P message reader&lt;/strong&gt; looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;P2P message reader for (server-2:81597)&amp;lt;v2&amp;gt;:41002 unshared ordered uid=14 dom #2 port=65342&amp;quot; #82 daemon prio=10 os_prio=31 tid=0x00007ff84e194000 nid=0xad07 runnable [0x0000700005835000]
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;function-use-cases&#34;&gt;Function Use Cases&lt;/h2&gt;
&lt;h3 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h3&gt;
&lt;p&gt;All of the use cases in this article have these assumptions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the client Pool has single-hop enabled (default)&lt;/li&gt;
&lt;li&gt;the client has the server’s metadata (the layout of the partitioned Region buckets) before it invokes a Function&lt;/li&gt;
&lt;li&gt;the Function hasResult returns true (default)&lt;/li&gt;
&lt;li&gt;the Function optimizeForWrite returns true (non-default, although I would always recommend this setting for Functions that update partitioned Regions)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;In the test for each use case, a client invokes a Function with zero, one or multiple filters on two servers. The Function execute method on the server gets an entry from a Region, updates it and puts it back into the Region. In the &lt;strong&gt;onServer / onServers&lt;/strong&gt; use cases, the Function gets the Region from the Cache instead of the RegionFunctionContext.&lt;/p&gt;
&lt;p&gt;Each use case describes the threads involved in the server receiving and processing the Function execution request (server-1) and the one processing the data replication (server-2).&lt;/p&gt;
&lt;p&gt;The source code for all of these tests is &lt;a href=&#34;https://github.com/boglesby/function-execution-threads&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following use cases are described:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;onServer / onServers&lt;/li&gt;
&lt;li&gt;onRegion (Replicated Region)&lt;/li&gt;
&lt;li&gt;onRegion (Replicated Region, Unshared Resources)&lt;/li&gt;
&lt;li&gt;onRegion (Partitioned Region, No Filter)&lt;/li&gt;
&lt;li&gt;onRegion (Partitioned Region, No Filter, Unshared Resources)&lt;/li&gt;
&lt;li&gt;onRegion (Partitioned Region, One Filter)&lt;/li&gt;
&lt;li&gt;onRegion (Partitioned Region, Multiple Filters)&lt;/li&gt;
&lt;li&gt;onRegion (Partitioned Region, Multiple Filters, Unshared Resources)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;onserver--onservers&#34;&gt;onServer / onServers&lt;/h3&gt;
&lt;p&gt;Both the onServer and onServers use cases behave the same in terms of the threads used from each server’s perspective.&lt;/p&gt;
&lt;p&gt;This use case uses two threads:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;one ServerConnection on server-1&lt;/li&gt;
&lt;li&gt;one unshared P2P message reader on server-2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since the Function execution request is executed by a &lt;strong&gt;ServerConnection&lt;/strong&gt;, the replication honors the conserve-sockets setting and uses an unshared &lt;strong&gt;P2P message reader&lt;/strong&gt; on the replication server.&lt;/p&gt;
&lt;p&gt;A simplified sequence diagram of this use case is:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/threads-used-in-geode-function-execution/diagrams/barry_07_31_arch_diagram1.png&#34; alt=&#34;Image for post&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Below is logging (mainly from a &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionMessageObserver.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;DistributionMessageObserver&lt;/a&gt;) on each server that shows the behavior.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;ServerConnection&lt;/strong&gt; on server-1 receives and processes the Function execution request:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:48:04.138 HST &amp;lt;ServerConnection on port 53445 Thread 2&amp;gt; tid=0x4b] About to process a ExecuteFunction70
[info 2020/07/25 07:48:04.145 HST &amp;lt;ServerConnection on port 53445 Thread 2&amp;gt; tid=0x4b] Executing function=OnServerFunction
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;strong&gt;ServerConnection&lt;/strong&gt; on server-1 sends an UpdateMessage containing the data replication to server-2:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:48:04.151 HST &amp;lt;ServerConnection on port 53445 Thread 2&amp;gt; tid=0x4b] About to send a UpdateMessage to [0.0.0.0(server-2:82128)&amp;lt;v1&amp;gt;:41001]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;An unshared &lt;strong&gt;P2P message reader&lt;/strong&gt; on server-2 receives and processes the UpdateMessage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:48:04.153 HST &amp;lt;P2P message reader for 0.0.0.0(server-1:82129)&amp;lt;v2&amp;gt;:41002 unshared ordered uid=12 dom #1 port=53500&amp;gt; tid=0x3d] About to process a UpdateMessage from 0.0.0.0(server-1:82129)&amp;lt;v2&amp;gt;:41002
[info 2020/07/25 07:48:04.155 HST &amp;lt;P2P message reader for 0.0.0.0(server-1:82129)&amp;lt;v2&amp;gt;:41002 unshared ordered uid=12 dom #1 port=53500&amp;gt; tid=0x3d] Processed a UpdateMessage from 0.0.0.0(server-1:82129)&amp;lt;v2&amp;gt;:41002
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;strong&gt;ServerConnection&lt;/strong&gt; on server-1 completes processing the Function execution request:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:48:04.155 HST &amp;lt;ServerConnection on port 53445 Thread 2&amp;gt; tid=0x4b] Executing function=OnServerFunction completed
[info 2020/07/25 07:48:04.156 HST &amp;lt;ServerConnection on port 53445 Thread 2&amp;gt; tid=0x4b] Completed processing a ExecuteFunction70
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;onregion-replicated-region&#34;&gt;onRegion (Replicated Region)&lt;/h3&gt;
&lt;p&gt;Regardless of the number of filters, all Function execution requests on replicated Regions behave the same.&lt;/p&gt;
&lt;p&gt;This use case uses four threads:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;one &lt;strong&gt;ServerConnection&lt;/strong&gt;, one &lt;strong&gt;Function Execution Processor&lt;/strong&gt;, one shared &lt;strong&gt;P2P message reader&lt;/strong&gt; on server-1&lt;/li&gt;
&lt;li&gt;one shared &lt;strong&gt;P2P message reader&lt;/strong&gt; on server-2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since the Function execution request is executed by a &lt;strong&gt;Function Execution Processor&lt;/strong&gt;, the replication does not honor the &lt;em&gt;conserve-sockets&lt;/em&gt; setting and uses shared &lt;strong&gt;P2P message readers&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A simplified sequence diagram of this use case is:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/threads-used-in-geode-function-execution/diagrams/barry_07_31_arch_diagram2.png&#34; alt=&#34;Image for post&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Below is logging on each server that shows the behavior.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;ServerConnection&lt;/strong&gt; on server-1 receives the Function execution request:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:51:04.717 HST &amp;lt;ServerConnection on port 53422 Thread 2&amp;gt; tid=0x51] About to process a ExecuteRegionFunctionGeode18
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A &lt;strong&gt;Function Execution Processor&lt;/strong&gt; on server-1 processes the Function execution request:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:51:04.724 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x38] Executing function=OnRegionFunction; numKeys=1 keys=[0]; region=/ReplicatedTrade; unsharedResources=false
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;strong&gt;Function Execution Processor&lt;/strong&gt; on server-1 sends an UpdateMessage containing the data replication to server-2:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:51:04.725 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x38] About to send a UpdateMessage to [0.0.0.0(server-2:82129)&amp;lt;v2&amp;gt;:41002]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A shared &lt;strong&gt;P2P message reader&lt;/strong&gt; on server-2 receives and processes the UpdateMessage and sends a ReplyMessage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:51:04.726 HST &amp;lt;P2P message reader for 0.0.0.0(server-1:82128)&amp;lt;v1&amp;gt;:41001 shared ordered uid=6 port=53449&amp;gt; tid=0x39] About to process a UpdateMessage from 0.0.0.0(server-1:82128)&amp;lt;v1&amp;gt;:41001
[info 2020/07/25 07:51:04.727 HST &amp;lt;P2P message reader for 0.0.0.0(server-1:82128)&amp;lt;v1&amp;gt;:41001 shared ordered uid=6 port=53449&amp;gt; tid=0x39] About to send a ReplyMessage to [0.0.0.0(server-1:82128)&amp;lt;v1&amp;gt;:41001]
[info 2020/07/25 07:51:04.727 HST &amp;lt;P2P message reader for 0.0.0.0(server-1:82128)&amp;lt;v1&amp;gt;:41001 shared ordered uid=6 port=53449&amp;gt; tid=0x39] Processed a UpdateMessage from 0.0.0.0(server-1:82128)&amp;lt;v1&amp;gt;:41001
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The shared &lt;strong&gt;P2P message reader&lt;/strong&gt; on server-1 receives and processes the ReplyMessage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:51:04.727 HST &amp;lt;P2P message reader for 0.0.0.0(server-2:82129)&amp;lt;v2&amp;gt;:41002 shared unordered uid=2 port=53439&amp;gt; tid=0x37] About to process a ReplyMessage from 0.0.0.0(server-2:82129)&amp;lt;v2&amp;gt;:41002
[info 2020/07/25 07:51:04.727 HST &amp;lt;P2P message reader for 0.0.0.0(server-2:82129)&amp;lt;v2&amp;gt;:41002 shared unordered uid=2 port=53439&amp;gt; tid=0x37] Processed a ReplyMessage from 0.0.0.0(server-2:82129)&amp;lt;v2&amp;gt;:41002
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;strong&gt;Function Execution Processor&lt;/strong&gt; on server-1 completes processing the Function execution request:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:51:04.728 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x38] Executing function=OnRegionFunction completed
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;strong&gt;ServerConnection&lt;/strong&gt; on server-1 completes processing the Function execution request:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:51:04.728 HST &amp;lt;ServerConnection on port 53422 Thread 2&amp;gt; tid=0x51] Completed processing a ExecuteRegionFunctionGeode18
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;onregion-replicated-region-unshared-resources&#34;&gt;onRegion (Replicated Region, Unshared Resources)&lt;/h3&gt;
&lt;p&gt;This use case uses three threads:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;one ServerConnection, one Function Execution Processor on server-1&lt;/li&gt;
&lt;li&gt;one unshared P2P message reader on server-2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since the Function execution request is executed by a &lt;strong&gt;Function Execution Processor&lt;/strong&gt; in which the thread socket policy is set to false, the replication honors the &lt;em&gt;conserve-sockets&lt;/em&gt; setting and uses an unshared &lt;strong&gt;P2P message reader&lt;/strong&gt; on the replication server.&lt;/p&gt;
&lt;p&gt;A simplified sequence diagram of this use case is:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/threads-used-in-geode-function-execution/diagrams/barry_07_31_arch_diagram3.png&#34; alt=&#34;Image for post&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Below is logging on each server that shows the behavior.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;ServerConnection&lt;/strong&gt; on server-1 receives the Function execution request:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:52:12.862 HST &amp;lt;ServerConnection on port 53422 Thread 3&amp;gt; tid=0x52] About to process a ExecuteRegionFunctionGeode18
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A &lt;strong&gt;Function Execution Processor&lt;/strong&gt; on server-1 processes the Function execution request:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:52:12.862 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x38] Executing function=OnRegionFunction; numKeys=1 keys=[0]; region=/ReplicatedTrade; unsharedResources=true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;strong&gt;Function Execution Processor&lt;/strong&gt; on server-1 sends an UpdateMessage containing the data replication to server-2:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:52:12.863 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x38] About to send a UpdateMessage to [0.0.0.0(server-2:82129)&amp;lt;v2&amp;gt;:41002]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;An unshared &lt;strong&gt;P2P message reader&lt;/strong&gt; on server-2 receives and processes the UpdateMessage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:52:12.864 HST &amp;lt;P2P message reader for 0.0.0.0(server-1:82128)&amp;lt;v1&amp;gt;:41001 unshared ordered uid=12 dom #1 port=53999&amp;gt; tid=0x34] About to process a UpdateMessage from 0.0.0.0(server-1:82128)&amp;lt;v1&amp;gt;:41001
[info 2020/07/25 07:52:12.865 HST &amp;lt;P2P message reader for 0.0.0.0(server-1:82128)&amp;lt;v1&amp;gt;:41001 unshared ordered uid=12 dom #1 port=53999&amp;gt; tid=0x34] Processed a UpdateMessage from 0.0.0.0(server-1:82128)&amp;lt;v1&amp;gt;:41001
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;strong&gt;Function Execution Processor&lt;/strong&gt; on server-1 completes processing the Function execution request:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:52:12.865 HST &amp;lt;Function Execution Processor2&amp;gt; tid=0x38] Executing function=OnRegionFunction completed
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;strong&gt;ServerConnection&lt;/strong&gt; on server-1 completes processing the Function execution request:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/07/25 07:52:12.866 HST &amp;lt;ServerConnection on port 53422 Thread 3&amp;gt; tid=0x52] Completed processing a ExecuteRegionFunctionGeode18
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;onregion-partitioned-region-no-filter&#34;&gt;onRegion (Partitioned Region, No Filter)&lt;/h3&gt;
&lt;p&gt;This use case uses the same four threads as the &lt;strong&gt;onRegion (Replicated Region)&lt;/strong&gt; use case:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;one ServerConnection, one Function Execution Processor, one shared P2P message reader on server-1&lt;/li&gt;
&lt;li&gt;one shared P2P message reader on server-2&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;onregion-partitioned-region-no-filter-unshared-resources&#34;&gt;onRegion (Partitioned Region, No Filter, Unshared Resources)&lt;/h3&gt;
&lt;p&gt;This use case uses the same three threads as the &lt;strong&gt;onRegion (Replicated Region, Unshared Resources)&lt;/strong&gt; use case:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;one &lt;strong&gt;ServerConnection&lt;/strong&gt;, one &lt;strong&gt;Function Execution Processor&lt;/strong&gt; on server-1&lt;/li&gt;
&lt;li&gt;one unshared &lt;strong&gt;P2P message reader&lt;/strong&gt; on server-2&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;onregion-partitioned-region-one-filter&#34;&gt;onRegion (Partitioned Region, One Filter)&lt;/h3&gt;
&lt;p&gt;This use case uses the same two threads as &lt;strong&gt;the onServer / onServers use&lt;/strong&gt; case:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;one &lt;strong&gt;ServerConnection&lt;/strong&gt; on server-1&lt;/li&gt;
&lt;li&gt;one unshared &lt;strong&gt;P2P message reader&lt;/strong&gt; on server-2&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;onregion-partitioned-region-multiple-filters&#34;&gt;onRegion (Partitioned Region, Multiple Filters)&lt;/h3&gt;
&lt;p&gt;This use case uses the same four threads as the &lt;strong&gt;onRegion (Replicated Region)&lt;/strong&gt; use case:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;one &lt;strong&gt;ServerConnection&lt;/strong&gt;, one &lt;strong&gt;Function Execution Processor&lt;/strong&gt;, one shared &lt;strong&gt;P2P message reader&lt;/strong&gt; on server-1&lt;/li&gt;
&lt;li&gt;one shared &lt;strong&gt;P2P message reader&lt;/strong&gt; on server-2&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;onregion-partitioned-region-multiple-filters-unshared-resources&#34;&gt;onRegion (Partitioned Region, Multiple Filters, Unshared Resources)&lt;/h3&gt;
&lt;p&gt;This use case uses the same three threads as the &lt;strong&gt;onRegion (Replicated Region, Unshared Resources)&lt;/strong&gt; use case:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;one &lt;strong&gt;ServerConnection&lt;/strong&gt;, one &lt;strong&gt;Function Execution Processor&lt;/strong&gt; on server-1&lt;/li&gt;
&lt;li&gt;one unshared &lt;strong&gt;P2P message reader&lt;/strong&gt; on server-2&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The use cases which require the least number of threads are &lt;strong&gt;onServer / on Servers&lt;/strong&gt; and &lt;strong&gt;onRegion (Partitioned Region, One Filter)&lt;/strong&gt;. Both of these require one thread on each server. The other use cases each require either three or four threads depending on the thread socket policy setting in the Function execute method. &lt;strong&gt;Setting it set to false&lt;/strong&gt; eliminates the use of shared &lt;strong&gt;P2P message readers&lt;/strong&gt; and uses one unshared &lt;strong&gt;P2P message reader&lt;/strong&gt; on the server receiving the replication.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Improving the Performance of Apache Geode Persistence Recovery</title>
      
      <link>/data/tanzu-gemfire/blog/improving-the-performance-of-apache-geode-persistence-recovery/</link>
      <pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/improving-the-performance-of-apache-geode-persistence-recovery/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; is a data management platform that provides real-time, consistent access to data-intensive applications throughout widely distributed cloud architectures. Geode pools memory, CPU, network resources, and optionally local disk across multiple processes to manage application objects and behavior. It uses dynamic replication and data partitioning techniques to implement high availability, improved performance, scalability, and fault tolerance. In addition to being a distributed data container, Apache Geode is an in-memory data management system that provides reliable asynchronous event notifications and guaranteed message delivery.&lt;/p&gt;
&lt;p&gt;This article assumes you have a basic understanding of Apache Geode. You can refer to the &lt;a href=&#34;https://geode.apache.org/docs/guide/19/getting_started/book_intro.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;quick start&lt;/a&gt; for an overview of the system.&lt;/p&gt;
&lt;p&gt;Apache Geode offers super fast write-ahead-logging (WAL) persistence with a shared-nothing architecture that is optimized for fast parallel recovery of nodes or an entire cluster. Persistence provides a disk backup of region entry data. The keys and values of all entries are saved to disk, like having a replica of the region on disk. When the member stops for any reason, the region data on disk remains. The disk data can be used at member startup to repopulate the region. Each member has its own set of disk stores, and they are completely separate from the disk stores of any other member.&lt;/p&gt;
&lt;p&gt;Disk store files include store management files, access control files, and the operation log(oplog) files, consisting of one file for deletions and another for all other operations. For example, in the file system, there are oplog files with crf, drf and krf file extensions. The crf oplog contains create, update, and invalidate operations for region entries. The drf oplog contains delete operations, and the krf oplog contains the key names as well as the offsets for the values within the crf file. The krf oplog improves startup performance by allowing Geode to load the entry values in the background after the entry keys are loaded. When you start a member with a persistent region, the data is retrieved from disk stores to recreate the member’s persistent region. Entry keys are loaded from the key file in the disk store before considering entry values. Once all keys are loaded, Geode loads the entry values asynchronously.&lt;/p&gt;
&lt;p&gt;If you would like to know more about Apache Geode disk storage, please refer to the &lt;a href=&#34;https://geode.apache.org/docs/guide/12/managing/disk_storage/chapter_overview.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Geode documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;challenges-for-the-performance-of-persistence-recovery&#34;&gt;Challenges for the Performance of Persistence Recovery&lt;/h2&gt;
&lt;p&gt;In the recent tests on the cloud environment, we have observed that persistence recovery takes a long time. For example, say we have a Geode cluster with one locator and four servers. We shut down all the servers, but keep the locators running, then restart all the servers together. In some cases like this, we have noticed that two of the servers restart quickly, while the other two servers take significantly longer time to recover the persisted data. This is not how Geode is supposed to work. It is supposed to parallelize the startup of all the servers. This is our journey into how we improved the system recovery performance.&lt;/p&gt;
&lt;h2 id=&#34;remove-unnecessary-thread-synchronization&#34;&gt;Remove Unnecessary Thread Synchronization&lt;/h2&gt;
&lt;p&gt;On a server, one thread holding a lock can block the other thread waiting on the same lock. In a distributed system like Geode, this can further block other threads on the other servers because Geode servers exchange messages, such as request and response messages, to collaborate on certain tasks like region creation. If a thread is blocked before sending a response to a request from the other server, the other server could be blocked waiting for the response. This is what we have observed in the logs.&lt;/p&gt;
&lt;p&gt;In the Geode server logs, the &lt;code&gt;ThreadsMonitor&lt;/code&gt; puts warning messages in the logs to tell which thread is stuck waiting for the lock, and which thread currently holds the lock together with the thread stacks. On the server named server1, our log shows that the thread is waiting on the lock on a &lt;code&gt;HashMap&lt;/code&gt;. Here is an example of the warning in the log.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/jchen21/e280e387f128e70537e37093d26f6422.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;In the example log, there are two thread stacks. The stack for the thread waiting for the lock, and the other stack for the thread holding the lock. Thread 49 is waiting for the lock on the &lt;code&gt;HashMap&lt;/code&gt; to be released. Based on the thread stack&lt;/p&gt;
&lt;p&gt;&lt;code&gt;org.apache.geode.internal.cache.GemFireCacheImpl.getRegion(GemFireCacheImpl.java:3212)&lt;/code&gt;,&lt;/p&gt;
&lt;p&gt;we can tell from the source code, the &lt;code&gt;HashMap&lt;/code&gt; is &lt;code&gt;GemFireCacheImpl.rootRegions&lt;/code&gt;. From the stack, we can also see&lt;/p&gt;
&lt;p&gt;&lt;code&gt;org.apache.geode.internal.cache.CreateRegionProcessor$CreateRegionMessage.process(CreateRegionProcessor.java:362)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Thread 49 is trying to process a &lt;code&gt;CreateRegionMessage&lt;/code&gt;, which is sent from the other server in order to create a region. Thread 49 is supposed to generate a &lt;code&gt;CreateRegionReplyMessage&lt;/code&gt; and return it to the sender of &lt;code&gt;CreateRegionMessage&lt;/code&gt;. This is part of the process of creating a replicated region in all the servers. As we keep reading the example log, we can see the &lt;code&gt;Lock owner thread&lt;/code&gt; stack. The lock owner thread is recovering the persisted krf oplogs. Because the thread is executing&lt;/p&gt;
&lt;p&gt;&lt;code&gt;org.apache.geode.internal.cache.Oplog.readKrf(Oplog.java:1762)&lt;/code&gt;,&lt;/p&gt;
&lt;p&gt;the thread is holding the lock on the &lt;code&gt;HashMap&lt;/code&gt; &lt;code&gt;GemFireCacheImpl.rootRegions&lt;/code&gt; at&lt;/p&gt;
&lt;p&gt;&lt;code&gt;org.apache.geode.internal.cache.GemFireCacheImpl.createVMRegion(GemFireCacheImpl.java:2925)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;On one of the other servers, server2, we can see a warning in the log:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/03/25 20:57:45.025 UTC &amp;lt;main&amp;gt; tid=0x1] Initializing region _monitoringRegion_10.128.0.32&amp;lt;v8&amp;gt;41000
[warn 2020/03/25 20:58:01.028 UTC &amp;lt;main&amp;gt; tid=0x1] 15 seconds have elapsed while waiting for replies: &amp;lt;CreateRegionProcessor$CreateRegionReplyProcessor 5 waiting for 3 replies from [10.128.0.31(server1:13379)&amp;lt;v7&amp;gt;:41000, 10.128.0.33(server3:14040)&amp;lt;v7&amp;gt;:41000, 10.128.0.34(server4:13170)&amp;lt;v7&amp;gt;:41000]&amp;gt; on 10.128.0.32(server2:13774)&amp;lt;v8&amp;gt;:41000 whose current membership list is: [[10.128.0.30(locator:10836:locator)&amp;lt;ec&amp;gt;&amp;lt;v0&amp;gt;:41000, 10.128.0.31(server1:13379)&amp;lt;v7&amp;gt;:41000, 10.128.0.32(server2:13774)&amp;lt;v8&amp;gt;:41000, 10.128.0.33(server3:14040)&amp;lt;v7&amp;gt;:41000, 10.128.0.34(server4:13170)&amp;lt;v7&amp;gt;:41000]]
[info 2020/03/25 21:02:56.281 UTC &amp;lt;main&amp;gt; tid=0x1] CreateRegionProcessor$CreateRegionReplyProcessor wait for replies completed
[info 2020/03/25 21:02:56.283 UTC &amp;lt;main&amp;gt; tid=0x1] Initialization of region _monitoringRegion_10.128.0.32&amp;lt;v8&amp;gt;41000 completed
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note the timestamps on the log entries, from start to completion, region initialization takes more than 5 minutes, which is unusual. As indicated by the log, this is because &lt;code&gt;CreateRegionProcessor$CreateRegionReplyProcessor&lt;/code&gt; is waiting for 3 replies from other servers. As we can see from the first example log from server1, Thread 49 on server1 is blocked, so it cannot send &lt;code&gt;CreateRegionReplyMessage&lt;/code&gt; to server2. So on server2, &lt;code&gt;CreateRegionProcessor$CreateRegionReplyProcessor&lt;/code&gt; is waiting for server1 to reply. This blocks the server initialization process during server restart, and eventually slows down the persistence recovery on server2.&lt;/p&gt;
&lt;p&gt;With the help of the warning messages, and the thread stacks, we have identified that in the source code, the synchronization of &lt;code&gt;HashMap&lt;/code&gt; has caused the persistence recovery to slow down significantly. The thread synchronization on server1 has affected not only server1 itself, but also the progress of server2. For log analysis details, please refer to &lt;a href=&#34;https://issues.apache.org/jira/browse/GEODE-7945&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GEODE-7945&lt;/a&gt; and its pull request.&lt;/p&gt;
&lt;p&gt;Once we understand the root cause, the solution becomes clear. We’d better replace &lt;code&gt;HashMap&lt;/code&gt; with &lt;code&gt;ConcurrentHashMap&lt;/code&gt;, to remove unnecessary synchronization among the threads. With &lt;code&gt;ConcurrentHashMap&lt;/code&gt;, the persistence recovery time is reduced by 30% for recovering the same amount of persistent data during Geode cluster restart.&lt;/p&gt;
&lt;h2 id=&#34;parallel-disk-stores-recovery&#34;&gt;Parallel Disk Stores Recovery&lt;/h2&gt;
&lt;p&gt;After further analyzing the logs, we noticed that the disk stores are recovered sequentially with single thread. There is an opportunity to improve the recovery performance here. If the disk stores are recovered in parallel, the persistence recovery performance can be dramatically improved. When each region is on a different disk store, parallel disk store recovery makes parallel region recovery possible. This is especially effective when the disk stores are on different disk controllers, so that the disk stores don’t have to compete for the same disk controller. With the completion of &lt;a href=&#34;https://issues.apache.org/jira/browse/GEODE-8035&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GEODE-8035&lt;/a&gt;, parallel disk store recovery is introduced. For example, when recovering two regions on two separate disk stores, we can reduce the persistent recovery time by half, compared to the case in which two regions share the same default disk store. With more disk stores, the performance of persistence recovery can be further improved from parallel disk store recovery.&lt;/p&gt;
&lt;h2 id=&#34;performance-results&#34;&gt;Performance Results&lt;/h2&gt;
&lt;p&gt;Replacing &lt;code&gt;HashMap&lt;/code&gt; with &lt;code&gt;ConcurrentHashMap&lt;/code&gt; for &lt;code&gt;GemFireCacheImpl.rootRegions&lt;/code&gt; eliminates the unnecessary blocking of threads during the cluster restart persistence recovery process. Initial tests with and without partition region redundancy and varying numbers of region buckets (up to 2753 buckets) and Geode servers(up to 70 servers) with up to 2 billion entries have shown that the change can reduce the cluster restart time by up to 30%.&lt;/p&gt;
&lt;p&gt;To speed up the recovery of multiple regions, it is recommended to have different disk stores for different regions, i.e. one-to-one mapping between region and disk store, so that every region has a dedicated disk store. Assigning the disk stores to separate disk controllers can further improve performance. We have tested this scenario on Google Cloud. With two partitioned regions sharing the same default disk store, it takes 13 minutes to recover 100 million entries on 4 servers. If each of the two regions has its own disk store, even though the two disk stores share the same SSD, the recovery time drops to 10 minutes, a 23% reduction in recovery time. For two regions with two disk stores on two different disk controllers, the recovery time drops to 7 minutes with parallel disk store recovery. This is a reduction in recovery time of almost 50% compared to the case where two regions share a single default disk store.&lt;/p&gt;
&lt;p&gt;With the new feature, by default, the disk stores are recovered by multiple threads in parallel when the cluster restarts. This significantly improves the performance of disk store recovery.&lt;/p&gt;
&lt;p&gt;For backward compatibility, we introduced a new boolean system property &lt;code&gt;parallelDiskStoreRecovery&lt;/code&gt;. The default value is &lt;code&gt;true&lt;/code&gt;. The disk stores recover in parallel by default. If the users prefer sequential disk store recovery, set &lt;code&gt;parallelDiskStoreRecovery&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; when restarting the cluster.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Geode shared-nothing persistence architecture is powerful for fast parallel recovery of nodes or an entire cluster. With recent performance improvements, we further removed the unnecessary thread synchronization during persistence recovery. We have also introduced parallel disk store recovery within each Geode server. The improvement has made Geode parallel recovery even faster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Calculating the Size of an Apache Geode Region</title>
      
      <link>/data/tanzu-gemfire/blog/calculating-the-size-of-a-geode-region/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/calculating-the-size-of-a-geode-region/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Calculating the size of an Apache Geode &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/cache/Region.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Region&lt;/a&gt; can be useful for capacity planning. While certain statistics like PartitionedRegionStats dataStoreBytesInUse are helpful in this regard, they are limited. For example, this statistic does not exist for replicated Regions. &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/size/ObjectGraphSizer.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;ObjectGraphSizer&lt;/a&gt; can be used to calculate the size of any object in bytes and to create a histogram of the object being sized. It does this by recursively traversing each field of the object.&lt;/p&gt;
&lt;p&gt;An &lt;a href=&#34;https://github.com/apache/geode/blob/210dc4fe9b1657d8d7cb5c197c6b0153389be3ea/geode-core/src/main/java/org/apache/geode/internal/size/ObjectGraphSizer.java#L242&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;ObjectFilter&lt;/a&gt; can be used in conjunction with ObjectGraphSizer to accept or reject each object as it is traversed. Its basic use is to reject objects that shouldn’t be included in the size. Without the appropriate ObjectFilter, ObjectGraphSizer would traverse practically every object in the JVM while sizing a Region since it has a reference to its Cache and DistributedSystem.&lt;/p&gt;
&lt;p&gt;This article describes how to use ObjectGraphSizer to calculate the size of a Region.&lt;/p&gt;
&lt;h2 id=&#34;region-implementation&#34;&gt;Region Implementation&lt;/h2&gt;
&lt;p&gt;There are mainly two different kinds of Regions, namely replicated and partitioned. Each is implemented differently.&lt;/p&gt;
&lt;h3 id=&#34;replicated-region&#34;&gt;Replicated Region&lt;/h3&gt;
&lt;p&gt;A replicated Region is implemented by a &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/DistributedRegion.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;DistributedRegion&lt;/a&gt; which contains a map of RegionEntries. Each &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/RegionEntry.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;RegionEntry&lt;/a&gt; contains the key and data value.&lt;/p&gt;
&lt;p&gt;A simplified architecture is shown below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/calculating-the-size-of-a-geode-region/diagrams/barry_06_24_diagram1.png&#34; alt=&#34;Class Diagram For Distributed Region&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;partitioned-region&#34;&gt;Partitioned Region&lt;/h2&gt;
&lt;p&gt;A partitioned Region is implemented by a &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegion.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;PartitionedRegion&lt;/a&gt; which contains a collection of BucketRegions. A &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/BucketRegion.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;BucketRegion&lt;/a&gt; is an extension of DistributedRegion.&lt;/p&gt;
&lt;p&gt;A simplified architecture is shown below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/calculating-the-size-of-a-geode-region/diagrams/barry_06_24_diagram2.png&#34; alt=&#34;class diagram for PartitionedRegion&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;All source code described in this article as well as an example usage is available &lt;a href=&#34;https://github.com/boglesby/calculate-region-size&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The implementation consists of a &lt;a href=&#34;https://github.com/boglesby/calculate-region-size/blob/master/server/src/main/java/example/server/function/CalculateRegionSizeFunction.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;CalculateRegionSizeFunction&lt;/a&gt; and a &lt;a href=&#34;https://github.com/boglesby/calculate-region-size/blob/master/server/src/main/java/example/server/function/RegionObjectFilter.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;RegionObjectFilter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For each input region name, the &lt;strong&gt;CalculateRegionSizeFunction&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gets the Region&lt;/li&gt;
&lt;li&gt;invokes ObjectGraphSizer to calculate the size in bytes and create a histogram of the Region in that server&lt;/li&gt;
&lt;li&gt;writes the Region’s size and histogram in the server’s log&lt;/li&gt;
&lt;li&gt;returns the Region’s size and histogram in a &lt;a href=&#34;https://github.com/boglesby/calculate-region-size/blob/master/server/src/main/java/example/SingleMemberRegionSize.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;SingleMemberRegionSize&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;strong&gt;RegionObjectFilter&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;implements ObjectFilter and is used to determine whether to include or reject an object from the Region’s size&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A &lt;strong&gt;SingleMemberRegionSize&lt;/strong&gt; is created for each Region and returned to the client. It encapsulates:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;regionName&lt;/li&gt;
&lt;li&gt;size&lt;/li&gt;
&lt;li&gt;histogram&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;calculate-region-size&#34;&gt;Calculate Region Size&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;CalculateRegionSizeFunction&lt;/strong&gt; calculateSize method invokes ObjectGraphSizer to calculate the region size and create the histogram:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SingleMemberRegionSize&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;calculateSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cache&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;SingleMemberRegionSize&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;ObjectGraphSizer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;ObjectFilter&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RegionObjectFilter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regionSize&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ObjectGraphSizer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regionHistogram&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ObjectGraphSizer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;histogram&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SingleMemberRegionSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regionSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regionHistogram&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLogger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;warning&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Caught the following exception attempting to calculate the size of region=&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getFullPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;accept-or-reject-objects-from-region-size&#34;&gt;Accept or Reject Objects from Region Size&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;RegionObjectFilter&lt;/strong&gt; accept method receives the object and its parent object and uses these to decide whether to accept or reject the object. In this case, it just uses the class of the object.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;RegionObjectFilter&lt;/strong&gt; was tested with a few different region configurations, including PARTITION_REDUNDANT_PERSISTENT and REPLICATE_PERSISTENT Regions. Other configurations may introduce different object references that should also be excluded but are not. In that case, the sizer would not be completely accurate. Enabling logging can help debug this kind of issue.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;RegionObjectFilter&lt;/strong&gt; accept method:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;accept&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Cache&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CachePerfStats&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Class&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ClusterDistributionManager&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DiskRegionStats&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DiskStore&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DistributedLockService&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DistributedMember&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DistributedSystem&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Logger&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HeapLRUStatistics&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OneTaskOnlyExecutor&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PartitionedRegionStats&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PersistentMemberManager&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ResourceManager&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ScheduledThreadPoolExecutor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;logAllClasses&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;logRejectedClasses&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;logObject&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Rejecting&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;accept&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;logAllClasses&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;logAcceptedClasses&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;logObject&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Accepting&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;create-region-histogram&#34;&gt;Create Region Histogram&lt;/h3&gt;
&lt;p&gt;The ObjectGraphSizer histogram method is used to create the histogram of the Region. For each object included in the size, the histogram shows the class of that object, the number of those objects and the size in bytes of those objects.&lt;/p&gt;
&lt;p&gt;In the current code, the histogram is logged only on the server, but the &lt;strong&gt;SingleMemberRegionSize&lt;/strong&gt; instance returned to the client contains the histogram, so the code can be easily changed to log it on the client as well.&lt;/p&gt;
&lt;p&gt;Each server’s log file will contain a message with the Region’s histogram like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/06/16 14:35:38.119 HST &amp;lt;ServerConnection on port 52917 Thread 16&amp;gt; tid=0xe1] Histogram for PartitionedTrade is:
clazz size count
...
class java.util.concurrent.atomic.AtomicLong 33624 1401
class org.apache.geode.internal.cache.BucketRegion 39600 75
class java.util.concurrent.locks.ReentrantReadWriteLock 42336 1764
class [Ljava.util.HashMap$Node; 42856 642
class java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock 49760 3110
class java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter 49760 3110
class java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock 49760 3110
class [Lorg.apache.geode.internal.util.concurrent.CustomEntryConcurrentHashMap$HashEntry; 58440 1232
class org.apache.geode.internal.util.concurrent.CustomEntryConcurrentHashMap$Segment 68992 1232
class java.util.concurrent.ConcurrentHashMap 91136 1424
class java.util.HashMap 91728 1911
class [Ljava.util.concurrent.ConcurrentHashMap$Node; 100928 377
class [C 101288 1047
class org.apache.geode.internal.cache.PreferBytesCachedDeserializable 106400 6650
class java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync 145632 3034
class org.apache.geode.internal.cache.DiskId$PersistenceWithIntOffset 319200 6650
class org.apache.geode.internal.cache.entries.VersionedThinDiskRegionEntryHeapStringKey1 425600 6650
class [B 7344032 6701
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;logging-parent-and-child-objects&#34;&gt;Logging Parent and Child Objects&lt;/h3&gt;
&lt;p&gt;The logging in the &lt;strong&gt;RegionObjectFilter&lt;/strong&gt; accept method can be used to log every object being traversed along with its parent. Logging like this can be used to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;help determine objects to reject from the size&lt;/li&gt;
&lt;li&gt;determine the path from the root to each object&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each log message contains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;object toString&lt;/li&gt;
&lt;li&gt;object identity using System.identityHashCode&lt;/li&gt;
&lt;li&gt;object class name&lt;/li&gt;
&lt;li&gt;parent object toString&lt;/li&gt;
&lt;li&gt;parent object identity using System.identityHashCode&lt;/li&gt;
&lt;li&gt;parent object class name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using the object and parent identities makes it easy to navigate from an object to the root.&lt;/p&gt;
&lt;p&gt;Reduced logging for the path from the root Region to the RegionEntry in the partitioned case looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/06/17 05:56:50.838 HST &amp;lt;ServerConnection on port 62526 Thread 3&amp;gt; tid=0x5e] Accepting object=Partitioned Region @7cbe8a7a [path=&#39;/PartitionedTrade&#39;; dataPolicy=PERSISTENT_PARTITION; ...] objectIdentity=2092862074; objectClass=org.apache.geode.internal.cache.PartitionedRegion; parent=null parentIdentity=0; parentClass=null
[info 2020/06/17 05:56:50.840 HST &amp;lt;ServerConnection on port 62526 Thread 3&amp;gt; tid=0x5e] Accepting object=CacheDistributionAdvisor for region /PartitionedTrade objectIdentity=1698241241; objectClass=org.apache.geode.internal.cache.partitioned.RegionAdvisor; parent=Partitioned Region @7cbe8a7a [path=&#39;/PartitionedTrade&#39;; dataPolicy=PERSISTENT_PARTITION; ...] parentIdentity=2092862074; parentClass=org.apache.geode.internal.cache.PartitionedRegion
[info 2020/06/17 05:56:51.033 HST &amp;lt;ServerConnection on port 62526 Thread 3&amp;gt; tid=0x5e] Accepting object=org.apache.geode.internal.cache.ProxyBucketRegion@411197b2 objectIdentity=1091671986; objectClass=org.apache.geode.internal.cache.ProxyBucketRegion; parent=[ProxyBucketRegion;@1e291594 parentIdentity=506008980; parentClass=[ProxyBucketRegion;
[info 2020/06/17 05:56:51.185 HST &amp;lt;ServerConnection on port 62526 Thread 3&amp;gt; tid=0x5e] Accepting object=BucketRegion[path=&#39;/__PR/_B__PartitionedTrade_48;serial=124;primary=false] objectIdentity=1339192337; objectClass=org.apache.geode.internal.cache.BucketRegion; parent=org.apache.geode.internal.cache.ProxyBucketRegion@411197b2 parentIdentity=1091671986; parentClass=org.apache.geode.internal.cache.ProxyBucketRegion
[info 2020/06/17 05:56:51.760 HST &amp;lt;ServerConnection on port 62526 Thread 3&amp;gt; tid=0x5e] Accepting object=org.apache.geode.internal.cache.VMRegionMap@2641ec8f objectIdentity=641854607; objectClass=org.apache.geode.internal.cache.VMRegionMap; parent=BucketRegion[path=&#39;/__PR/_B__PartitionedTrade_48;serial=124;primary=false] parentIdentity=1339192337; parentClass=org.apache.geode.internal.cache.BucketRegion
[info 2020/06/17 05:56:52.536 HST &amp;lt;ServerConnection on port 62526 Thread 3&amp;gt; tid=0x5e] Accepting object={0=VersionedThinDiskRegionEntryHeapStringKey1@15fd1f1f (key=0; rawValue=PreferBytesCachedDeserializable@1819111325; version={v1; rv1; mbr=f1306b3bd360487b-8263dc885915f613; time=1592409319324};member=f1306b3bd360487b-8263dc885915f613)} objectIdentity=306255424; objectClass=org.apache.geode.internal.util.concurrent.CustomEntryConcurrentHashMap; parent=org.apache.geode.internal.cache.VMRegionMap@2641ec8f parentIdentity=641854607; parentClass=org.apache.geode.internal.cache.VMRegionMap
[info 2020/06/17 05:56:53.331 HST &amp;lt;ServerConnection on port 62526 Thread 3&amp;gt; tid=0x5e] Accepting object=VersionedThinDiskRegionEntryHeapStringKey1@15fd1f1f (key=0; rawValue=PreferBytesCachedDeserializable@1819111325; version={v1; rv1; mbr=f1306b3bd360487b-8263dc885915f613; time=1592409319324};member=f1306b3bd360487b-8263dc885915f613) objectIdentity=368910111; objectClass=org.apache.geode.internal.cache.entries.VersionedThinDiskRegionEntryHeapStringKey1; parent=[CustomEntryConcurrentHashMap$HashEntry;@7eb505fd parentIdentity=2125792765; parentClass=[CustomEntryConcurrentHashMap$HashEntry;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;return-results&#34;&gt;Return Results&lt;/h3&gt;
&lt;p&gt;A collection of &lt;strong&gt;SingleMemberRegionSize&lt;/strong&gt; instances are returned to the client from each member, one per sized Region.&lt;/p&gt;
&lt;p&gt;They are currently logged on the client like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Member sizes for regions [ReplicatedTrade, PartitionedTrade]:
member=xxx.xxx.x.xx(server-1:37320)&amp;lt;v1&amp;gt;:41001(version:UNKNOWN[ordinal=115])
        regionName=ReplicatedTrade; size=12,404,384 bytes
        regionName=PartitionedTrade; size=9,716,936 bytes
member=xxx.xxx.x.xx(server-2:37322)&amp;lt;v2&amp;gt;:41002(version:UNKNOWN[ordinal=115])
        regionName=ReplicatedTrade; size=12,404,256 bytes
        regionName=PartitionedTrade; size=9,832,064 bytes
member=xxx.xxx.x.xx(server-3:37323)&amp;lt;v3&amp;gt;:41003(version:UNKNOWN[ordinal=115])
        regionName=ReplicatedTrade; size=12,404,128 bytes
        regionName=PartitionedTrade; size=9,674,160 bytes
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;future&#34;&gt;Future&lt;/h2&gt;
&lt;p&gt;Region APIs that use ObjectGraphSizer like these would be very useful additions to Apache Geode:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;getSizeInBytes to calculate the Region’s size in bytes&lt;/li&gt;
&lt;li&gt;getHistogram to create a histogram&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, including the parent object field name in the ObjectFilter accept method would be helpful in determining whether to include or reject the object from the size.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Geode Write-Behind Event Handling with Spring JPA</title>
      
      <link>/data/tanzu-gemfire/blog/geode-write-behind-event-handling-with-spring-jpa/</link>
      <pubDate>Fri, 12 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/geode-write-behind-event-handling-with-spring-jpa/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; is an in-memory data grid that provides real-time, consistent access to data-intensive applications throughout widely distributed cloud architectures. One of the most used features of Apache Geode is the &lt;em&gt;Write-Behind Cache Event Handling&lt;/em&gt; which allows the user to keep external databases in sync with the data stored within an Apache Geode region(s).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://spring.io/projects/spring-data-jpa&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Data JPA&lt;/a&gt;, part of the larger &lt;a href=&#34;https://spring.io/projects/spring-data&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Data&lt;/a&gt; family, allows the user to easily implement JPA based repositories. The module itself deals with enhanced support for JPA based data access layers and makes it easier to build Spring-powered applications that use data access technologies.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.spring.io/spring-boot-data-geode-build/1.2.7.RELEASE/reference/html5/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Boot Data Geode&lt;/a&gt; provides the convenience of &lt;a href=&#34;https://spring.io/projects/spring-boot&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Boot’s&lt;/a&gt; convention over configuration approach using auto-configuration with the Spring Framework’s powerful abstractions and highly consistent programming model to truly simplify the development of Apache Geode applications in a Spring context.&lt;/p&gt;
&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;
&lt;p&gt;Implementing a data access layer of an application is a cumbersome task, a lot of boilerplate code needs to be written and tested to execute simple queries, perform pagination, auditing, etc. Spring Data JPA allows the user to significantly improve the implementation of data access layers by reducing the effort to the amount that’s actually needed.&lt;/p&gt;
&lt;p&gt;An &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/cache/asyncqueue/AsyncEventListener.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;AsyncEventListener&lt;/a&gt; is a simple Apache Geode callback that asynchronously processes batches of events after they have been applied to an Apache Geode &lt;em&gt;Region&lt;/em&gt;. It’s widely used to implement a write-behind cache event handler to synchronize region updates with an external database. It’s, however, cumbersome to configure the &lt;em&gt;asynchronous-event-queue&lt;/em&gt; and the region itself using plain Apache Geode configuration files or Java API. Spring Boot Data Geode makes the process easier, faster, and less error-prone, simplifying the configuration, development, testing, and deployment of the application.&lt;/p&gt;
&lt;p&gt;Having those technologies out there in the open, why would we want to spend hours and resources in developing and testing the parts on our own?… Guess what, we don’t!; instead, we’re gonna build a small and simple project to show how an Apache Geode write-behind event handling can be easily implemented with the help of Spring Data JPA and Spring Boot Data Geode.&lt;/p&gt;
&lt;h2 id=&#34;how&#34;&gt;How?&lt;/h2&gt;
&lt;p&gt;We will build an application that stores &lt;em&gt;Employee&lt;/em&gt; POJOs (Plain Old Java Objects) within an in-memory-based database. We won’t store those objects manually, though, our application will only use an Apache Geode &lt;em&gt;Region&lt;/em&gt; as the datastore, and we’ll leverage an &lt;em&gt;Asynchronous Event Queue&lt;/em&gt; to synchronize our &lt;em&gt;Region&lt;/em&gt; with the external database.&lt;/p&gt;
&lt;h3 id=&#34;setting-things-up&#34;&gt;Setting Things Up&lt;/h3&gt;
&lt;p&gt;The fastest and easiest way to set up a &lt;em&gt;Spring Application&lt;/em&gt; from scratch is to use &lt;a href=&#34;https://start.spring.io/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Initializr&lt;/a&gt;, which offers a fast way to pull in all the dependencies we need for an application and does a lot of the set up automatically.&lt;/p&gt;
&lt;p&gt;This example needs the &lt;em&gt;H2 Database&lt;/em&gt;, &lt;em&gt;Spring Data JPA&lt;/em&gt;, and &lt;em&gt;Spring for Apache Geode dependencies&lt;/em&gt;. The following image shows the &lt;em&gt;Initializr&lt;/em&gt; set up for the sample project:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/geode-write-behind-event-handling-with-spring-jpa/initializr-screenshot.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;h3 id=&#34;defining-the-entity&#34;&gt;Defining the Entity&lt;/h3&gt;
&lt;p&gt;In this example we store &lt;code&gt;Employee&lt;/code&gt; objects, each annotated as a JPA entity, so let’s create that.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.examples.model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;


&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.io.Serializable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.util.Objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;javax.persistence.Entity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;javax.persistence.GeneratedValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;javax.persistence.GenerationType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;javax.persistence.Id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@Entity&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Employee&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Serializable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nd&#34;&gt;@Id&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getSurname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;surname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Employee{&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        &lt;span class=&#34;s&#34;&gt;&amp;#34;id=&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        &lt;span class=&#34;s&#34;&gt;&amp;#34;, name=&amp;#39;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        &lt;span class=&#34;s&#34;&gt;&amp;#34;, surname=&amp;#39;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;surname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
        &lt;span class=&#34;sc&#34;&gt;&amp;#39;}&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;hashCode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;hashCode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;31&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;hashCode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;31&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;surname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;surname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;hashCode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here we have an &lt;code&gt;Employee&lt;/code&gt; class with three attributes: &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, and &lt;code&gt;surname&lt;/code&gt;. We also have two constructors: the default exists only for the sake of JPA, we will only use the other one to create instances of the &lt;code&gt;Employee&lt;/code&gt; class.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Employee&lt;/code&gt; class is annotated with &lt;code&gt;Entity&lt;/code&gt;, indicating that it is a JPA entity. (Because no &lt;em&gt;Table&lt;/em&gt; annotation exists, it is assumed that this entity is mapped to a table named &lt;code&gt;Employee&lt;/code&gt;). The &lt;code&gt;Employee&lt;/code&gt; object’s &lt;code&gt;id&lt;/code&gt; property is annotated with &lt;code&gt;Id&lt;/code&gt; so that JPA recognizes it as the object’s ID. The other two properties, &lt;code&gt;name&lt;/code&gt;, and &lt;code&gt;surname&lt;/code&gt;, are left unannotated, it is assumed that they are mapped to columns that share the same names as the properties themselves.&lt;/p&gt;
&lt;h3 id=&#34;creating-the-repository&#34;&gt;Creating the Repository&lt;/h3&gt;
&lt;p&gt;Spring Data JPA focuses on using JPA to store data in a relational database, one of its “best features” is the ability to create repository implementations automatically from a repository interface (no boiler-plate code needed on our end, yay!).&lt;/p&gt;
&lt;p&gt;We won’t be executing custom queries nor anything like that in our example, so we just need to create an empty repository interface that works with &lt;code&gt;Employee&lt;/code&gt; entities and let Spring Data JPA do its magic for us.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.examples.repository&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.data.repository.CrudRepository&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.examples.model.Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;EmployeeRepository&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CrudRepository&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Our &lt;code&gt;EmployeeRepository&lt;/code&gt; extends the &lt;code&gt;CrudRepository&lt;/code&gt; interface; the type of entity and ID that it works with, &lt;code&gt;Employee&lt;/code&gt; and &lt;code&gt;Long&lt;/code&gt;, are specified in the generic parameters on &lt;code&gt;CrudRepository&lt;/code&gt;. By extending &lt;code&gt;CrudRepository&lt;/code&gt;, &lt;code&gt;EmployeeRepository&lt;/code&gt; inherits several methods for working with &lt;code&gt;Employee&lt;/code&gt; persistence, including methods for saving, deleting, and finding &lt;code&gt;Employee&lt;/code&gt; entities.&lt;/p&gt;
&lt;h3 id=&#34;implementing-the-asynceventlistener&#34;&gt;Implementing the AsyncEventListener&lt;/h3&gt;
&lt;p&gt;As stated before, an &lt;code&gt;AsyncEventListener&lt;/code&gt; asynchronously processes batches of events after they have been applied to a &lt;em&gt;Region&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.examples.config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.util.List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.slf4j.Logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.slf4j.LoggerFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.stereotype.Component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.cache.asyncqueue.AsyncEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.cache.asyncqueue.AsyncEventListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.examples.model.Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.examples.repository.EmployeeRepository&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@Component&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;EmployeeAsyncEventListener&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AsyncEventListener&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Logger&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLogger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EmployeeAsyncEventListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EmployeeRepository&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employeeRepository&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;EmployeeAsyncEventListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EmployeeRepository&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employeeRepository&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;employeeRepository&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employeeRepository&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;processEvents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AsyncEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;events&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;events&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;asyncEvent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;asyncEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDeserializedValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Processing Employee {}...&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;employeeRepository&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;save&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Processing Employee {}... Done!&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;});&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In our case, the &lt;em&gt;Region&lt;/em&gt; contains &lt;code&gt;Employee&lt;/code&gt; instances, and we just need to delegate to our &lt;code&gt;EmployeeRepository&lt;/code&gt; in order to persist the entity in the external database (for the sake of simplicity, we won’t deal with errors nor transactional behavior right now).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Component&lt;/code&gt; annotation indicates that the class should be considered by &lt;em&gt;Spring&lt;/em&gt; as candidates for auto-detection when using annotation-based configuration and classpath scanning.&lt;/p&gt;
&lt;h3 id=&#34;configuring-the-apache-geode-region&#34;&gt;Configuring the Apache Geode Region&lt;/h3&gt;
&lt;p&gt;At this point we just need to wire things up, that is, define a &lt;code&gt;GeodeConfiguration&lt;/code&gt; class and annotate it with the &lt;code&gt;Configuration&lt;/code&gt; annotation to tag it as a source of bean definitions for the application context.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.examples.config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.context.annotation.Bean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.context.annotation.Configuration&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.data.gemfire.ReplicatedRegionFactoryBean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.data.gemfire.wan.AsyncEventQueueFactoryBean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.cache.Cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.cache.GemFireCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.cache.asyncqueue.AsyncEventQueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.examples.model.Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@Configuration&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;GeodeConfiguration&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Bean&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;AsyncEventQueueFactoryBean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;employeeAsyncEventQueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GemFireCache&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EmployeeAsyncEventListener&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;asyncEventListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;AsyncEventQueueFactoryBean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueFactoryBean&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AsyncEventQueueFactoryBean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;queueFactoryBean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setAsyncEventListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;asyncEventListener&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;queueFactoryBean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Bean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Employees&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;ReplicatedRegionFactoryBean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;employeesRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GemFireCache&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AsyncEventQueue&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;asyncEventQueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ReplicatedRegionFactoryBean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regionFactoryBean&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ReplicatedRegionFactoryBean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;regionFactoryBean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;regionFactoryBean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setPersistent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;regionFactoryBean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setAsyncEventQueues&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AsyncEventQueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;asyncEventQueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;});&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regionFactoryBean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;employeeAsyncEventQueue()&lt;/code&gt; method simply defines the Apache Geode &lt;em&gt;AsyncEventQueue&lt;/em&gt; that we are going to use as the container for our &lt;code&gt;EmployeeAsyncEventListener&lt;/code&gt;. The listener instance itself will be auto-magically instantiated and passed to our method by &lt;em&gt;Spring&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;employeesRegion()&lt;/code&gt; method just defines and configures the Apache Geode &lt;em&gt;Region&lt;/em&gt;, it attaches the &lt;em&gt;AsyncEventQueue&lt;/em&gt; and sets the &lt;em&gt;Region&lt;/em&gt; as non-persistent &lt;em&gt;Replicate&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;creating-the-application-class&#34;&gt;Creating The Application Class&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.examples&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.boot.SpringApplication&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.data.gemfire.config.annotation.CacheServerApplication&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.data.gemfire.config.annotation.EnableLogging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@EnableLogging&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@CacheServerApplication&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;JPAAsyncListenerApplication&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;SpringApplication&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JPAAsyncListenerApplication&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;SpringBootApplication&lt;/code&gt; annotation is for convenience, it adds all of the following to our application:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Configuration:&lt;/em&gt; Tags the class as a source of bean definitions for the application context.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;ComponentScan:&lt;/em&gt; Tells Spring to look for other components, configurations, and services in the &lt;code&gt;org.apache.geode.examples&lt;/code&gt; package.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;EnableAutoConfiguration:&lt;/em&gt; Tells Spring Boot to start adding beans based on classpath settings, other beans, and various property settings.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We also added some Spring Boot Data Geode annotations to customize the behavior of our Apache Geode &lt;em&gt;Cache&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;EnableLogging:&lt;/em&gt; Tells Spring Boot Data Geode to configure and enable Apache Geode system logging.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;CacheServerApplication:&lt;/em&gt; Tells Spring Boot Data Geode to enable an embedded Apache Geode &lt;em&gt;CacheServer&lt;/em&gt; instance. Moreover, this also implies an embedded peer &lt;em&gt;Cache&lt;/em&gt; must exist and, therefore, will be configured, constructed, and initialized as a Spring bean in the application context.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;running-the-application&#34;&gt;Running the Application&lt;/h3&gt;
&lt;p&gt;Believe it or not, the work is done!… with a handful set of classes and annotations (and, as you’ve noticed, almost no code written by us) we have a fully working and operational application, so let’s test it!.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.examples&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.assertj.core.api.Assertions.assertThat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import static&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.awaitility.Awaitility.await&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.util.ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;java.util.List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;javax.annotation.Resource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.junit.jupiter.api.Test&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.slf4j.Logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.slf4j.LoggerFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.springframework.boot.test.context.SpringBootTest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.cache.Region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.cache.asyncqueue.AsyncEventQueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.examples.model.Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;org.apache.geode.examples.repository.EmployeeRepository&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@SpringBootTest&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;JPAAsyncListenerApplicationTest&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Logger&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLogger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JPAAsyncListenerApplicationTest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Autowired&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EmployeeRepository&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;repository&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Autowired&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AsyncEventQueue&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;asyncEventQueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Resource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Employees&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employeesRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Test&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;jpaListenerTest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employees&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;employees&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1L&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Zell&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Dincht&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;employees&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;2L&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Quistis&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Trepe&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;employees&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;3L&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Irvine&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Kinneas&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;employees&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;4L&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Rinoa&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Heartilly&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;employees&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;5L&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Squall&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Leonhart&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// DB empty at the beginning.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;assertThat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repository&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;findAll&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isEmpty&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Employees found with findAll():&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;-------------------------------&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;repository&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;findAll&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()));&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;-------------------------------&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// Insert some employees into the Geode Region
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;employees&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employeesRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// Wait for queues to drain (AsyncEventListener invoked).
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Waiting for AsyncEventQueue to drain...&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;await&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;untilAsserted&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;assertThat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;asyncEventQueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isEqualTo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Waiting for AsyncEventQueue to drain... Done!.&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// DB should now have all the employees inserted through the AsyncEventListener.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;Iterable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;employeeList&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;repository&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;findAll&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;assertThat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employeeList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;hasSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employees&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;employeeList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;assertThat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employees&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)));&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Employees found with findAll():&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;-------------------------------&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;employeeList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;employee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()));&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;-------------------------------&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The test is straightforward and simple: we check that the database is empty, insert some &lt;code&gt;Employee&lt;/code&gt; instances into the Apache Geode &lt;em&gt;Region&lt;/em&gt;, wait for the actual &lt;em&gt;Asynchronous Event Queue&lt;/em&gt; to be empty (the &lt;code&gt;AsyncEventListener&lt;/code&gt; processed all the events) and, at the very end, verify that the database contains exactly the &lt;code&gt;Employe&lt;/code&gt; instances we inserted into the &lt;em&gt;Region&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;whats-next&#34;&gt;What&amp;rsquo;s next?&lt;/h2&gt;
&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/jujoramos/geode-async-listener-spring-jpa&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;geode-async-listener-spring-jpa&lt;/a&gt; project and play around with it, you can add Transaction Management and Error Handling to the AsyncEventListener, build a cluster, etc.&lt;/p&gt;
&lt;p&gt;Check out &lt;a href=&#34;https://docs.spring.io/spring-boot-data-geode-build/current/reference/html5/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Boot for Apache Geode&lt;/a&gt;, you can do way more things more easily and quickly, with just some extra annotations!.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Verifying Apache Geode Region Consistency in Different Distributed Systems</title>
      
      <link>/data/tanzu-gemfire/blog/verifying-apache-geode-region-consistency/</link>
      <pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/verifying-apache-geode-region-consistency/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Apache Geode provides a mechanism to asynchronously distribute batches of events between two disparate DistributedSystems called a &lt;a href=&#34;https://geode.apache.org/docs/guide/12/topologies_and_comm/multi_site_configuration/chapter_overview.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;WAN topology&lt;/a&gt;. The events are stored in queues in the local DistributedSystem before being batched and distributed.&lt;/p&gt;
&lt;p&gt;If a connection cannot be made to the remote WAN site, the events remain in the GatewaySender’s queue until such time as a connection can be made. At that time, events are batched and sent to the remote site. Once an acknowledgement has been received by the GatewaySender for those events, they are removed from the queue. Whether the events are successfully applied in the remote site is not taken into account. Any exceptions that occur in the remote site are logged in both sites, but once the acknowledgement is received, the events are removed from the queue. This decision was made mainly to prevent issues in the remote site (e.g. memory pressure, partitions offline, etc.) from cascading back to and affecting the local site.&lt;/p&gt;
&lt;p&gt;The default behavior can be changed with the &lt;em&gt;&lt;strong&gt;gemfire.GatewaySender.REMOVE_FROM_QUEUE_ON_EXCEPTION&lt;/strong&gt;&lt;/em&gt; java system property. Setting this property to false will cause all batches of events to be retried indefinitely until they succeed.&lt;/p&gt;
&lt;p&gt;The default behavior can cause a Region’s data in each site to become inconsistent. This article describes a way to verify that a Region’s data in two WAN sites is consistent.&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;All source code described in this article is available &lt;a href=&#34;https://github.com/boglesby/verify-wan-consistency&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;WanVerificationService&lt;/strong&gt; is instantiated with a Region name, a Pool connected to site 1 and a Pool connected site 2. It:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;creates a proxy Region connected to site 1 and gets the keySet for the Region on that site&lt;/li&gt;
&lt;li&gt;creates a proxy Region connected to site 2 and gets the keySet for the Region on that site&lt;/li&gt;
&lt;li&gt;compares the keySets for equality&lt;/li&gt;
&lt;li&gt;iterates site 1 keySet and for each key compares the value in site 1 to the value in site 2&lt;/li&gt;
&lt;li&gt;if the keySets aren’t equal, iterates site 2 keySet and for each key compares the value in site 1 to the value in site 2. Note: if the keySets are equal, this step is not necessary. Also, this step could be improved by getting the keys in site 2 that are not in site 1 and comparing just those values.&lt;/li&gt;
&lt;li&gt;logs the result&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The keySet comparison is done using equals.&lt;/p&gt;
&lt;p&gt;The value comparison is done using a &lt;strong&gt;ValueComparator&lt;/strong&gt; which defines one method called compare. The default implementation of compare uses equals, so if the value class implements equals, the default implementation will work fine. But, if the value class does not implement equals, then a non-default &lt;strong&gt;ValueComparator&lt;/strong&gt; will be required to compare the two values.&lt;/p&gt;
&lt;p&gt;The resulting comparison is logged. This behavior could be enhanced with a callback that allows the user to take some action to repair the sites.&lt;/p&gt;
&lt;h3 id=&#34;create-proxy-region-and-get-keyset&#34;&gt;Create Proxy Region and Get keySet&lt;/h3&gt;
&lt;p&gt;The getKeySet method:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;creates a proxy Region connected to the input site&lt;/li&gt;
&lt;li&gt;gets the keySet for the Region on that site using keySetOnServer&lt;/li&gt;
&lt;li&gt;closes the Region&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The getKeySet method is invoked for each site.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getKeySet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regionName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;siteName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;createRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regionName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;siteName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keySet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;keySetOnServer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;closeRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keySet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The createRegion method creates a proxy Region connected to a specific site.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;createRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regionName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;siteName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ClientCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;createClientRegionFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ClientRegionShortcut&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;PROXY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setPoolName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;siteName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regionName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Unfortunately, a Region can only be connected to one Pool (and thus one site), and once the Region is connected to that Pool, it can’t be changed. So, to repeatedly connect to one site then the other, the Region must constantly be closed and recreated. Luckily this is an inexpensive operation.&lt;/p&gt;
&lt;p&gt;The closeRegion method is used to close a proxy Region. It also closes the ClientMetadataService which clears its known server-to-bucket layout.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;closeRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InternalCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getClientMetadataService&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;compare-keysets&#34;&gt;Compare keySets&lt;/h3&gt;
&lt;p&gt;The compareKeySets method:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;compares the keySets using equals&lt;/li&gt;
&lt;li&gt;If the keySets are not equal, the differences are determined using removeIf with the contains predicate&lt;/li&gt;
&lt;li&gt;builds up the StringBuilder with the results&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;compareKeySets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site1Keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site2Keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;builder&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\n\n==============&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\nComparing keys&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\n==============&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allKeysAreEqual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site1Keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site2Keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allKeysAreEqual&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\nAll &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site1Keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; keys are equal&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\nAll keys are not equal. Site 1 contains &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site1Keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; keys. Site 2 contains &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site2Keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; keys.&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site1Differences&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HashSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site1Keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;site1Differences&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;removeIf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site2Keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\nSite 1 contains these &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site1Differences&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; keys not found in site 2: &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site1Differences&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site2Differences&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HashSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site2Keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;site2Differences&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;removeIf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site1Keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\nSite 2 contains these &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site2Differences&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; keys not found in site 1: &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site2Differences&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allKeysAreEqual&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;compare-values-in-each-site&#34;&gt;Compare Values in Each Site&lt;/h3&gt;
&lt;p&gt;The compareAllValues method iterates the keySet and, for each key, invokes compareSingleValues to compare the value in each site.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;compareAllValues&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regionName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ValueComparer&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;valueComparer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fromSite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;toSite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;builder&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\n\n=============================================&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\nComparing values in site &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fromSite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; to those in site &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toSite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\n=============================================&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;allValuesAreEqual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compareSingleValues&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regionName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;valueComparer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;allValuesAreEqual&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;builder&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\nAll values in site &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fromSite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; are equal to those in site &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toSite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To compare the value in each site, the compareSingleValues method:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;creates a proxy Region connected to site 1&lt;/li&gt;
&lt;li&gt;gets the value for the key in site 1&lt;/li&gt;
&lt;li&gt;closes the Region to site 1&lt;/li&gt;
&lt;li&gt;repeats the above steps for site 2&lt;/li&gt;
&lt;li&gt;compares the values using the &lt;strong&gt;ValueComparer&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;builds up the StringBuilder with the results&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;compareSingleValues&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regionName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ValueComparer&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;valueComparer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;c1&#34;&gt;// Get the value in site 1
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site1Region&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;createRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regionName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;site1Pool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site1Value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site1Region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;closeRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site1Region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// Get the value in site 2
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site2Region&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;createRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regionName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;site2Pool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site2Value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site2Region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;closeRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site2Region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// Compare the values
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;valuesAreEqual&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site1Value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site2Value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;valuesAreEqual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site1Value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;valuesAreEqual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;valueComparer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site2Value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site1Value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;valuesAreEqual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;valueComparer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site1Value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site2Value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;valuesAreEqual&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;builder&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\nValues are not equal for key=&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;; site1Value=&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site1Value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;; site2Value=&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site2Value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;allValuesAreEqual&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;log-the-result&#34;&gt;Log the Result&lt;/h3&gt;
&lt;p&gt;Some examples of the results logged are shown below.&lt;/p&gt;
&lt;p&gt;If the keys in both sites are equal, but the values are not, a message like below is logged:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Verifying entries for region=Trade
==============
Comparing keys
==============
All 20 keys are equal
============================================
Comparing values in site 1 to those in site 2
=============================================
Values are not equal for key=0; site1Value=Trade(id=0, cusip=MRK, shares=12, price=202.65); site2Value=Trade(id=0, cusip=PFE, shares=11, price=682.45)
Values are not equal for key=1; site1Value=Trade(id=1, cusip=UNH, shares=51, price=995.72); site2Value=Trade(id=1, cusip=BAC, shares=69, price=882.05)
Values are not equal for key=2; site1Value=Trade(id=2, cusip=CMCSA, shares=83, price=684.68); site2Value=Trade(id=2, cusip=TM, shares=98, price=143.51)
Values are not equal for key=3; site1Value=Trade(id=3, cusip=V, shares=42, price=346.58); site2Value=Trade(id=3, cusip=GOOGL, shares=93, price=467.43)
Values are not equal for key=4; site1Value=Trade(id=4, cusip=AXP, shares=53, price=244.85); site2Value=Trade(id=4, cusip=PG, shares=66, price=270.92)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If the keys in both sites are not equal, a message like below is logged:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Verifying entries for region=Trade
==============
Comparing keys
==============
All keys are not equal. Site 1 contains 10 keys. Site 2 contains 10 keys.
Site 1 contains these 10 keys not found in site 2: [0, 12, 2, 14, 4, 16, 6, 18, 8, 10]
Site 2 contains these 10 keys not found in site 1: [11, 1, 13, 3, 15, 5, 17, 7, 19, 9]
=============================================
Comparing values in site 1 to those in site 2
=============================================
Values are not equal for key=0; site1Value=Trade(id=0, cusip=CRM, shares=44, price=921.92); site2Value=null
Values are not equal for key=12; site1Value=Trade(id=12, cusip=UNH, shares=56, price=846.28); site2Value=null
Values are not equal for key=2; site1Value=Trade(id=2, cusip=BAC, shares=78, price=939.22); site2Value=null
Values are not equal for key=14; site1Value=Trade(id=14, cusip=TM, shares=34, price=708.74); site2Value=null
Values are not equal for key=4; site1Value=Trade(id=4, cusip=V, shares=96, price=242.98); site2Value=null
...
=============================================
Comparing values in site 2 to those in site 1
=============================================
Values are not equal for key=11; site1Value=null; site2Value=Trade(id=11, cusip=PFE, shares=57, price=85.83)
Values are not equal for key=1; site1Value=null; site2Value=Trade(id=1, cusip=CRM, shares=81, price=796.38)
Values are not equal for key=13; site1Value=null; site2Value=Trade(id=13, cusip=INTC, shares=75, price=412.98)
Values are not equal for key=3; site1Value=null; site2Value=Trade(id=3, cusip=FB, shares=33, price=64.32)
Values are not equal for key=15; site1Value=null; site2Value=Trade(id=15, cusip=CVS, shares=18, price=893.04)
...
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;caveats&#34;&gt;Caveats&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;WanVerificationService&lt;/strong&gt; should be run when the sites are not active and the queues are empty. Any events in the queues or in-flight between sites are ignored, so if the sites are active or the queues contain events, the results might incorrectly show differences which may not exist.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;WanVerificationService&lt;/strong&gt; calls the Region get method on each key in each site. If the Region defines a CacheLoader, it will be invoked if the value is null for that key.&lt;/p&gt;
&lt;h2 id=&#34;future&#34;&gt;Future&lt;/h2&gt;
&lt;p&gt;A service like this built into Apache Geode would be useful.&lt;/p&gt;
&lt;p&gt;The service should also provide a callback for unequal values so that the application can take some action to repair the sites (e.g. applying the value in one site to the other).&lt;/p&gt;
&lt;p&gt;There are a number of Apache Geode enhancements that would be helpful in this scenario including the ability to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;change a client Region’s Pool so that it can easily switch between sites&lt;/li&gt;
&lt;li&gt;connect a client Region to two Pools simultaneously and to choose on which to invoke an operation&lt;/li&gt;
&lt;li&gt;connect a client Region to two Pools simultaneously in a primary / secondary arrangement&lt;/li&gt;
&lt;li&gt;automatically or manually failover and failback between Pools&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Logging Apache Geode GatewaySender Queue Events</title>
      
      <link>/data/tanzu-gemfire/blog/logging-apache-geode-gatewaysender-queue-events/</link>
      <pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/logging-apache-geode-gatewaysender-queue-events/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Apache Geode provides a mechanism to asynchronously distribute batches of events between two disparate DistributedSystems called a &lt;a href=&#34;https://geode.apache.org/docs/guide/12/topologies_and_comm/multi_site_configuration/chapter_overview.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;WAN topology&lt;/a&gt;. The events are stored in queues in the local DistributedSystem before being batched and distributed. For troubleshooting purposes, it is sometimes necessary to see the events in the queue, but there is no OOTB way to do this.&lt;/p&gt;
&lt;p&gt;This is a how-to article that describes a way to log all the events in a GatewaySender queue.&lt;/p&gt;
&lt;h2 id=&#34;gatewaysender-queue-implementation&#34;&gt;GatewaySender Queue Implementation&lt;/h2&gt;
&lt;p&gt;There are two different kinds of GatewaySenders, namely serial and parallel. The queue for each is implemented differently.&lt;/p&gt;
&lt;h3 id=&#34;serial-gatewaysender-queue&#34;&gt;Serial GatewaySender Queue&lt;/h3&gt;
&lt;p&gt;The serial GatewaySender queue is implemented by a collection of DistributedRegions, one per dispatcher thread.&lt;/p&gt;
&lt;p&gt;A simplified architecture is shown below:
&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/logging-apache-geode-gatewaysender-queue-events/diagrams/barry_06_03_diagram.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;h3 id=&#34;parallel-gatewaysender-queue&#34;&gt;Parallel GatewaySender Queue&lt;/h3&gt;
&lt;p&gt;The parallel GatewaySender queue is implemented by a single PartitionedRegion colocated with the data Region attached to it. Each dispatcher thread processes a subset of the PartitionedRegion buckets.&lt;/p&gt;
&lt;p&gt;A simplified architecture is shown below:
&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/logging-apache-geode-gatewaysender-queue-events/diagrams/barry_06_03_diagram1.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;h3 id=&#34;queue-region-entries&#34;&gt;Queue Region Entries&lt;/h3&gt;
&lt;p&gt;The queue Region entries are keyed by continuously-increasing longs and valued by instances of &lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/internal/cache/wan/GatewaySenderEventImpl.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GatewaySenderEventImpl&lt;/a&gt;, each of which defines several fields including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;region: the name of the Region on which the event occurs&lt;/li&gt;
&lt;li&gt;operation: the operation (e.g. Create)&lt;/li&gt;
&lt;li&gt;key: the modified key&lt;/li&gt;
&lt;li&gt;value: the modified value&lt;/li&gt;
&lt;li&gt;possible duplicate: whether the event may have been received in the remote DistributedSystem. It gets set to true after HA events (e.g. a server crashing).&lt;/li&gt;
&lt;li&gt;event id: the originator of the event and other order-preserving information&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;All source code described in this article as well as an example usage is available &lt;a href=&#34;https://github.com/boglesby/log-gateway-sender-queue&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For each input GatewaySender id, the &lt;strong&gt;LogGatewaySenderQueueFunction&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gets the GatewaySender&lt;/li&gt;
&lt;li&gt;creates the appropriate &lt;strong&gt;GatewaySenderQueueLogger&lt;/strong&gt; based on the type of GatewaySender&lt;/li&gt;
&lt;li&gt;invokes logQueue on the &lt;strong&gt;GatewaySenderQueueLogger&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The GatewaySenderQueueLogger:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gets the Region(s) implementing the GatewaySender queue&lt;/li&gt;
&lt;li&gt;for serial GatewaySenders, gets and logs all entries sorted by key and grouped by dispatcher thread&lt;/li&gt;
&lt;li&gt;for parallel GatewaySenders, gets and logs all primary and secondary entries either sorted by key or grouped by bucket&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;serial-gatewaysender&#34;&gt;Serial GatewaySender&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Get Queue Regions&lt;/strong&gt;
To get the serial GatewaySender’s Regions, stream its RegionQueues and for each get its Region like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InternalGatewaySender&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getQueues&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rq&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Comparator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;comparing&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;collect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Collectors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Get Queue Region Contents&lt;/strong&gt;
To get the contents, stream the Regions and for each Region get its contents like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getContents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regions&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;collect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Collectors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;joining&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\n\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getContents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getHeader&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Get Queue Entries&lt;/strong&gt;
Finally, to get each entry’s contents, stream the Region’s entries and for each entry, get its contents like below. One thing to note is that the getEntry method deserializes the data value. To avoid that, pass false as the argument to the getValueAsString method. That will show the value as a byte[].&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getContents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GatewayQueueEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;entrySet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;comparingByKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getEntry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;collect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Collectors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;joining&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getEntry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GatewayQueueEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;GatewaySenderEventImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GatewaySenderEventImpl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;StringBuilder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\t\tqueueKey=&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;; region=&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegionPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;; operation=&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getOperation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;; eventKey=&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;; value=&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getValueAsString&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;; possibleDuplicate=&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getPossibleDuplicate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;; eventId=&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gsei&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getEventId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;expensiveToString&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Example Output&lt;/strong&gt;
The primary server’s log file will contain a message like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/06/01 12:49:11.567 HST &amp;lt;ServerConnection on port 57136 Thread 4&amp;gt; tid=0x87] 
The queue for serial GatewaySender nyserial contains the following 1000 primary entries grouped by dispatcher:
Queue for dispatcher nyserial.0 contains the following 200 entries:
    queueKey=0; region=/Trade; operation=CREATE; eventKey=2; value=PDX[26084582,example.client.domain.Trade]{id=2}; possibleDuplicate=true; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030000|1;sequenceID=2]
    queueKey=1; region=/Trade; operation=CREATE; eventKey=7; value=PDX[26084582,example.client.domain.Trade]{id=7}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030000|1;sequenceID=7]
    ...
  Queue for dispatcher nyserial.1 contains the following 200 entries:
    queueKey=0; region=/Trade; operation=CREATE; eventKey=3; value=PDX[26084582,example.client.domain.Trade]{id=3}; possibleDuplicate=true; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030001|1;sequenceID=3]
    queueKey=1; region=/Trade; operation=CREATE; eventKey=8; value=PDX[26084582,example.client.domain.Trade]{id=8}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030001|1;sequenceID=8]
    ...
  Queue for dispatcher nyserial.2 contains the following 200 entries:
    queueKey=0; region=/Trade; operation=CREATE; eventKey=4; value=PDX[26084582,example.client.domain.Trade]{id=4}; possibleDuplicate=true; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030002|1;sequenceID=4]
    queueKey=1; region=/Trade; operation=CREATE; eventKey=9; value=PDX[26084582,example.client.domain.Trade]{id=9}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030002|1;sequenceID=9]
    ...
  Queue for dispatcher nyserial.3 contains the following 200 entries:
    queueKey=0; region=/Trade; operation=CREATE; eventKey=0; value=PDX[26084582,example.client.domain.Trade]{id=0}; possibleDuplicate=true; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030003|1;sequenceID=0]
    queueKey=1; region=/Trade; operation=CREATE; eventKey=5; value=PDX[26084582,example.client.domain.Trade]{id=5}; possibleDuplicate=true; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030003|1;sequenceID=5]
    ...
  Queue for dispatcher nyserial.4 contains the following 200 entries:
    queueKey=0; region=/Trade; operation=CREATE; eventKey=1; value=PDX[26084582,example.client.domain.Trade]{id=1}; possibleDuplicate=true; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030004|1;sequenceID=1]
    queueKey=1; region=/Trade; operation=CREATE; eventKey=6; value=PDX[26084582,example.client.domain.Trade]{id=6}; possibleDuplicate=true; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030004|1;sequenceID=6]
    ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Any secondary server’s log file will contain a message like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/06/01 12:49:11.600 HST &amp;lt;ServerConnection on port 57163 Thread 4&amp;gt; tid=0x89] 
The queue for serial GatewaySender nyserial contains the following 1000 secondary entries grouped by dispatcher:
Queue for dispatcher nyserial.0 contains the following 200 entries:
    queueKey=0; region=/Trade; operation=CREATE; eventKey=2; value=PDX[26084582,example.client.domain.Trade]{id=2}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030000|1;sequenceID=2]
    queueKey=1; region=/Trade; operation=CREATE; eventKey=7; value=PDX[26084582,example.client.domain.Trade]{id=7}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030000|1;sequenceID=7]
    ...
  Queue for dispatcher nyserial.1 contains the following 200 entries:
    queueKey=0; region=/Trade; operation=CREATE; eventKey=3; value=PDX[26084582,example.client.domain.Trade]{id=3}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030001|1;sequenceID=3]
    queueKey=1; region=/Trade; operation=CREATE; eventKey=8; value=PDX[26084582,example.client.domain.Trade]{id=8}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030001|1;sequenceID=8]
    ...
  Queue for dispatcher nyserial.2 contains the following 200 entries:
    queueKey=0; region=/Trade; operation=CREATE; eventKey=4; value=PDX[26084582,example.client.domain.Trade]{id=4}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030002|1;sequenceID=4]
    queueKey=1; region=/Trade; operation=CREATE; eventKey=9; value=PDX[26084582,example.client.domain.Trade]{id=9}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030002|1;sequenceID=9]
    ...
  Queue for dispatcher nyserial.3 contains the following 200 entries:
    queueKey=0; region=/Trade; operation=CREATE; eventKey=0; value=PDX[26084582,example.client.domain.Trade]{id=0}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030003|1;sequenceID=0]
    queueKey=1; region=/Trade; operation=CREATE; eventKey=5; value=PDX[26084582,example.client.domain.Trade]{id=5}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030003|1;sequenceID=5]
    ...
  Queue for dispatcher nyserial.4 contains the following 200 entries:
    queueKey=0; region=/Trade; operation=CREATE; eventKey=1; value=PDX[26084582,example.client.domain.Trade]{id=1}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030004|1;sequenceID=1]
    queueKey=1; region=/Trade; operation=CREATE; eventKey=6; value=PDX[26084582,example.client.domain.Trade]{id=6}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1030004|1;sequenceID=6]
    ...
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;parallel-gatewaysender&#34;&gt;Parallel GatewaySender&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Get Queue Region&lt;/strong&gt;
The parallel GatewaySender Region is retrieved directly from the Cache like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ParallelGatewaySenderQueue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;QSTRING&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Get Primary and Secondary LocalDataSets&lt;/strong&gt;
To get the primary LocalDataSet, use the code like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GatewayQueueEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;primaryData&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PartitionRegionHelper&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLocalPrimaryData&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There isn’t an existing way to get the secondary LocalDataSet. To get it, use a method like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GatewayQueueEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getLocalSecondaryData&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;primaryBucketIds&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDataStore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAllLocalPrimaryBucketIds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allBucketIds&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HashSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDataStore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAllLocalBucketIds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;allBucketIds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;removeAll&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;primaryBucketIds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LocalDataSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allBucketIds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Get Queue Entries&lt;/strong&gt;
Once the LocalDataSet has been retrieved, its entries can be gotten using the methods in the serial GatewaysSender case &lt;a href=&#34;https://medium.com/@boglesby_2508/logging-apache-geode-gatewaysender-queue-events-e7e19937a542#2112&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example Output&lt;/strong&gt;
Each server’s log file will contain messages for its primary and secondary queues like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/06/01 12:46:46.802 HST &amp;lt;ServerConnection on port 57163 Thread 2&amp;gt; tid=0x87] 
The queue for parallel GatewaySender ny contains the following 342 primary entries:
  queueKey=113; region=/Trade; operation=CREATE; eventKey=54; value=PDX[26084582,example.client.domain.Trade]{id=54}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x10000|1;sequenceID=54;bucketID=0]
  queueKey=117; region=/Trade; operation=CREATE; eventKey=58; value=PDX[26084582,example.client.domain.Trade]{id=58}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x10004|1;sequenceID=58;bucketID=4]
  ...
[info 2020/06/01 12:46:46.884 HST &amp;lt;ServerConnection on port 57163 Thread 2&amp;gt; tid=0x87] 
The queue for parallel GatewaySender ny contains the following 331 secondary entries:
  queueKey=116; region=/Trade; operation=CREATE; eventKey=57; value=PDX[26084582,example.client.domain.Trade]{id=57}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x10003|1;sequenceID=57;bucketID=3]
  queueKey=118; region=/Trade; operation=CREATE; eventKey=59; value=PDX[26084582,example.client.domain.Trade]{id=59}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x10005|1;sequenceID=59;bucketID=5]
  ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Get Primary and Secondary BucketRegions&lt;/strong&gt;
To get the local primary BucketRegions, use code like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;primaryBucketRegions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDataStore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAllLocalPrimaryBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There isn’t an existing way to get the secondary BucketRegions. To get them, use a method like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getAllLocalSecondaryBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PartitionedRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;primaryBucketRegions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDataStore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAllLocalPrimaryBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allBucketRegions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HashSet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getDataStore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAllLocalBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;allBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;removeAll&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;primaryBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allBucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Get Queue Entries by Bucket&lt;/strong&gt;
To get the contents, stream the BucketRegions and for each BucketRegion get its contents like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getContents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bucketRegions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bucketRegions&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Comparator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;comparingInt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getBucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;collect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Collectors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;joining&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\n\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getBucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BucketRegion&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getContents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getHeader&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bucketRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Each BucketRegion’s entries can be gotten using the methods in the serial GatewaysSender case &lt;a href=&#34;https://medium.com/@boglesby_2508/logging-apache-geode-gatewaysender-queue-events-e7e19937a542#2112&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example Output&lt;/strong&gt;
Each server’s log file will contain messages for its primary and secondary queues like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/06/01 12:47:56.665 HST &amp;lt;ServerConnection on port 57163 Thread 3&amp;gt; tid=0x88] 
The queue for parallel GatewaySender ny contains the following 342 primary entries grouped by bucket:
Bucket 0 contains the following 9 entries:
    queueKey=113; region=/Trade; operation=CREATE; eventKey=54; value=PDX[26084582,example.client.domain.Trade]{id=54}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x10000|1;sequenceID=54;bucketID=0]
    queueKey=226; region=/Trade; operation=CREATE; eventKey=165; value=PDX[26084582,example.client.domain.Trade]{id=165}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x10000|1;sequenceID=165;bucketID=0]
    ...
  Bucket 4 contains the following 10 entries:
    queueKey=117; region=/Trade; operation=CREATE; eventKey=58; value=PDX[26084582,example.client.domain.Trade]{id=58}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x10004|1;sequenceID=58;bucketID=4]
    queueKey=230; region=/Trade; operation=CREATE; eventKey=169; value=PDX[26084582,example.client.domain.Trade]{id=169}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x10004|1;sequenceID=169;bucketID=4]
    ...
  Bucket 10 contains the following 6 entries:
    queueKey=123; region=/Trade; operation=CREATE; eventKey=93; value=PDX[26084582,example.client.domain.Trade]{id=93}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1000a|1;sequenceID=93;bucketID=10]
    queueKey=236; region=/Trade; operation=CREATE; eventKey=210; value=PDX[26084582,example.client.domain.Trade]{id=210}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1000a|1;sequenceID=210;bucketID=10]
    ...
  Bucket 13 contains the following 6 entries:
    queueKey=126; region=/Trade; operation=CREATE; eventKey=96; value=PDX[26084582,example.client.domain.Trade]{id=96}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1000d|1;sequenceID=96;bucketID=13]
    queueKey=239; region=/Trade; operation=CREATE; eventKey=213; value=PDX[26084582,example.client.domain.Trade]{id=213}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1000d|1;sequenceID=213;bucketID=13]
    ...
  ...
[info 2020/06/01 12:47:56.679 HST &amp;lt;ServerConnection on port 57163 Thread 3&amp;gt; tid=0x88] 
The queue for parallel GatewaySender ny contains the following 331 secondary entries grouped by bucket:
Bucket 3 contains the following 9 entries:
    queueKey=116; region=/Trade; operation=CREATE; eventKey=57; value=PDX[26084582,example.client.domain.Trade]{id=57}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x10003|1;sequenceID=57;bucketID=3]
    queueKey=229; region=/Trade; operation=CREATE; eventKey=168; value=PDX[26084582,example.client.domain.Trade]{id=168}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x10003|1;sequenceID=168;bucketID=3]
    ...
  Bucket 5 contains the following 9 entries:
    queueKey=118; region=/Trade; operation=CREATE; eventKey=59; value=PDX[26084582,example.client.domain.Trade]{id=59}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x10005|1;sequenceID=59;bucketID=5]
    queueKey=231; region=/Trade; operation=CREATE; eventKey=284; value=PDX[26084582,example.client.domain.Trade]{id=284}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x10005|1;sequenceID=284;bucketID=5]
    ...
  Bucket 8 contains the following 6 entries:
    queueKey=121; region=/Trade; operation=CREATE; eventKey=91; value=PDX[26084582,example.client.domain.Trade]{id=91}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x10008|1;sequenceID=91;bucketID=8]
    queueKey=234; region=/Trade; operation=CREATE; eventKey=287; value=PDX[26084582,example.client.domain.Trade]{id=287}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x10008|1;sequenceID=287;bucketID=8]
    ...
  Bucket 12 contains the following 6 entries:
    queueKey=125; region=/Trade; operation=CREATE; eventKey=95; value=PDX[26084582,example.client.domain.Trade]{id=95}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1000c|1;sequenceID=95;bucketID=12]
    queueKey=238; region=/Trade; operation=CREATE; eventKey=212; value=PDX[26084582,example.client.domain.Trade]{id=212}; possibleDuplicate=false; eventId=EventID[xxx.xxx.x.xx(client:loner):57269:e48f0f72:client;threadID=0x1000c|1;sequenceID=212;bucketID=12]
    ...
  ...
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;future&#34;&gt;Future&lt;/h2&gt;
&lt;p&gt;A function like this as part of a larger feature that also can clear a GatewaySender queue and remove individual events from it would be a very useful addition to Apache Geode.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Spring Security &amp; Geode</title>
      
      <link>/data/tanzu-gemfire/blog/spring-security-geode/</link>
      <pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/spring-security-geode/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; is an in-memory data grid that provides real-time, consistent access to data-intensive applications throughout widely distributed cloud architectures. Starting with Geode 1.0.0, the &lt;em&gt;&lt;a href=&#34;https://github.com/apache/geode/blob/support/1.13/geode-core/src/main/java/org/apache/geode/security/SecurityManager.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;SecurityManager&lt;/a&gt;&lt;/em&gt; interface was introduced to manage the authentication and authorization mechanisms in a single place, simplifying the implementation and interactions with all components in a consistent manner.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://spring.io/projects/spring-security&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Security&lt;/a&gt; is an extremely powerful and highly customizable framework that provides authentication, authorization, and protection against common attacks, it is the de-facto standard for securing Spring-based applications.&lt;/p&gt;
&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;
&lt;p&gt;To secure an &lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; cluster, the user needs to provide a custom implementation for the &lt;em&gt;&lt;a href=&#34;https://github.com/apache/geode/blob/support/1.13/geode-core/src/main/java/org/apache/geode/security/SecurityManager.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;SecurityManager&lt;/a&gt;&lt;/em&gt; interface, so that the authentication and authorization logic is entirely encapsulated within the implementation itself.&lt;/p&gt;
&lt;p&gt;The above is, generally speaking, a pretty straightforward task: connect to the external data source (database, LDAP server, text file, etc.) where users and roles are loaded from, validate the user and password, and load into the user object the required roles. I’m oversimplifying things here but, in general, it’s certainly pretty straightforward.&lt;/p&gt;
&lt;p&gt;The problem, though, is the huge amount of boilerplate code we need to write and test to get this working: connect and manage the pool of connections to the database or active directory server, encode/decode the passwords, handle errors and checked exceptions, the list goes on and on…&lt;/p&gt;
&lt;p&gt;How would we feel if, once that everything’s up and running, a customer requests to change the datastore where the credentials are loaded from? (remember: no matter what the context is, &lt;em&gt;&lt;strong&gt;the customer is always right!)&lt;/strong&gt;&lt;/em&gt;… ugh! we’ll have to start from scratch!!.&lt;/p&gt;
&lt;p&gt;Why would we want to develop a tool to authenticate users against a database, if &lt;em&gt;&lt;a href=&#34;https://spring.io/projects/spring-security&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;spring-security&lt;/a&gt;&lt;/em&gt; already provides those implementations, fully tested and supported by the community, out of the box?. On the same page, why would we want to deal with the low-level code required to access and search an LDAP server, if &lt;em&gt;&lt;a href=&#34;https://spring.io/projects/spring-security&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;spring-security&lt;/a&gt;&lt;/em&gt; also does that for us?. The answer is easy: we don’t want to deal with all that low-level stuff and boilerplate code anymore, we just want to focus on our use case and business needs, that’s it.&lt;/p&gt;
&lt;p&gt;So why reinvent the wheel and implement the &lt;em&gt;&lt;a href=&#34;https://github.com/apache/geode/blob/support/1.13/geode-core/src/main/java/org/apache/geode/security/SecurityManager.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;SecurityManager&lt;/a&gt;&lt;/em&gt; to do the same things &lt;em&gt;&lt;a href=&#34;https://spring.io/projects/spring-security&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;spring-security&lt;/a&gt;&lt;/em&gt; already does for us?, it’s way easier (and more secure) to just choose an existing &lt;em&gt;&lt;a href=&#34;https://javadoc.io/doc/org.springframework.security/spring-security-core/latest/org/springframework/security/authentication/AuthenticationProvider.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;AuthenticationProvider&lt;/a&gt;&lt;/em&gt; and integrate it with our &lt;em&gt;&lt;a href=&#34;https://github.com/apache/geode/blob/support/1.13/geode-core/src/main/java/org/apache/geode/security/SecurityManager.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;SecurityManager&lt;/a&gt;&lt;/em&gt; instead.&lt;/p&gt;
&lt;h2 id=&#34;how&#34;&gt;How?&lt;/h2&gt;
&lt;p&gt;We will implement a &lt;em&gt;&lt;a href=&#34;https://github.com/apache/geode/blob/support/1.13/geode-core/src/main/java/org/apache/geode/security/SecurityManager.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;SecurityManager&lt;/a&gt;&lt;/em&gt; that, for authentication purposes, simply delegates to an already configured &lt;em&gt;&lt;a href=&#34;https://javadoc.io/doc/org.springframework.security/spring-security-core/latest/org/springframework/security/authentication/AuthenticationManager.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;AuthenticationManager&lt;/a&gt;&lt;/em&gt;, provided (and previously initialized) by &lt;em&gt;&lt;a href=&#34;https://spring.io/projects/spring-security&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;spring-security&lt;/a&gt;&lt;/em&gt;. For the authorization part, we’ll just verify whether or not the principal has granted permission to carry out the operation.&lt;/p&gt;
&lt;h3 id=&#34;geodegrantedauthority&#34;&gt;GeodeGrantedAuthority&lt;/h3&gt;
&lt;p&gt;Apache Geode uses the &lt;em&gt;&lt;a href=&#34;https://github.com/apache/geode/blob/support/1.13/geode-core/src/main/java/org/apache/geode/security/ResourcePermission.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;ResourcePermission&lt;/a&gt;&lt;/em&gt; class to define the resource, operation, region, and the key involved in the action to be authorized. Instances of this class are passed into the &lt;em&gt;&lt;a href=&#34;https://github.com/apache/geode/blob/develop/geode-core/src/main/java/org/apache/geode/security/SecurityManager.java#L78&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;SecurityManager.authorize&lt;/a&gt;&lt;/em&gt; method to determine whether to allow or deny the operation.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://spring.io/projects/spring-security&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring-Security&lt;/a&gt;, instead, uses the &lt;em&gt;&lt;a href=&#34;https://javadoc.io/doc/org.springframework.security/spring-security-core/latest/org/springframework/security/core/GrantedAuthority.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GrantedAuthority&lt;/a&gt;&lt;/em&gt; class to represent an authority granted to a principal.&lt;/p&gt;
&lt;p&gt;To connect both implementations, we’ll define a wrapper class, &lt;em&gt;GeodeGrantedAuthority&lt;/em&gt;, that simply implements the &lt;em&gt;&lt;a href=&#34;https://javadoc.io/doc/org.springframework.security/spring-security-core/latest/org/springframework/security/core/GrantedAuthority.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GrantedAuthority&lt;/a&gt;&lt;/em&gt; interface from &lt;a href=&#34;https://spring.io/projects/spring-security&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;spring-security&lt;/a&gt; and encapsulates a &lt;em&gt;&lt;a href=&#34;https://github.com/apache/geode/blob/support/1.13/geode-core/src/main/java/org/apache/geode/security/ResourcePermission.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;ResourcePermission&lt;/a&gt;&lt;/em&gt; instance from &lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;GeodeGrantedAuthority&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GrantedAuthority&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ResourcePermission&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resourcePermission&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ResourcePermission&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getResourcePermission&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resourcePermission&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;GeodeGrantedAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;resourcePermission&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ResourcePermission&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;resource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resourcePermission&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;geodeauthoritiesmapper&#34;&gt;GeodeAuthoritiesMapper&lt;/h3&gt;
&lt;p&gt;We don’t want to change our current stored roles and/or authorities, though, no matter what they are or how they are represented, to match the ones used by &lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Instead, and to integrate both representations seamlessly, we’ll implement the &lt;em&gt;&lt;a href=&#34;https://javadoc.io/doc/org.springframework.security/spring-security-core/latest/org/springframework/security/core/authority/mapping/GrantedAuthoritiesMapper.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GrantedAuthoritiesMapper&lt;/a&gt;&lt;/em&gt; interface, which can be injected into the authentication layer to convert the authorities loaded from the storage into those which will be stored in the &lt;em&gt;&lt;a href=&#34;https://javadoc.io/doc/org.springframework.security/spring-security-core/latest/org/springframework/security/core/Authentication.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Authentication&lt;/a&gt;&lt;/em&gt; object.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;GeodeAuthoritiesMapper&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GrantedAuthoritiesMapper&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INVALID_AUTHORITY_ERROR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;The authority can not be mapped to a valid Geode ResourcePermission: &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

  &lt;span class=&#34;n&#34;&gt;GeodeGrantedAuthority&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;parseAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stringAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;c1&#34;&gt;// TODO: Mapping logic here.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exception&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INVALID_AUTHORITY_ERROR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stringAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exception&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Collection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GrantedAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;mapAuthorities&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Collection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GrantedAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;authorities&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;Collection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GeodeGrantedAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;geodeGrantedAuthorities&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;authorities&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grantedAuthority&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;geodeGrantedAuthorities&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parseAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grantedAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())));&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;geodeGrantedAuthorities&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;geodeauthenticationprovider&#34;&gt;GeodeAuthenticationProvider&lt;/h3&gt;
&lt;p&gt;Even though the &lt;em&gt;&lt;a href=&#34;https://javadoc.io/doc/org.springframework.security/spring-security-core/latest/org/springframework/security/core/authority/mapping/GrantedAuthoritiesMapper.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GrantedAuthoritiesMapper&lt;/a&gt;&lt;/em&gt; interface is public and supposed to be implemented to convert loaded authorities from storage during the authentication phase, not every &lt;em&gt;&lt;a href=&#34;https://javadoc.io/doc/org.springframework.security/spring-security-core/latest/org/springframework/security/authentication/AuthenticationProvider.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;AuthenticationProvider&lt;/a&gt;&lt;/em&gt; has a public setter method to configure it (at least I couldn’t find it).&lt;/p&gt;
&lt;p&gt;That said, the whole purpose of the &lt;em&gt;&lt;a href=&#34;https://javadoc.io/doc/org.springframework.security/spring-security-core/latest/org/springframework/security/authentication/dao/DaoAuthenticationProvider.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GeodeAuthenticationProvider&lt;/a&gt;&lt;/em&gt; class is to make that setter method available to users, it simply delegates everything else to the parent DaoAuthenticationProvider class.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;GeodeAuthenticationProvider&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DaoAuthenticationProvider&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setAuthoritiesMapper&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GrantedAuthoritiesMapper&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;authoritiesMapper&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setAuthoritiesMapper&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authoritiesMapper&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;springsecuritymanager&#34;&gt;SpringSecurityManager&lt;/h3&gt;
&lt;p&gt;This is the main class, which implements the &lt;a href=&#34;https://github.com/apache/geode/blob/support/1.13/geode-core/src/main/java/org/apache/geode/security/SecurityManager.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;SecurityManager&lt;/a&gt; interface from &lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; and encapsulates both the authentication and authorization logic.&lt;/p&gt;
&lt;p&gt;During initialization, we create the application context using the properties passed by &lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; to the &lt;em&gt;&lt;a href=&#34;http://more%20easily%20and%20quickly%2C/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;SecurityManager.init&lt;/a&gt;&lt;/em&gt; method, and obtain the single configured &lt;em&gt;&lt;a href=&#34;https://javadoc.io/doc/org.springframework.security/spring-security-core/latest/org/springframework/security/authentication/AuthenticationManager.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;AuthenticationManager&lt;/a&gt;&lt;/em&gt; instance.&lt;/p&gt;
&lt;p&gt;We only require a single property to work: &lt;em&gt;security-spring-security-xml&lt;/em&gt;, which should refer to the spring-security XML configuration. To load the application context, we use the &lt;em&gt;&lt;a href=&#34;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/support/FileSystemXmlApplicationContext.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;FileSystemXmlApplicationContext&lt;/a&gt;&lt;/em&gt; class, so the configuration file itself could be either in the filesystem &lt;em&gt;(“file:/path/to/file.xml”)&lt;/em&gt; or within the classpath &lt;em&gt;(“classpath:/path/to/file.xml”)&lt;/em&gt;. The “beauty” of this approach is that we can change the authentication layer entirely by just pointing to another configuration file, &lt;strong&gt;without changing a single line of code&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Properties&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;securityProps&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;securityProps&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;containsKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SECURITY_CONFIGURATION_XML&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NO_SECURITY_CONFIGURATION_FOUND_ERROR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;springContext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;synchronized&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LOCK&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;springContext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;springConfigurationPath&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;securityProps&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SECURITY_CONFIGURATION_XML&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;springContext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FileSystemXmlApplicationContext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;springConfigurationPath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;springContext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;registerShutdownHook&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;n&#34;&gt;authenticationManager&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;springContext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getBean&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AuthenticationManager&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For the authentication part, we just obtain the credentials passed by &lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; and delegate to the already initialized &lt;em&gt;&lt;a href=&#34;https://javadoc.io/doc/org.springframework.security/spring-security-core/latest/org/springframework/security/authentication/AuthenticationManager.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;AuthenticationManager&lt;/a&gt;&lt;/em&gt; instance.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;authenticate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Properties&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;credentials&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AuthenticationFailedException&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;credentials&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;USER_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;credentials&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PASSWORD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Authentication&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;authentication&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;authenticationManager&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;authenticate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UsernamePasswordAuthenticationToken&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authentication&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AuthenticationFailedException&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INVALID_CREDENTIALS_ERROR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;authentication&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For the authorization part, we just get the &lt;em&gt;&lt;a href=&#34;https://javadoc.io/doc/org.springframework.security/spring-security-core/latest/org/springframework/security/core/GrantedAuthority.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GrantedAuthority&lt;/a&gt;&lt;/em&gt; list (all were transformed by our &lt;em&gt;GeodeAuthoritiesMapper&lt;/em&gt; already) from the principal passed by &lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; and decide whether it has the required permissions to execute the action or not.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;authorize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;principal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ResourcePermission&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Authentication&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;authentication&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Authentication&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;principal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Collection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;?&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GrantedAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grantedAuthorities&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;authentication&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAuthorities&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GrantedAuthority&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grantedAuthority&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grantedAuthorities&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grantedAuthority&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GeodeGrantedAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;GeodeGrantedAuthority&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;geodeGrantedAuthority&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GeodeGrantedAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grantedAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geodeGrantedAuthority&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getResourcePermission&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;implies&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;p&gt;The code itself is simple and self-explanatory, the only “hard part” is configuring &lt;em&gt;&lt;a href=&#34;https://spring.io/projects/spring-security&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;spring-security&lt;/a&gt;&lt;/em&gt; using the “old-school” XML approach instead of the new annotation or java configuration options (sorry about that, I still prefer to configure things step by step using XML, which in this case also has the benefit of not shipping the configuration with the actual implementation).&lt;/p&gt;
&lt;h3 id=&#34;compile-and-deploy&#34;&gt;Compile and Deploy&lt;/h3&gt;
&lt;p&gt;The first step is to download the project and build it, we’ll also need to add some dependencies to the &lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; member’s classpath later on, so it’s a good time to get the dependencies generated now.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;geode-spring-security (master): ./gradlew build copyDependencies

BUILD SUCCESSFUL in 2m 20s
6 actionable tasks: 6 executed
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;update-member-configuration&#34;&gt;Update Member Configuration&lt;/h3&gt;
&lt;p&gt;There are some extra libraries required for the integration to work as they’re not included in the member’s classpath by default. We have to carefully chose the spring version to match the one used by &lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt;, having different versions of the same library within the class path can cause several headaches…&lt;/p&gt;
&lt;p&gt;Below is the list of extra libraries that need to be added, all can be found under the directory build/dependencies (copied by the &lt;em&gt;copyDependencies&lt;/em&gt; &lt;a href=&#34;https://gradle.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;gradle&lt;/a&gt; task):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ls -l /workspace/extraLibs/
geode-spring-security-1.0.0.jar
spring-aop-5.2.1.RELEASE.jar
spring-beans-5.2.1.RELEASE.jar
spring-context-5.2.1.RELEASE.jar
spring-expression-5.2.1.RELEASE.jar
spring-security-config-5.2.1.RELEASE.jar
spring-security-core-5.2.1.RELEASE.jar
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Aside from that, we’ll also need to define some extra properties for Apache Geode to pick up our &lt;em&gt;&lt;a href=&#34;https://github.com/apache/geode/blob/support/1.13/geode-core/src/main/java/org/apache/geode/security/SecurityManager.java&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;SecurityManager&lt;/a&gt;&lt;/em&gt; implementation (see &lt;a href=&#34;https://geode.apache.org/docs/guide/112/managing/security/enable_security.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;), and to allow our servers to authenticate against the running locator.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/workspace/config/locator.properties
security-manager=org.apache.geode.tools.security.SpringSecurityManager
security-spring-security-xml=file:/workspace/config/inMemory-security-config.xml
/workspace/config/server.properties
security-username=clusterManager
security-password=clusterManagerPassword
security-spring-security-xml=file:/workspace/config/inMemory-security-config.xml
/workspace/config/inMemory-security-config.xml
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;beans:beans xmlns=&amp;quot;http://www.springframework.org/schema/security&amp;quot;
             xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
             xmlns:beans=&amp;quot;http://www.springframework.org/schema/beans&amp;quot;
             xsi:schemaLocation=&amp;quot;
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd&amp;quot;&amp;gt;
&amp;lt;user-service id=&amp;quot;inMemoryUserDetailsManager&amp;quot;&amp;gt;
        &amp;lt;user name=&amp;quot;clientReader&amp;quot; password=&amp;quot;{noop}clientReaderPassword&amp;quot; authorities=&amp;quot;DATA:READ&amp;quot;/&amp;gt;
        &amp;lt;user name=&amp;quot;clientWriter&amp;quot; password=&amp;quot;{noop}clientWriterPassword&amp;quot; authorities=&amp;quot;DATA:WRITE&amp;quot;/&amp;gt;
        &amp;lt;user name=&amp;quot;clusterReader&amp;quot; password=&amp;quot;{noop}clusterReaderPassword&amp;quot; authorities=&amp;quot;CLUSTER:READ&amp;quot;/&amp;gt;
        &amp;lt;user name=&amp;quot;clusterManager&amp;quot; password=&amp;quot;{noop}clusterManagerPassword&amp;quot; authorities=&amp;quot;CLUSTER:MANAGE&amp;quot;/&amp;gt;
    &amp;lt;/user-service&amp;gt;
&amp;lt;beans:bean id=&amp;quot;geodeAuthenticationProvider&amp;quot; class=&amp;quot;org.apache.geode.tools.security.GeodeAuthenticationProvider&amp;quot;&amp;gt;
        &amp;lt;beans:property name=&amp;quot;authoritiesMapper&amp;quot;&amp;gt;
            &amp;lt;beans:bean class=&amp;quot;org.apache.geode.tools.security.GeodeAuthoritiesMapper&amp;quot;/&amp;gt;
        &amp;lt;/beans:property&amp;gt;
        &amp;lt;beans:property name=&amp;quot;userDetailsService&amp;quot; ref=&amp;quot;inMemoryUserDetailsManager&amp;quot;/&amp;gt;
&amp;lt;/beans:bean&amp;gt;
&amp;lt;authentication-manager&amp;gt;
        &amp;lt;authentication-provider ref=&amp;quot;geodeAuthenticationProvider&amp;quot;/&amp;gt;
    &amp;lt;/authentication-manager&amp;gt;
&amp;lt;/beans:beans&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;start-the-cluster&#34;&gt;Start The Cluster&lt;/h3&gt;
&lt;p&gt;Now that all configuration steps are done, it’s time to start our secured Apache Geode cluster!.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt;set variable --name=CURRENT_DIRECTORY --value=/workspace
Value for variable CURRENT_DIRECTORY is now: /workspace.
------------------------------------------------------------------
gfsh&amp;gt;start locator --name=locator1 --security-properties-file=${CURRENT_DIRECTORY}/config/locator.properties --classpath=${CURRENT_DIRECTORY}/extraLibs/geode-spring-security-1.0.0.jar:${CURRENT_DIRECTORY}/extraLibs/spring-security-core-5.2.1.RELEASE.jar:${CURRENT_DIRECTORY}/extraLibs/spring-security-config-5.2.1.RELEASE.jar:${CURRENT_DIRECTORY}/extraLibs/spring-context-5.2.1.RELEASE.jar:${CURRENT_DIRECTORY}/extraLibs/spring-beans-5.2.1.RELEASE.jar:${CURRENT_DIRECTORY}/extraLibs/spring-aop-5.2.1.RELEASE.jar:${CURRENT_DIRECTORY}/extraLibs/spring-expression-5.2.1.RELEASE.jar
Starting a Geode Locator in /Users/jramos/Desktop/Tickets/temporal/locator1...
........
Locator in /Users/jramos/Desktop/Tickets/temporal/locator1 on 192.168.8.102[10334] as locator1 is currently online.
Process ID: 56700
Uptime: 9 seconds
Geode Version: 1.12.0
Java Version: 1.8.0_221
Log File: /Users/jramos/Desktop/Tickets/temporal/locator1/locator1.log
JVM Arguments: -DgemfireSecurityPropertyFile=/Users/jramos/Desktop/Tickets/temporal/config/locator.properties -Dgemfire.enable-cluster-configuration=true -Dgemfire.load-cluster-configuration-from-dir=false -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806
Class-Path: /Users/jramos/Applications/Apache/Geode/1.12.0/apache-geode-1.12.0/lib/geode-core-1.12.0.jar:/Users/jramos/Desktop/Tickets/temporal/extraLibs/geode-spring-security-1.0.0.jar:/Users/jramos/Desktop/Tickets/temporal/extraLibs/spring-security-core-5.2.1.RELEASE.jar:/Users/jramos/Desktop/Tickets/temporal/extraLibs/spring-security-config-5.2.1.RELEASE.jar:/Users/jramos/Desktop/Tickets/temporal/extraLibs/spring-context-5.2.1.RELEASE.jar:/Users/jramos/Desktop/Tickets/temporal/extraLibs/spring-beans-5.2.1.RELEASE.jar:/Users/jramos/Desktop/Tickets/temporal/extraLibs/spring-aop-5.2.1.RELEASE.jar:/Users/jramos/Desktop/Tickets/temporal/extraLibs/spring-expression-5.2.1.RELEASE.jar:/Users/jramos/Applications/Apache/Geode/1.12.0/apache-geode-1.12.0/lib/geode-dependencies.jar
Unable to auto-connect (Security Manager may be enabled). Please use &amp;quot;connect --locator=192.168.8.102[10334] --user --password&amp;quot; to connect Gfsh to the locator.
Authentication required to connect to the Manager.
------------------------------------------------------------------
gfsh&amp;gt;start server --name=server1 --security-properties-file=${CURRENT_DIRECTORY}/config/server.properties --locators=localhost[10334] --classpath=${CURRENT_DIRECTORY}/extraLibs/geode-spring-security-1.0.0.jar:${CURRENT_DIRECTORY}/extraLibs/spring-security-core-5.2.1.RELEASE.jar:${CURRENT_DIRECTORY}/extraLibs/spring-security-config-5.2.1.RELEASE.jar:${CURRENT_DIRECTORY}/extraLibs/spring-context-5.2.1.RELEASE.jar:${CURRENT_DIRECTORY}/extraLibs/spring-beans-5.2.1.RELEASE.jar:${CURRENT_DIRECTORY}/extraLibs/spring-aop-5.2.1.RELEASE.jar:${CURRENT_DIRECTORY}/extraLibs/spring-expression-5.2.1.RELEASE.jar
Starting a Geode Server in /Users/jramos/Desktop/Tickets/temporal/server1...
.....
Server in /Users/jramos/Desktop/Tickets/temporal/server1 on 192.168.8.102[40404] as server1 is currently online.
Process ID: 56756
Uptime: 6 seconds
Geode Version: 1.12.0
Java Version: 1.8.0_221
Log File: /Users/jramos/Desktop/Tickets/temporal/server1/server1.log
JVM Arguments: -DgemfireSecurityPropertyFile=/Users/jramos/Desktop/Tickets/temporal/config/server.properties -Dgemfire.locators=localhost[10334] -Dgemfire.start-dev-rest-api=false -Dgemfire.use-cluster-configuration=true -XX:OnOutOfMemoryError=kill -KILL %p -Dgemfire.launcher.registerSignalHandlers=true -Djava.awt.headless=true -Dsun.rmi.dgc.server.gcInterval=9223372036854775806
Class-Path: /Users/jramos/Applications/Apache/Geode/1.12.0/apache-geode-1.12.0/lib/geode-core-1.12.0.jar:/Users/jramos/Desktop/Tickets/temporal/extraLibs/geode-spring-security-1.0.0.jar:/Users/jramos/Desktop/Tickets/temporal/extraLibs/spring-security-core-5.2.1.RELEASE.jar:/Users/jramos/Desktop/Tickets/temporal/extraLibs/spring-security-config-5.2.1.RELEASE.jar:/Users/jramos/Desktop/Tickets/temporal/extraLibs/spring-context-5.2.1.RELEASE.jar:/Users/jramos/Desktop/Tickets/temporal/extraLibs/spring-beans-5.2.1.RELEASE.jar:/Users/jramos/Desktop/Tickets/temporal/extraLibs/spring-aop-5.2.1.RELEASE.jar:/Users/jramos/Desktop/Tickets/temporal/extraLibs/spring-expression-5.2.1.RELEASE.jar:/Users/jramos/Applications/Apache/Geode/1.12.0/apache-geode-1.12.0/lib/geode-dependencies.jar
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;At this point the secured cluster is up and running, we must provide a valid user and password to be able to connect to it, and make sure we have the required privileges to execute the operations we want.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;------------------------------------------------------------------
Valid User - CLUSTER:MANAGE authority not granted
------------------------------------------------------------------
gfsh&amp;gt;connect --user=clusterReader --password=clusterReaderPassword
Connecting to Locator at [host=localhost, port=10334] ..
Connecting to Manager at [host=192.168.8.102, port=1099] ..
Successfully connected to: [host=192.168.8.102, port=1099]
gfsh&amp;gt;shutdown --include-locators=true
As a lot of data in memory will be lost, including possibly events in queues, do you really want to shutdown the entire distributed system? (Y/n): Y
Unauthorized. Reason : org.springframework.security.authentication.UsernamePasswordAuthenticationToken@2d88af7c: Principal: org.springframework.security.core.userdetails.User@902a735d: Username: clusterReader; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: CLUSTER:READ; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: org.apache.geode.tools.security.GeodeGrantedAuthority@425d23e5 not authorized for CLUSTER:MANAGE
------------------------------------------------------------------
Valid User - CLUSTER:MANAGE authority granted
------------------------------------------------------------------
gfsh&amp;gt;connect --user=clusterManager --password=clusterManagerPassword
Connecting to Locator at [host=localhost, port=10334] ..
Connecting to Manager at [host=192.168.8.102, port=1099] ..
Successfully connected to: [host=192.168.8.102, port=1099]
gfsh&amp;gt;shutdown --include-locators=true
As a lot of data in memory will be lost, including possibly events in queues, do you really want to shutdown the entire distributed system? (Y/n): Y
Shutdown is triggered
gfsh&amp;gt;
No longer connected to 192.168.8.102[1099].
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;what-next&#34;&gt;What next?&lt;/h2&gt;
&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/jujoramos/geode-spring-security&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;geode-spring-security&lt;/a&gt; project and play around with it, the &lt;em&gt;SpringSecurityManagerDistributedTest&lt;/em&gt; it’s a great starting point as it shows how to set different authentication mechanisms and stores (dataBase, in-Memory, and LDAP) &lt;em&gt;&lt;strong&gt;without changing a single line of code&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Check out &lt;a href=&#34;https://spring.io/projects/spring-data-geode&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Data for Apache Geode&lt;/a&gt;, you can do way more things (including what we’ve done here) more easily and quickly, with just some extra annotations!.&lt;/p&gt;
&lt;p&gt;Looking for other interesting use cases? check the following articles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@jujoramos/geode-distributed-sequences-12626251d5e3&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Geode Distributed Sequences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@jujoramos/the-command-region-pattern-14bc49594eca&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;The Command Region Pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@huynhja/publishing-apache-geode-metrics-to-wavefront-6e9a6cf5992b&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Publishing Apache Geode Metrics to Wavefront&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@boglesby_2508/converting-all-apache-geode-statistics-to-micrometer-meters-e5c94fdc1c56&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Converting All Apache Geode Statistics to Micrometer Meters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@boglesby_2508/remove-unused-pdxtypes-from-an-apache-geode-distributed-system-5a4f0e199e34&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Removing Unused PdxTypes from an Apache Geode Distributed System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@huynhja/ingest-store-and-search-json-data-with-apache-kafka-and-apache-geode-fc6d0d2f9d9f&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Ingest, Store and Search JSON data with Apache Kafka and Apache Geode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Need help with a complex problem or want to validate your solution? share some details with the &lt;a href=&#34;https://markmail.org/search/?q=list%3Aorg.apache.geode.user&amp;#43;order%3Adate-backward&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;user&lt;/a&gt; list.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/apache/geode&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spring-projects/spring-security&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Security Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spring-projects/spring-data-geode&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Data Geode Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jujoramos/geode-spring-security&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Geode Spring Security Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Converting All Apache Geode Statistics to Micrometer Meters</title>
      
      <link>/data/tanzu-gemfire/blog/converting-apache-geode-statistics-to-micrometer-meters/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/converting-apache-geode-statistics-to-micrometer-meters/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; provides many Statistics for monitoring the Distributed System including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Region Statistics (e.g. entries, creates, gets, updates, destroys)&lt;/li&gt;
&lt;li&gt;Cache Server Statistics (e.g. currentClientConnections, currentClients, putRequests, getRequests, threadQueueSize)&lt;/li&gt;
&lt;li&gt;Function Execution Statistics (e.g. functionExecutionCalls, functionExecutionsCompleted)&lt;/li&gt;
&lt;li&gt;Gateway Sender Statistics (e.g. eventQueueSize, batchesDistributed)&lt;/li&gt;
&lt;li&gt;Distribution Statistics (e.g. nodes, receivedBytes, sentBytes, receivers, sendersTO, functionExecutionQueueSize)&lt;/li&gt;
&lt;li&gt;Client Proxy Statistics (e.g. messageQueueSize, messagesProcessed)&lt;/li&gt;
&lt;li&gt;Sampler Statistics (e.g. delayDuration)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Statistics have been used for both monitoring and troubleshooting a Distributed System. They are available as JMX attributes mainly for monitoring and also are written to files mainly for troubleshooting. Monitoring is done via Geode tools like Pulse or JMX tools like JProfiler. Troubleshooting is done via a tool like &lt;a href=&#34;https://gemtalksystems.com/products/vsd/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;vsd&lt;/a&gt; that reads and helps analyze the files.&lt;/p&gt;
&lt;p&gt;Recently, some of the Statistics have also been made available as &lt;a href=&#34;https://micrometer.io/docs/concepts#_meters&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Micrometer Meters&lt;/a&gt; so that they can be monitored via tools like &lt;a href=&#34;https://www.wavefront.com/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Wavefront&lt;/a&gt;. Many Statistics are not currently available as Meters including some that have historically been very valuable especially when troubleshooting issues.&lt;/p&gt;
&lt;p&gt;This article describes a way to convert all existing Geode Statistics to Micrometer Gauges and to push those Gauges to Wavefront using a &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/2.0.x/reference/html/production-ready-metrics.html#production-ready-metrics-export-wavefront&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Boot Micrometer Wavefront registry&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;All source code described in this article is available &lt;a href=&#34;https://github.com/boglesby/convert-statistics-to-gauges&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This article describes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a &lt;strong&gt;GetAllMetricsFunction&lt;/strong&gt; that returns a server’s Statistics as a list of Metrics&lt;/li&gt;
&lt;li&gt;a Spring Boot client application defining a &lt;strong&gt;MetricsProvider&lt;/strong&gt; that provides the Micrometer support&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;getallmetricsfunction&#34;&gt;GetAllMetricsFunction&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;GetAllMetricsFunction&lt;/strong&gt; is a Function that runs on each server.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;GetAllMetricsFunction&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iterates all the existing Statistics&lt;/li&gt;
&lt;li&gt;for each one, converts it to a Metric&lt;/li&gt;
&lt;li&gt;returns the list of all Metrics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Metric is a wrapper on statistic name, value, category and type (e.g. name=entries, value=100, category=CachePerfStats, type=RegionStats-partition-Trades). The value in this case is the cumulative value of the Statistic, not the difference from the previous value. This is why Gauges (as opposed to Counters) are created on the client.&lt;/p&gt;
&lt;p&gt;The main part of the &lt;strong&gt;GetAllMetricsFunction&lt;/strong&gt; execute method is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allMetrics&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;StatisticsManager&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;statisticsManager&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getStatisticsManager&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Statistics&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;statistics&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;statisticsManager&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getStatsList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;StatisticsType&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;statisticsType&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;statistics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StatisticDescriptor&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;statisticsType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getStatistics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;statName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;descriptor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Metric&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;statName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;statistics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;statName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;statisticsType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;statistics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getTextId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;allMetrics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;metricsprovider&#34;&gt;MetricsProvider&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;MetricsProvider&lt;/strong&gt; is a Spring Component instantiated with a Micrometer MeterRegistry when the client application starts.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;MetricsProvider&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;periodically executes the &lt;strong&gt;GetAllMetricsFunction&lt;/strong&gt; on all servers&lt;/li&gt;
&lt;li&gt;for each returned Metric, creates and registers a Gauge in the MeterRegistry if one doesn’t already exist&lt;/li&gt;
&lt;li&gt;for each returned Metric, updates the current value of the Metric in its map of current values&lt;/li&gt;
&lt;li&gt;provides a method to get the latest value for each Metric&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above steps are facilitated by the updateServerMetrics method which is invoked every 5 seconds to create the Gauges and/or update their current values.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@Scheduled(fixedDelay = 5000)
protected void updateServerMetrics() {
 processServerMetrics((serverName, metric) -&amp;gt; updateServerMetric(serverName, metric));
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;process-all-server-metrics&#34;&gt;Process all Server Metrics&lt;/h3&gt;
&lt;p&gt;The processServerMetrics method gets the Metrics from each server by invoking the getAllMetrics function, and for each Metric, invokes the updateServerMetric method.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;processServerMetrics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MetricProcessor&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allMetrics&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;adminFunctions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getAllMetrics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metrics&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allMetrics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;entrySet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;serverName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metrics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Metric&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metrics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serverName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;process-singleserver-metric&#34;&gt;Process SingleServer Metric&lt;/h3&gt;
&lt;p&gt;The updateServerMetric method is invoked for each server Metric. It:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gets the current value stored in the client’s map of current values&lt;/li&gt;
&lt;li&gt;if no entry exists in the map, creates a Gauge for the Metric&lt;/li&gt;
&lt;li&gt;updates the current value appropriately&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;updateServerMetric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;serverName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Metric&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metrics&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;serverMetrics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serverName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;metrics&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;createGauge&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serverName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Number&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metrics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getMapName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;currentValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;createGauge&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serverName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;Number&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newValue&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentValue&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AtomicInteger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;AtomicInteger&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ai&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AtomicInteger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ai&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newValue&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentValue&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AtomicLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;AtomicLong&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;al&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AtomicLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;al&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newValue&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Double&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentValue&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AtomicLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;AtomicLong&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;al&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AtomicLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;doubleToLongBits&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;al&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
   &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;create-gauge&#34;&gt;Create Gauge&lt;/h3&gt;
&lt;p&gt;The createGauge method creates and registers a Micrometer Gauge from the Metric with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a number of Tags including member, category and type&lt;/li&gt;
&lt;li&gt;a function to provide the current value for the Metric&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Tags categorize the Gauge by server name, category (e.g. CachePerfStats) and type (e.g. RegionStats-partition-Trades) and can be used to filter the data in Wavefront. The category and type correspond to vsd’s Type and Name columns, respectively.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;createGauge&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;serverName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Metric&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Tags&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tags&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Tags&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MEMBER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;serverName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;and&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CATEGORY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCategory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;and&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TYPE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Gauge&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;provider&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;provider&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getServerMetric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serverName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;registry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;addServerMetric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serverName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;get-gauge-current-value&#34;&gt;Get Gauge Current Value&lt;/h3&gt;
&lt;p&gt;Once the Gauges have been registered in the MeterRegistry, they are available for any configured &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/2.0.x/reference/html/production-ready-metrics.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Boot Micrometer endpoint&lt;/a&gt; or registry. Whenever the endpoint is scraped or the registry is published, the getServerMetric method is invoked to provide each Gauge’s current value.&lt;/p&gt;
&lt;p&gt;The getServerMetric method gets the current value for the server and metric name and converts the value to a double based on the atomic type.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getServerMetric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;serverName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Metric&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metrics&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;serverMetrics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serverName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;Number&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentAtomicValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metrics&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getMapName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;currentAtomicValue&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AtomicInteger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;AtomicInteger&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ai&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AtomicInteger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentAtomicValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;currentValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ai&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;currentAtomicValue&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AtomicLong&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;AtomicLong&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;al&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AtomicLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentAtomicValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;currentValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;al&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;currentAtomicValue&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AtomicLong&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;metric&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;AtomicLong&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;al&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AtomicLong&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentAtomicValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;currentValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;longBitsToDouble&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;al&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;currentValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;wavefront-integration&#34;&gt;Wavefront Integration&lt;/h2&gt;
&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;
&lt;p&gt;To add a Spring Boot Micrometer Wavefront registry, add the appropriate dependency to the configuration file of the Spring Boot client. In the gradle case, add this dependency to the build.gradle file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;io.micrometer:micrometer-registry-wavefront:1.3.2&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In addition, set the properties below in the application.properties file. The last two are optional, but I was seeing intermittent timeouts, so I increased the defaults.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| Property          | Description     | Example     |
| ----------------- | ---------------- | --------------- | 
| management.metrics.export.wavefront.api-token | API token | Generate in your account |
| management.metrics.export.wavefront.uri | Wavefront URI | https://vmware.wavefront.com |
| management.metrics.export.wavefront.source | Application identifier | my.test.application |
| management.metrics.export.wavefront.connect-timeout | Connection timeout | 10s |
| management.metrics.export.wavefront.read-timeout | Read timeout | 60s |

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;sample-dashboard&#34;&gt;Sample Dashboard&lt;/h3&gt;
&lt;p&gt;Once the Spring Boot application containing the Micrometer Wavefront registry is running, the values of all the Geode server statistics are published to Wavefront. An example Wavefront dashboard is shown below. The queries used in this dashboard are all pretty basic, although the &lt;a href=&#34;https://docs.wavefront.com/query_language_reference.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Wavefront Query Language&lt;/a&gt; allows for much more complex queries. The JSON file containing this dashboard is available &lt;a href=&#34;https://github.com/boglesby/convert-statistics-to-gauges/blob/master/wavefront_dashboard.json&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/converting-apache-geode-statistics-to-micrometer-meters/barry_2020_05_wavefront.png&#34; alt=&#34;img&#34;  /&gt;
&lt;/br&gt;General Metrics (CPU, Old Gen Heap and GC, Client Connections, etc.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/converting-apache-geode-statistics-to-micrometer-meters/barry_2020_05_wavefront2.png&#34; alt=&#34;img&#34;  /&gt;
&lt;/br&gt;Operations Metrics (Puts, Gets, etc.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/converting-apache-geode-statistics-to-micrometer-meters/barry_2020_05_wavefront3.png&#34; alt=&#34;img&#34;  /&gt;
&lt;/br&gt;Queue Metrics (Queue Size and Messages Processed)&lt;/p&gt;
&lt;h2 id=&#34;future&#34;&gt;Future&lt;/h2&gt;
&lt;p&gt;Creating and publishing all the Gauges from one application is convenient, and the fact that Spring Boot easily supports adding a Micrometer Wavefront registry makes a Spring Boot client application a natural place to do it. But, that adds a process into the flow that isn’t really necessary.&lt;/p&gt;
&lt;p&gt;Instead of having a Spring Boot client application that gathers each server’s Statistics, converts them to Gauges and registers them in the MeterRegistry, this behavior could all be done on the server. A mechanism already exists for doing this using a &lt;a href=&#34;https://geode.apache.org/releases/latest/javadoc/org/apache/geode/metrics/MetricsPublishingService.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;MetricsPublishingService&lt;/a&gt; that was described by &lt;strong&gt;Jason Huynh&lt;/strong&gt; in &lt;a href=&#34;/data/tanzu-gemfire/blog/apache-geode-metrics-wavefront&#34;&gt;this article&lt;/a&gt;. It would be nice to expand it to include all Geode Statistics.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Removing Unused PdxTypes from an Apache Geode Distributed System</title>
      
      <link>/data/tanzu-gemfire/blog/removing-unused-pdxtypes/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/removing-unused-pdxtypes/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Portable Data Exchange (PDX) is Apache Geode’s data serialization protocol for cross-language objects and JSON data. When a PDX-serializable object is serialized for the first time, a PdxType is generated for it. The PdxType represents the data structure of that object and is used to serialize and deserialize it.&lt;/p&gt;
&lt;p&gt;PdxTypes can proliferate in the TypeRegistry especially with unstructured JSON data. The structure of a class is the same for every instance of that class. The same is not necessarily true of JSON data. If uniquely-structured JSON data is added to a Region, it generates a PdxType specific to it. If that data is then deleted, its PdxType remains in the TypeRegistry and becomes an unused orphan.&lt;/p&gt;
&lt;p&gt;This article describes a way to remove unused PdxTypes from the Distributed System.&lt;/p&gt;
&lt;p&gt;For additional information regarding PDX serialization, see the Apache Geode documentation &lt;a href=&#34;https://geode.apache.org/docs/guide/112/developing/data_serialization/gemfire_pdx_serialization.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pdxtype-examples&#34;&gt;PdxType Examples&lt;/h2&gt;
&lt;p&gt;Several examples of JSON data and the PdxType generated for each is shown below. Each field in the JSON data becomes a PdxField in the PdxType. A PdxField describes the field name, type and the location in the data containing the field’s value.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/removing-unused-pdxtypes/diagrams/removing-unused-pdxtypes-diagram.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;This is a very simple example of multiple PdxTypes being created for similar unstructured JSON data. In this case, the best thing to do is to standardize the JSON address on one format and convert all JSON to that format before storing it in a Region.
In a more complex case, PdxTypes can proliferate pretty easily, many of which become unused if the JSON data is removed or becomes more standardized. The &lt;strong&gt;RemoveUnusedPdxTypesFunction&lt;/strong&gt; below shows a way to remove any unused PdxTypes.&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;All source code described in this article as well as an example usage is available &lt;a href=&#34;https://github.com/boglesby/remove-unused-pdxtypes&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.
The &lt;strong&gt;RemoveUnusedPdxTypesFunction&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gets a copy of all PdxTypes&lt;/li&gt;
&lt;li&gt;Iterates each input region’s PdxInstance values&lt;/li&gt;
&lt;li&gt;For each PdxInstance value, recursively removes all in use PdxTypes from the copy&lt;/li&gt;
&lt;li&gt;Deletes any remaining PdxTypes in the copy from the PdxTypes region&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;get-all-pdxtypes&#34;&gt;Get All PdxTypes&lt;/h3&gt;
&lt;p&gt;The PdxTypes are stored in a replicated Region called PdxTypes. EnumInfo instances (which represent Enums in PDX) are also stored in that Region. This method filters those out and returns just the PdxTypes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getAllPdxTypes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PdxTypes&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;entrySet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PdxType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;collect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Collectors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toMap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;recursively-remove-all-in-use-pdxtypes&#34;&gt;Recursively Remove All In-use PdxTypes&lt;/h3&gt;
&lt;p&gt;This method iteratively removes all in-use PdxTypes from the input object by getting the PdxType from the object as a PdxInstanceImpl and removing it from the collection. It then iterates each field of the PdxInstanceImpl and recursively calls the method on the field’s value. Collections and Maps are iterated separately, but every object ends up in the first conditional.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;removeInUsePdxTypes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PdxType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allPdxTypesCopy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;objFieldName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PdxInstanceImpl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;PdxInstanceImpl&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pdxInstance&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PdxInstanceImpl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;PdxType&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pdxType&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pdxInstance&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getPdxType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;allPdxTypesCopy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pdxType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getTypeId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PdxField&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;field&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pdxType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getFields&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fieldName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getFieldName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fieldValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pdxInstance&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;readField&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fieldName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;removeInUsePdxTypes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allPdxTypesCopy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fieldName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fieldValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Collection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;removeInUsePdxTypes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allPdxTypesCopy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;objFieldName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;removeInUsePdxTypes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allPdxTypesCopy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;objFieldName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;removeInUsePdxTypes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allPdxTypesCopy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;objFieldName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;});&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;delete-remaining-pdxtypes&#34;&gt;Delete Remaining PdxTypes&lt;/h3&gt;
&lt;p&gt;Any PdxTypes remaining in the collection are removed from the Region using removeAll like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRegion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;PdxTypes&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;removeAll&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allPdxTypesCopy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;keySet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;caveats-and-comments&#34;&gt;Caveats and Comments&lt;/h2&gt;
&lt;p&gt;Here are a few caveats and comments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Function has been tested mainly with JSON data not Java objects.&lt;/li&gt;
&lt;li&gt;The Function should be run on a backup or an offline Distributed System that has been backed up, not on a live system.&lt;/li&gt;
&lt;li&gt;The Function assumes each data Region’s values are PdxInstances which is always the case with JSON data.&lt;/li&gt;
&lt;li&gt;If the Cache contains Java objects, PDX read-serialized must be true so that only PdxInstances are being checked.&lt;/li&gt;
&lt;li&gt;The Function has a simulate parameter so that a dry run can be made.&lt;/li&gt;
&lt;li&gt;Based on the cases supported by Apache Geode’s JSONFormatter, the Function handles PdxInstances, Collections and primitives. It also has been modified to handle Maps. It currently does not handle arrays, but support for those could be added fairly easily.&lt;/li&gt;
&lt;li&gt;The Function must be executed on only one server so that unused PdxTypes only in one primary PartitionedRegion bucket are aren’t removed accidentally.&lt;/li&gt;
&lt;li&gt;The in-memory TypeRegistry is invalid after the Function runs, so the Distributed System needs to be restarted.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;future&#34;&gt;Future&lt;/h2&gt;
&lt;p&gt;The concepts in this Function can become the implementation of a gfsh command that removes unused PdxTypes from an offline Distributed System. In order to provide this behavior for an online Distributed System, the Function would have to be modified to use the TypeRegistry so that proper locking is done around access to the PdxTypes Region. Also, the TypeRegistry would have to be enhanced to be able to delete PdxTypes from itself as well as the PdxTypes Region.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: The Command Region Pattern</title>
      
      <link>/data/tanzu-gemfire/blog/command-region-pattern/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/command-region-pattern/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; is an in-memory data grid that provides real-time, consistent access to data-intensive applications throughout widely distributed cloud architectures. Its many features include fault-tolerance, high-availability, and WAN replication.&lt;/p&gt;
&lt;p&gt;The multi-site or WAN topology is used to connect distinct clusters, they act as one distributed system when they are coupled, and they act as independent systems when communication between sites fails.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;Command Pattern&lt;/em&gt; is a behavioral design pattern in which an object is used to encapsulate all information needed to perform an action or trigger an event.&lt;/p&gt;
&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;
&lt;p&gt;Gateway Senders are responsible for transmitting events from one site to another and, by default, only the following operations are replicated across WAN sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Entry put.&lt;/li&gt;
&lt;li&gt;Entry create.&lt;/li&gt;
&lt;li&gt;Entry distributed destroy (not originated through expiration).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sometimes we want to replicate more than that, specifically (but not limited to) notifying the remote sites about &lt;em&gt;Region Events&lt;/em&gt; (like &lt;em&gt;destroy&lt;/em&gt; or &lt;em&gt;clear&lt;/em&gt;) that happened on the local cluster. In order to do so, we can implement the &lt;em&gt;Command Region Pattern&lt;/em&gt;.
I’ve seen this pattern successfully and widely applied in a lot of projects over the years but haven’t found a single point of reference about it, now is a good time to share some examples and reasoning behind the pattern itself.&lt;/p&gt;
&lt;h2 id=&#34;how&#34;&gt;How?&lt;/h2&gt;
&lt;p&gt;The idea is pretty straightforward: a custom &lt;em&gt;distributedCommand&lt;/em&gt; region will be used for distribution purposes, which will have a &lt;em&gt;DistributedCommandCacheWriter&lt;/em&gt; attached so we can execute the commands locally. The &lt;em&gt;DistributedCommand Region&lt;/em&gt; itself will exist on all clusters and the commands will be sent across the wire through Geode gateway-senders so remote clusters can receive them through Geode gateway-receivers and execute the unit of work as well.
&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/command-region-pattern/diagrams/command-region-pattern-diagram.jpeg&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The client application creates a DistributedCommand instance and executes a put operation through the PROXY region.&lt;/li&gt;
&lt;li&gt;The CacheWriter is invoked and the DistributedCommand is executed locally.&lt;/li&gt;
&lt;li&gt;The DistributedCommand is added to the gateway-sender queue for distribution to remote clusters.&lt;/li&gt;
&lt;li&gt;The DistributedCommand is distributed and received by a gateway-receiver on a remote cluster.&lt;/li&gt;
&lt;li&gt;The DistributedCommand reaches a remote server, where the CacheWriter is invoked and the DistributedCommand is executed locally.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a &lt;em&gt;DistributedCommand&lt;/em&gt; interface.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DistributedCommand&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

  &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getSimpleName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create as many implementations of the DistributedCommand interface as you need. Below is a dummy example, which does nothing but print &lt;em&gt;“Hello World from ${clientId}!”&lt;/em&gt; in the logs.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;HelloWorldCommand&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DistributedCommand&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Serializable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;transient&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Logger&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LogService&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLogger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clientId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello World from {}!.&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clientId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a DistributedCommandCacheWriter, its only purpose is to execute the received command.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DistributedCommandCacheWriter&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CacheWriterAdapter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DistributedCommand&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Declarable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;transient&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Logger&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LogService&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLogger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;initialize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cache&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Properties&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;properties&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;beforeCreate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EntryEvent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DistributedCommand&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CacheWriterException&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;DistributedCommand&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;distributedCommand&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getNewValue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Executing distributed command {}...&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;distributedCommand&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;distributedCommand&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Executing distributed command {}... Done!.&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;distributedCommand&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start two clusters (1 locator and 1 server each) for testing purposes.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt; start locator --name=cluster1-locator --port=10334 --J=-Dgemfire.remote-locators=localhost[11334] --J=-Dgemfire.distributed-system-id=1 --J=-Dgemfire.jmx-manager-start=true --J=-Dgemfire.jmx-manager-port=1080 --J=-Dgemfire.jmx-manager-http-port=0
gfsh&amp;gt; start server --name=cluster1-server --locators=localhost[10334] --server-port=40401
gfsh&amp;gt; start locator --name=cluster2-locator --port=11334 --J=-Dgemfire.remote-locators=localhost[10334] --J=-Dgemfire.distributed-system-id=2 --J=-Dgemfire.jmx-manager-start=true --J=-Dgemfire.jmx-manager-port=1090 --J=-Dgemfire.jmx-manager-http-port=0
gfsh&amp;gt; start server --name=cluster2-server --locators=localhost[11334] --server-port=40402
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deploy the &lt;em&gt;Commands&lt;/em&gt; and &lt;em&gt;CacheWriter&lt;/em&gt; to both clusters (hint: use the &lt;strong&gt;gfsh deploy&lt;/strong&gt; command).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connected to cluster1, create the &lt;em&gt;region&lt;/em&gt; and the &lt;em&gt;gateway-sender&lt;/em&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt; connect --locator=localhost[10334]
gfsh&amp;gt; create gateway-sender --id=sender1 --remote-distributed-system-id=2
gfsh&amp;gt; create region --name=distributedCommand --type=REPLICATE_PROXY --gateway-sender-id=sender1 --cache-writer=org.apache.geode.tools.command.internal.DistributedCommandCacheWriter
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connected to cluster2, create the &lt;em&gt;region&lt;/em&gt; and the &lt;em&gt;gateway-receiver&lt;/em&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt; connect --locator=localhost[11334]
gfsh&amp;gt; create gateway-receiver
gfsh&amp;gt; create region --name=distributedCommand --type=REPLICATE_PROXY --cache-writer=org.apache.geode.tools.command.internal.DistributedCommandCacheWriter
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That’s it, you’re ready to start replicating your units of work across clusters!.&lt;/p&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;The following client application simply connects to cluster1 and inserts the &lt;em&gt;HelloWorldCommand&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;TestClass&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ClientCacheFactory&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clientCacheFactory&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ClientCacheFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;addPoolLocator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;10334&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ClientCache&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clientCache&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clientCacheFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;Region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DistributedCommand&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clientCache&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DistributedCommand&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;createClientRegionFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ClientRegionShortcut&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;PROXY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;distributedCommand&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1L&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HelloWorldCommand&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;TestApplication1&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It’s easy to see in the logs from both servers (&lt;em&gt;cluster1-server&lt;/em&gt; and &lt;em&gt;cluster2-server&lt;/em&gt;) that the command was received and correctly executed by both clusters.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[info 2020/04/10 13:57:24.341 IST &amp;lt;ServerConnection on port 40401 Thread 2&amp;gt; tid=0x51] Executing distributed command HelloWorldCommand...
[info 2020/04/10 13:57:24.341 IST &amp;lt;ServerConnection on port 40401 Thread 2&amp;gt; tid=0x51] Hello World from TestApplication1!.
[info 2020/04/10 13:57:24.341 IST &amp;lt;ServerConnection on port 40401 Thread 2&amp;gt; tid=0x51] Executing distributed command HelloWorldCommand... Done!.
-------------------------------------------------------------------
[info 2020/04/10 13:57:24.873 IST &amp;lt;ServerConnection on port 5152 Thread 1&amp;gt; tid=0x42] Executing distributed command HelloWorldCommand...
[info 2020/04/10 13:57:24.873 IST &amp;lt;ServerConnection on port 5152 Thread 1&amp;gt; tid=0x42] Hello World from TestApplication1!.
[info 2020/04/10 13:57:24.873 IST &amp;lt;ServerConnection on port 5152 Thread 1&amp;gt; tid=0x42] Executing distributed command HelloWorldCommand... Done!.
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;whats-next&#34;&gt;What’s Next?&lt;/h2&gt;
&lt;p&gt;Check out &lt;a href=&#34;https://github.com/jujoramos/geode-command-region-pattern&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;geode-command-region-pattern&lt;/a&gt; and play around with it, it allows you to test your commands in a distributed fashion using the &lt;a href=&#34;https://cwiki.apache.org/confluence/display/GEODE/About&amp;#43;Distributed&amp;#43;Testing&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;geode-dunit&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;There are several other really useful things that can be done through the usage of this pattern, like distributing a &lt;em&gt;Region.destroy()&lt;/em&gt; or &lt;em&gt;Region.clear()&lt;/em&gt; operation, execute a transaction on the remote cluster, the possibilities are endless, give it a try!&lt;/p&gt;
&lt;p&gt;Looking for other interesting use cases?, check the following articles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@jujoramos/geode-distributed-sequences-12626251d5e3&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Geode Distributed Sequences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@huynhja/publishing-apache-geode-metrics-to-wavefront-6e9a6cf5992b&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Publishing Apache Geode Metrics to Wavefront&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@huynhja/ingest-store-and-search-json-data-with-apache-kafka-and-apache-geode-fc6d0d2f9d9f&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Ingest, Store and Search JSON data with Apache Kafka and Apache Geode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Need help with a complex problem or want to validate your solution?, share some details with the &lt;a href=&#34;https://markmail.org/search/?q=list%3Aorg.apache.geode.user&amp;#43;order%3Adate-backward&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;users&lt;/a&gt; lists.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/apache/geode&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://geode.apache.org/community/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Join the Apache Geode Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cwiki.apache.org/confluence/display/GEODE/Asynchronous&amp;#43;Event&amp;#43;Distribution&amp;#43;Internals&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Asynchronous Event Distribution Internals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Publishing Apache Geode Metrics to Wavefront</title>
      
      <link>/data/tanzu-gemfire/blog/apache-geode-metrics-wavefront/</link>
      <pubDate>Tue, 24 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/apache-geode-metrics-wavefront/</guid>
      <description>

        
        &lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Micrometer support was added to Apache Geode in version 1.10. Micrometer is a popular metrics gathering library and has integrations with numerous monitoring products. In this particular case, Micrometer provides a simple way to create a Micrometer registry for &lt;a href=&#34;https://www.wavefront.com/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Wavefront&lt;/a&gt; and we’ll plug this registry into an implementation of Apache Geode’s MetricsPublishingService. This will allow our Apache Geode Cluster to publish metrics to Wavefront.&lt;/p&gt;
&lt;h2 id=&#34;download-the-jar&#34;&gt;Download the jar&lt;/h2&gt;
&lt;p&gt;Download the &lt;a href=&#34;https://bintray.com/jasonhuynh/jhuynh1-maven/download_file?file_path=com%2Fgithub%2Fjhuynh1%2Fgeode%2Fwavefront%2Fgeode-wavefront-publisher%2F1.0%2Fgeode-wavefront-publisher-1.0-all.jar&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;geode-wavefront-publisher&lt;/a&gt; jar into a known location.&lt;/p&gt;
&lt;h2 id=&#34;start-up-the-apache-geode-cluster&#34;&gt;Start up the Apache Geode Cluster&lt;/h2&gt;
&lt;p&gt;Now we are ready to start a locator, we will supply the configurable values with our GFSH command. For the wavefront-source parameter, we will use “apache.geode” so we can identify the stats when searching for them in Wavefront.
The default for the geode-wavefront-prefix is “wavefront” but we can configure this to whatever we choose. In this case I’ll use “wavefront.geode.jhuynh” to further distinguish my stats from others.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;start locator --name=locator --classpath=/User/jhuynh/geode-wavefront-publisher-1.0-all.jar --J=-Dgeode-wavefront-api-token=fa954bae-69e4--4925–9a1b-2d001a306166  --J=-Dgeode-wavefront-prefix=wavefront.geode.jhuynh --J=-Dgeode-wavefront-source=apache.geode
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Start the server, again we will supply the configurable values with our GFSH command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;start server --name=server --classpath=/User/jhuynh/geode-wavefront-publisher-1.0-all.jar --J=-Dgeode-wavefront-api-token=fa954bae-69e4–4925–9a1b-2d001a306166 --J=-Dgeode-wavefront-prefix=wavefront.geode.jhuynh --J=-Dgeode-wavefront-source=apache.geode
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Everything is up and running and pushing Apache Geode specific metrics into Wavefront!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/apache-geode-metrics-wavefront/apache-geode-metrics-log.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Log output from Apache Geode server log&lt;/p&gt;
&lt;p&gt;Let’s create a region, do a put and check the metrics in the Wavefront UI.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh&amp;gt;create region --name=SomeRegion --type=PARTITION
Member | Status | Message
------ | ------ | ----------------------------------------
server | OK     | Region &amp;quot;/SomeRegion&amp;quot; created on &amp;quot;server&amp;quot;
Cluster configuration for group &#39;cluster&#39; is updated.
gfsh&amp;gt;put --key=&amp;quot;hello&amp;quot; --value=&amp;quot;world&amp;quot; --region=SomeRegion
Result      : true
Key Class   : java.lang.String
Key         : hello
Value Class : java.lang.String
Old Value   : null
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now we can go to Wavefront and see some of the Apache Geode provided metrics!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/apache-geode-metrics-wavefront/apache-geode-metrics-wavefront.png&#34; alt=&#34;img&#34;  /&gt;
&lt;/br&gt;Apache Geode Metrics showing up in Wavefront!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/apache-geode-metrics-wavefront/apache-geode-metrics-region.png&#34; alt=&#34;img&#34;  /&gt;
We see the metric for the entry we put into SomeRegion&lt;/p&gt;
&lt;p&gt;We’ll now go into detail to see how this was implemented so you can build your own or build a new MetricsPublishingService that connects to a different Micrometer supported platform.&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;We create a Java project that uses gradle as it’s build tool. We’ll also include a few imports in the build.gradle, the first being the Wavefront registry.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span class=&#34;n&#34;&gt;implementation&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;‘&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;micrometer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;micrometer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;registry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;wavefront:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;latest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;release&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;’&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And we’ll also import Apache Geode and for logging we’ll pull in log4j2&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span class=&#34;n&#34;&gt;implementation&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;group:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;‘&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;apache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;log4j&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;’&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;‘&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;log4j&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;’&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;version:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;‘&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.13&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;’&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;ext:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;‘&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pom&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;’&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;implementation&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;group:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;‘&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;apache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;geode&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;’&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;‘&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;’&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;version:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;‘&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;creating-a-wavefront-registry&#34;&gt;Creating a Wavefront registry&lt;/h2&gt;
&lt;p&gt;Below is the entire source for the Wavefront Registry. We create a WaveConfigObject, where we could have hard coded our values for api token, prefix and source. However, we tried to build this to be more generic and make it configurable when starting up the Geode Cluster. We end up using system properties that can be supplied via parameters in GFSH. There are other alternatives but this was one of the simplest. This allows anyone to simply get a prebuilt jar and be able to use it for their own deployments.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MeterRegistry&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;createWavefrontRegistry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;WavefrontConfig&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WavefrontConfig&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prefix&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;geode-wavefront-prefix&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;wavefront.geode&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;apiToken&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;geode-wavefront-api-token&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;geode-wavefront-source&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;apache.geode&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
        &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;uri&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;https://vmware.wavefront.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
        &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;apiToken&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;//This is the key you can generate from your Wavefront account
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;apiToken&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
        &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;//Accept rest of Wavefront defaults by returning null
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
        &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
        &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;};&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WavefrontMeterRegistry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Clock&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;SYSTEM&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;wait-whats-my-api-token-key&#34;&gt;Wait, what’s my API token Key?&lt;/h2&gt;
&lt;p&gt;The API Token Key is provided by Wavefront. If you have access to Wavefront, you can generate your token key from your account.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/apache-geode-metrics-wavefront/apache-geode-metrics-api-token.png&#34; alt=&#34;img&#34;  /&gt;
&lt;/br&gt; Generating an api token key&lt;/p&gt;
&lt;h2 id=&#34;implementing-a-metricsservicepublisher&#34;&gt;Implementing a MetricsServicePublisher&lt;/h2&gt;
&lt;p&gt;The MetricsServicePublisher is pretty straightforward for this case. Below is the entire class, omitting the createWavefrontRegistry() method that we already covered.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;GeodeWavefrontPublisher&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MetricsPublishingService&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Logger&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getLogger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GeodeWavefrontPublisher&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;volatile&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MeterRegistry&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;registry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MetricsSession&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;session&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Starting geode-wavefront-publisher&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;registry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;createWavefrontRegistry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;// add the Wavefront registry as a sub-registry to the cache&amp;#39;s composite registry
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;session&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;addSubregistry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;registry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;stop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MetricsSession&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;session&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Stopping geode-wavefront-publisher&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;session&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;removeSubregistry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;registry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the start method, we create the wavefront registry and add that as a subregistry to our MetricsSession object&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;n&#34;&gt;registry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;createWavefrontRegistry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;session&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;addSubregistry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;registry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On stop we will unregister the meter.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;n&#34;&gt;session&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;removeSubregistry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;registry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;what-else-do-we-need&#34;&gt;What else do we need?&lt;/h2&gt;
&lt;p&gt;We create a file called &lt;em&gt;org.apache.geode.metrics.MetricsPublishingService&lt;/em&gt; and place it in &lt;em&gt;META-INF/services&lt;/em&gt; in the resource directory. The contents of this file is the path to our publisher. For this implementation it will be &lt;em&gt;com.github.jhuynh1.geode.wavefront.GeodeWavefrontPublisher&lt;/em&gt;. This allows Geode to discover and use the publisher when the jar is included at start up.&lt;/p&gt;
&lt;h2 id=&#34;creating-an-ubershadow-jar&#34;&gt;Creating an “uber”/shadow jar&lt;/h2&gt;
&lt;p&gt;We’ll be using the GFSH command line interface to include our publisher jar when starting up the cluster. To simplify the number of jars needed to be included on the classpath, we can build an “uber” jar which will include the required Micrometer Wavefront dependencies with our jar. The alternative obviously would have been to include all the jars independently on the classpath.
Modify the build to use the shadow plugin and allow it to build an “uber” jar.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;‘&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;github&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;johnrengelman&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;shadow&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;’&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;‘&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;5.2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this particular case, we know we’ll only need to add the micrometer-wavefront-registry along with our code. We don’t need to package up Apache Geode since we will be deploying this jar onto a Geode cluster. There are probably better ways to do this, but I just created a new configuration that we’ll explicitly call out which dependencies to include&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span class=&#34;n&#34;&gt;configurations&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;uberImplementation&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;shadowJar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;configurations&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;uberImplementation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;canBeResolved&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;configurations&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;configurations&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;uberImplementation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And in the dependencies we end up duplicating a dependency to indicate one is for implementation and the other specifically for the uber jar&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span class=&#34;n&#34;&gt;dependencies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;implementation&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;io.micrometer:micrometer-registry-wavefront:latest.release&amp;#39;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;uberImplementation&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;io.micrometer:micrometer-registry-wavefront:latest.release&amp;#39;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To build the “uber” jar use the following command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew shadowJar
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/apache-geode-metrics-wavefront/apache-geode-metrics-directory.png&#34; alt=&#34;img&#34;  /&gt;
&lt;/br&gt;The contents will be in the build/libs directory&lt;/p&gt;
&lt;p&gt;That’s all there is to it. If you haven’t already, just follow the instructions on Build and Deploy and you’ll be able to deploy your own implementation the same way.&lt;/p&gt;
&lt;h2 id=&#34;grab-the-complete-source&#34;&gt;Grab the complete source&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/jhuynh1/geode-wavefront-publisher.git
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;what-else&#34;&gt;What Else?&lt;/h2&gt;
&lt;p&gt;Also available is a &lt;a href=&#34;https://www.youtube.com/watch?v=BDZh-FLkDTg&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;video walkthrough&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Join the &lt;a href=&#34;https://geode.apache.org/community/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode Community&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cwiki.apache.org/confluence/display/GEODE/How&amp;#43;to&amp;#43;add&amp;#43;a&amp;#43;Meter&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;How to add more metrics to Apache Geodes implementation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Create and share your own MetricsPublishingService on the &lt;a href=&#34;https://geode.apache.org/community/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;user list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/data/tanzu-gemfire/blog/apache-geode-apache-kafka&#34;&gt;Ingest, Store and Search JSON data with Apache Kafka and Apache Geode&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Geode Distributed Sequences</title>
      
      <link>/data/tanzu-gemfire/blog/geode-distributed-sequences/</link>
      <pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/geode-distributed-sequences/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; is an in-memory data grid that provides real-time, consistent access to data-intensive applications throughout widely distributed cloud architectures. Its many features include fault-tolerance, high-availability, distributed locks and function execution (implement your business logic where the data is stored instead of moving the data to your application!).
A sequence, also known as a counter, is a feature supported by some database systems to produce unique values on demand, generally increasing the current value by 1 and returning the resulting value to the caller. These sequences are widely known and used, especially in legacy applications.&lt;/p&gt;
&lt;p&gt;A sequence, also known as a counter, is a feature supported by some database systems to produce unique values on demand, generally increasing the current value by 1 and returning the resulting value to the caller. These sequences are widely known and used, especially in legacy applications.&lt;/p&gt;
&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;
&lt;p&gt;In order to move a step closer to cloud-native applications and a little away from legacy RDBMS, it would be nice to have distributed sequences/counters directly managed by &lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;how&#34;&gt;How?&lt;/h2&gt;
&lt;p&gt;The first thing we have to keep in mind is that, even though we can generate unique sequential distributed sequences with Geode, &lt;strong&gt;we have to loosen the restriction about having no-gaps between the sequences.&lt;/strong&gt; If we don’t, there will always be a potential contention point (either while computing sequences or while sequentially executing the application work using the sequences) and, thus, fully parallel processing can not be truly achieved.
If you are willing to allow gaps, continue reading further, if you don’t… well, this tool is not for you, don’t waste any more of your time :-).&lt;/p&gt;
&lt;h2 id=&#34;the-solution&#34;&gt;The Solution&lt;/h2&gt;
&lt;p&gt;Instead of embedding the sequence generation within the real-time processing, use the &lt;a href=&#34;https://github.com/jujoramos/geode-sequence-generator&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Geode Sequence Generator&lt;/a&gt; and invoke the service occasionally to retrieve a big enough set of counters to work on.
Ideally, the service should be invoked during client startup and the batch requested should be big enough to avoid multiple calls to the service in real-time. The above alleviates the contention on the servers and maintains scalability, allowing several client applications to truly process batches of work in parallel using the set of assigned sequentially generated IDs.&lt;/p&gt;
&lt;h2 id=&#34;how-does-it-work&#34;&gt;How Does it Work?&lt;/h2&gt;
&lt;p&gt;The tool primarily relies on &lt;code&gt;PERSISTENT&lt;/code&gt; regions, the &lt;code&gt;Distributed Lock Service&lt;/code&gt; and &lt;code&gt;Function Execution&lt;/code&gt;.
There’s only one &lt;code&gt;Region&lt;/code&gt; acting as the backing store, no matter how many different sequences are managed, and a &lt;code&gt;Distributed Lock&lt;/code&gt; is acquired every time a sequence needs to be computed (thus the recommendation to avoid invoking the service multiple times in real-time and get a big enough batch of sequences to work on from the start).
To initialize the backing &lt;code&gt;Region&lt;/code&gt;, the tool executes an initialization &lt;code&gt;Function&lt;/code&gt; through the usage of &lt;code&gt;FunctionService.onServers&lt;/code&gt;, allowing the user to choose exactly which servers will be used as the back end for the sequence generation (all by default).
To generate or retrieve a batch of sequences, the tool executes a &lt;code&gt;Function&lt;/code&gt; through &lt;code&gt;FunctionService.onRegion&lt;/code&gt;, guaranteeing that only the server hosting the primary copy of the data will be reached.&lt;/p&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples?&lt;/h2&gt;
&lt;p&gt;All right, time to write some code, finally!.&lt;/p&gt;
&lt;h3 id=&#34;compile-and-deploy&#34;&gt;Compile and Deploy&lt;/h3&gt;
&lt;p&gt;The first step is to download the tool, build it and deploy it to a running Apache Geode cluster. We list the functions at the very end just to verify that they have been correctly registered through the gfsh deploy command.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/geode-distributed-sequences/geode-distributed-sequences-gfsh-deploy.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;h3 id=&#34;compute-sequences&#34;&gt;Compute Sequences&lt;/h3&gt;
&lt;p&gt;Add the jar file to your application’s class path, initialize the &lt;code&gt;ClientCache&lt;/code&gt;, initialize the &lt;code&gt;DistributedSequenceFactory&lt;/code&gt; and start retrieving/computing the distributed counters!.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;TestClient&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Worker&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ticketId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Worker&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ticketId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;ticketId&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ticketId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;c1&#34;&gt;// Do something useful here.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Processed Ticket with Id: &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ticketId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ExecutionException&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;InterruptedException&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ClientCache&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clientCache&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ClientCacheFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;DistributedSequenceFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;initialize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clientCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ExecutorService&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;executors&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Executors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;newCachedThreadPool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;DistributedSequence&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;distributedSequence&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DistributedSequenceFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getSequence&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ticketId&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sequences&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;distributedSequence&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;nextBatch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Future&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;processedTickets&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sequences&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sequence&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;processedTickets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;executors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;submit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;Worker&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;worker&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Worker&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sequence&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;worker&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;})));&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Future&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;future&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;processedTickets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;future&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;());&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;what-next&#34;&gt;What next?&lt;/h2&gt;
&lt;p&gt;Currently the tool must be downloaded and installed separately, the region is manually created and can be manually modified by client applications, which is a potential risk.
Write an &lt;a href=&#34;https://cwiki.apache.org/confluence/display/GEODE/Lightweight&amp;#43;RFC&amp;#43;Process&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;RFC&lt;/a&gt; and discuss with the community to see whether it makes sense to have Distributed Sequences available in &lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; out of the box.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/apache/geode&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode Repository&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jujoramos/geode-sequence-generator&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Geode Sequence Generator Repository&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Ingest, Store and Search JSON data with Apache Kafka and Apache Geode</title>
      
      <link>/data/tanzu-gemfire/blog/apache-geode-apache-kafka/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/apache-geode-apache-kafka/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Apache Kafka is a popular solution for ingesting from various data sources and into Kafka topics. For use cases that require key look-ups or querying, traversing the topic for specific keys or devising a strategy for partitioning can be done. However, Kafka also provides the capability to sink, or offload, the data to other systems via Kafka Connect. The &lt;a href=&#34;https://github.com/apache/geode-kafka-connector&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;geode-kafka-connector&lt;/a&gt; implements the Kafka Connect APIs and allows data to be pushed into Apache Geode, where key look-ups and querying are better suited.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; is a consistent, low latency in memory data store. For use cases where we want fast, consistent key look-ups, sinking data to Apache Geode makes a lot of sense. Apache Geode also allows secondary indexes to be built on the data, to be used by queries. The geode-kafka-connector provides a &lt;a href=&#34;https://github.com/apache/geode-kafka-connector/blob/d6651f1ed78c09a533f478ded239a52cd2ffaca3/src/main/java/org/apache/geode/kafka/converter/JsonPdxConverter.java#L27&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;JsonPdxConverter&lt;/a&gt; that we will be using. This allows JSON objects to be converted into PDX (&lt;a href=&#34;https://geode.apache.org/docs/guide/111/developing/data_serialization/gemfire_pdx_serialization.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Portable Data eXchange, an Apache Geode serialization format&lt;/a&gt;), so that we can query any field and drill down into nested JSON Objects.&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;We’ll be ingesting JSON data from a rest endpoint into a Kafka topic. We will sink the data into an Apache Geode region using the geode-kafka-connector and execute queries against the data. Secondary indexes will also be created to allow faster and more efficient query lookups.
&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/apache-geode-apache-kafka/diagrams/geode-kafka.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;(1) Ingest JSON, (2) Connector pulls JSON data from topic, (3) geode-kafka-connector converts to PDX and pushes to Apache Geode, (4) Query is executed in GFSH, (5) Results are returned&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://geode.apache.org/releases/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode installed&lt;/a&gt; or use the &lt;a href=&#34;https://hub.docker.com/r/apachegeode/geode/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;docker image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kafka.apache.org/downloads&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Kafka installed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download or build a &lt;a href=&#34;https://github.com/apache/geode-kafka-connector&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;geode-kafka-connector jar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download the source for an example ingest web service: &lt;a href=&#34;https://github.com/jhuynh1/spring-kafka-JSON-ingest&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;https://github.com/jhuynh1/spring-kafka-JSON-ingest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;start-apache-geode-cluster&#34;&gt;Start Apache Geode Cluster&lt;/h2&gt;
&lt;p&gt;Execute gfsh from your Apache Geode Installation and start a locator and a server:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gfsh 
 start locator --name=locator1
 start server --name=server1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/apache-geode-apache-kafka/geode-kafka-gfsh.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;gfsh output after creating locator and server&lt;/p&gt;
&lt;p&gt;Create the region we want the data to end up in:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;create region --name=’Events’ --type=PARTITION`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/apache-geode-apache-kafka/geode-kafka-gfsh-createregion.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;gfsh output after creating region&lt;/p&gt;
&lt;h2 id=&#34;start-apache-kafka&#34;&gt;Start Apache Kafka&lt;/h2&gt;
&lt;p&gt;We will follow the instructions from the Apache Kafka Quickstart. In the Apache Kafka install, run each command in a new terminal.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bin/zookeeper-server-start.sh config/zookeeper.properties
bin/kafka-server-start.sh config/server.properties
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-a-topic-named-test&#34;&gt;Create a topic named ‘test’&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;bin/kafka-topics.sh --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic test
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;creating-the-sink-connector&#34;&gt;Creating the Sink Connector&lt;/h2&gt;
&lt;p&gt;We’ll now create a sink connector to flow data from Kafka to Geode. We will also configure the key and value converters. For the value converter we will explicitly use the JsonPdxConverter supplied by the geode-kafka-connector. For the key, we will use a String converter, where the example webapp will just populate with an arbitrary value.&lt;/p&gt;
&lt;h3 id=&#34;configure-connect-geode-sinkproperties&#34;&gt;Configure connect-geode-sink.properties&lt;/h3&gt;
&lt;p&gt;Create a file called connect-geode-sink.properties with the following properties and place this file in the config directory of Apache Kafka. Notice we use the JsonPdxConverter for our value converter. We can also map any topics to any number of regions.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;name=geode-kafka-sink
connector.class=GeodeKafkaSink
tasks.max=1
key.converter=org.apache.kafka.connect.storage.StringConverter
value.converter=org.apache.geode.kafka.converter.JsonPdxConverter
topic-to-regions=[test:Events]
locators=localHost[10334]
topics=test
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;modify-configconnect-standaloneproperties&#34;&gt;Modify config/connect-standalone.properties&lt;/h3&gt;
&lt;p&gt;Modify config/connect-standalone.properties to point Kafka to where the plugin is installed. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;plugin.path=/path/to/geode-kafka-connector/target/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;run-the-sink-connector&#34;&gt;Run the Sink Connector&lt;/h2&gt;
&lt;p&gt;Now we are ready to run the sink connector, execute the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bin/connect-standalone.sh config/connect-standalone.properties config/connect-geode-sink.properties
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;start-up-the-ingest-web-service&#34;&gt;Start up the Ingest Web Service&lt;/h2&gt;
&lt;p&gt;For ingesting data, we will use a simple Spring Boot application that exposes a rest endpoint that can be called to ingest JSON data (GitHub Events) and push the data into a Kafka topic.
Here is the relevant lines of code, we generate an arbitrary key in this example and place each JSON document as an event on the topic.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;/ingest/github/{topic}&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ingestGithub&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RestTemplate&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;restTemplate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nd&#34;&gt;@PathVariable&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;topic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//We didn&amp;#39;t model our json and will just pass them in as strings
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;events&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;restTemplate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getForObject&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;githubEventsUrl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;events&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;kafkaTemplate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;topic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;hashCode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;events&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The web-service source is located at &lt;a href=&#34;https://github.com/jhuynh1/spring-kafka-JSON-ingest&#34;&gt;https://github.com/jhuynh1/spring-kafka-JSON-ingest&lt;/a&gt; and can be run either with ./gradlew bootRun or if you have a built jar, run the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;java -jar restful-webservice-0.0.1-SNAPSHOT.jar
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;ingest-data&#34;&gt;Ingest Data&lt;/h2&gt;
&lt;p&gt;Hit the rest endpoint (note: if your topic wasn’t named test, you can simply change the topic name in the url)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl localhost:8080/ingest/github/test
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;query-the-json-data-in-apache-geode&#34;&gt;Query the JSON data in Apache Geode!&lt;/h2&gt;
&lt;p&gt;Revisit gfsh and set a gfsh environment variable so we can see values with large fields.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set variable --name=APP_RESULT_VIEWER --value=external`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now we will query the events region. We’ll first display all the events we ingested.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;query --query=”select * from /Events”
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/apache-geode-apache-kafka/geode-kafka-region-events.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Events made it into the region and we are able to query for them!&lt;/p&gt;
&lt;h3 id=&#34;query-nested-fields&#34;&gt;Query nested fields&lt;/h3&gt;
&lt;p&gt;We can also issue a query on any of the JSON fields and nested fields as well. In this example we are actually going to drill down into a nested JSON field. We will find any event where the action field in the payload object is ‘opened’&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;query --query=”select * from /Events where payload.action=’opened’”
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;/images/data-blogs/tanzu-gemfire/apache-geode-apache-kafka/geode-kafka-field-lookup.png&#34; alt=&#34;img&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;We are able to do a nested field lookup and filter for specific results&lt;/p&gt;
&lt;h3 id=&#34;creating-a-secondary-index&#34;&gt;Creating a secondary index&lt;/h3&gt;
&lt;p&gt;If there is are fields we plan on querying often or need faster performance on, we can create indexes on those fields. For this example we could create one on payload.action&lt;/p&gt;
&lt;h2 id=&#34;what-next&#34;&gt;What next?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Learn more about &lt;a href=&#34;https://geode.apache.org/docs/guide/111/developing/querying_basics/query_basics.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;OQL querying&lt;/a&gt; or &lt;a href=&#34;https://geode.apache.org/docs/guide/15/developing/data_serialization/gemfire_pdx_serialization.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;PDX serialization&lt;/a&gt; in Apache Geode&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check out the other features in &lt;a href=&#34;https://github.com/apache/geode-kafka-connector&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;geode-kafka-connector&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.pymma.com/index.php/blogs/data-analytic-apache-geode-a-successful-alternative-to-kafka-spark-and-storm&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Read how Apache Geode was used to simplify architecture and operations&lt;/a&gt;
Join the &lt;a href=&#34;https://geode.apache.org/community/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode Community&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Pluggable OQL Method Authorization</title>
      
      <link>/data/tanzu-gemfire/blog/pluggable-oql-method-auth/</link>
      <pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/pluggable-oql-method-auth/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; is an in-memory data grid that provides real-time, consistent access to data-intensive applications throughout widely distributed cloud architectures. Between its many features, Apache Geode provides a SQL-like query language called OQL that allows users to access data stored within the regions.&lt;/p&gt;
&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;
&lt;p&gt;Before the release of &lt;a href=&#34;https://archive.apache.org/dist/geode/1.3.0/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode 1.3.0&lt;/a&gt;, the OQL engine used to allow any method invocation on objects present in the Geode member’s classpath, including mutators and, through the usage of &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/technotes/guides/reflection/index.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Java Reflection&lt;/a&gt;, internal Geode, JDK or external library methods. This allowed malicious users to do things like the following (ugh!!)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;destroyRegion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getCache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To prevent these problems, work was done to tighten up the security and, by default, disallow any method call not explicitly added to an internally hard-coded acceptance list.&lt;/p&gt;
&lt;p&gt;After the change was in place and released, our users didn’t like this, at all!!&amp;hellip; it is fine to tighten up the security, but the change also prevented users from invoking methods from their own data model… ugh!!.&lt;/p&gt;
&lt;h2 id=&#34;why-do-we-fall-sir-so-that-we-can-learn-to-pick-ourselves-up&#34;&gt;“Why do we fall, sir?&amp;hellip; So that we can learn to pick ourselves up.”&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://geode.apache.org/community/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode community&lt;/a&gt; learns from previous errors and iterates to improve the end-user experience, that’s why the decision was made to change this “all or nothing approach” and provide users the ability to either choose from some general targeted use case out of box authorization implementations or create their own.&lt;/p&gt;
&lt;h2 id=&#34;out-of-the-box-implementations&#34;&gt;Out of the Box Implementations&lt;/h2&gt;
&lt;p&gt;Based on feedback from users, the &lt;a href=&#34;https://geode.apache.org/community/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode community&lt;/a&gt; tried to cover the most common use cases and scenarios when designing and implementing these authorizers; the full list with a brief description for each one is shown below.&lt;/p&gt;
&lt;h3 id=&#34;restrictedmethodauthorizer&#34;&gt;&lt;em&gt;RestrictedMethodAuthorizer&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;The default “please secure it all” one, it denies everything except for the hard-coded list of known safe methods. Use this if you liked the approach introduced in &lt;a href=&#34;https://archive.apache.org/dist/geode/1.3.0/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode 1.3.0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To configure this authorizer in your cluster, just execute the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh alter query-service --method-authorizer=org.apache.geode.cache.query.security.RestrictedMethodAuthorizer
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;unrestrictedmethodauthorizer&#34;&gt;&lt;em&gt;UnrestrictedMethodAuthorizer&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;The “I want it all” one, it allows every method invocation except for the ones that are already flagged as “dangerous” by default, that is, those methods that can affect the internals of the cache and its regions and, of course, &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/technotes/guides/reflection/index.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Java reflection&lt;/a&gt;. Use this one for secured clusters where only trusted applications have access to the query engine, or whenever all entries within the cache are immutable.&lt;/p&gt;
&lt;p&gt;To configure this authorizer in your cluster, execute the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh alter query-service --method-authorizer=org.apache.geode.cache.query.security.UnrestrictedMethodAuthorizer 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;javabeanaccessormethodauthorizer&#34;&gt;&lt;em&gt;JavaBeanAccessorMethodAuthorizer&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;The “play by the book” one, allowing only those methods from configured packages that follow the &lt;a href=&#34;https://download.oracle.com/otndocs/jcp/7224-javabeans-1.01-fr-spec-oth-JSpec/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;JavaBean Specification 1.01&lt;/a&gt;; that is, methods that start with &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;is&lt;/code&gt; followed by the attribute name. Use this one only when you’re 100% sure that all the developers have followed the mentioned specification.&lt;/p&gt;
&lt;p&gt;To configure this authorizer in your cluster, just execute the command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh alter query-service --method-authorizer=org.apache.geode.cache.query.security.JavaBeanAccessorMethodAuthorizer --authorizer-parameters=com.domain.model
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;regexmethodauthorizer&#34;&gt;&lt;em&gt;RegExMethodAuthorizer&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;The “flexible” one, allowing only those methods that match a regular expression provided by the user. &lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; will still prevent the execution of methods that can mess up your cache and regions, along with &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/technotes/guides/reflection/index.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Java reflection&lt;/a&gt; calls, so you don’t need to worry about mistakenly matching dangerous methods that are already known. Use this one for clusters on which you know exactly what is deployed and when, so you can correctly tweak the RegEx to only allow what you want.&lt;/p&gt;
&lt;p&gt;To configure this authorizer in your cluster, execute the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gfsh alter query-service --method-authorizer=org.apache.geode.cache.query.security.RegExMethodAuthorizer --authorizer-parameters=com.domain.model.*
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;bahhh-none-works-for-me-&#34;&gt;Bahhh… None Works For Me 😢&lt;/h2&gt;
&lt;p&gt;This all looks good, but none of these authorizers work for my use case… regular expressions are too tricky, not all the methods I need to use in OQL follow the &lt;a href=&#34;https://download.oracle.com/otndocs/jcp/7224-javabeans-1.01-fr-spec-oth-JSpec/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;JavaBean Specification 1.01&lt;/a&gt; and the other two authorizers are either too restrictive or too permissive, what should I do?&lt;/p&gt;
&lt;p&gt;Not to worry, now comes the fun part (some code, finally!), you can easily develop a custom authorizer and instruct &lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; to use it whenever a method invocation authorization needs to be executed.&lt;/p&gt;
&lt;p&gt;How? Easy, you just need to implement the &lt;code&gt;MethodInvocationAuthorizer&lt;/code&gt; interface and execute &lt;code&gt;gfsh alter query-service --method-authorizer=my.authorizer.ClassName&lt;/code&gt; to make sure all members use it. You need to keep in mind, though, that the authorizer will be invoked once per query execution (more on this later on), so the authorization logic must be lightning fast!!.&lt;/p&gt;
&lt;h3 id=&#34;examples&#34;&gt;&lt;em&gt;Examples?&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Since &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/technotes/guides/language/annotations.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Java annotations&lt;/a&gt; are here to stay and a huge percentage of developers love to use them, let’s write an authorizer that relies on annotated methods to decide whether they should be allowed or denied during query execution.&lt;/p&gt;
&lt;p&gt;The example assumes that you have access to modify the domain model and, more importantly, that you’re willing to do it.&lt;/p&gt;
&lt;p&gt;Long story short, the authorize callback will only allow methods annotated with our custom annotation, if and only if the method is not already flagged as dangerous by Geode.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@Target&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ElementType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;METHOD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@Retention&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RetentionPolicy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;RUNTIME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nd&#34;&gt;@interface&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Authorized&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;AnnotationBasedMethodAuthorizer&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MethodInvocationAuthorizer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
 &lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RestrictedMethodAuthorizer&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;geodeAuthorizer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;

 &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
 &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;initialize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Cache&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parameters&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// Register the default authorizer.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;geodeAuthorizer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RestrictedMethodAuthorizer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

 &lt;span class=&#34;nd&#34;&gt;@Override&lt;/span&gt;
 &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;authorize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Method&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;// Check if forbidden by Geode.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geodeAuthorizer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isPermanentlyForbiddenMethod&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;c1&#34;&gt;// Check if annotation is present
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;isAnnotationPresent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Authorized&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;what-about-performance&#34;&gt;What About Performance?&lt;/h2&gt;
&lt;p&gt;Considering that the authorization kicks in while the OQL is being executed, performance is certainly a concern and should be taken into consideration, nobody wants the same authorization logic to be invoked for every single object instance traversed by the query engine while building the result set. To optimize this, the query engine remembers whether the method has been already authorized or not for the current query context, basically meaning that the authorization logic will be called once and only once in the lifetime of a query for every new method seen while traversing the objects.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/apache/geode&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode Repository&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://cwiki.apache.org/confluence/display/GEODE/OQL&amp;#43;Method&amp;#43;Invocation&amp;#43;Security#OQLMethodInvocationSecurity-GeodeBasedMethodAuthorizer&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;OQL Method Invocation Security RFC&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://issues.apache.org/jira/browse/GEODE-6983&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;OQL Method Invocation Security JIRAs&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: Apache Geode as a Remote Gradle Build Cache</title>
      
      <link>/data/tanzu-gemfire/blog/remote-gradle-build-cache/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-gemfire/blog/remote-gradle-build-cache/</guid>
      <description>

        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Gradle task output can be cached locally but also remotely. The idea of a remote cache is to share commonly built task outputs across remote builds to improve build times. With a few steps, we can use Apache Geode as a remote cache for Gradle.&lt;/p&gt;
&lt;h2 id=&#34;whats-apache-geode&#34;&gt;What’s Apache Geode?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://geode.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode&lt;/a&gt; is a fault tolerant, highly concurrent and scalable in-memory data grid that can be used in many ways, including as a cache. A &lt;em&gt;region&lt;/em&gt; is a data structure, similar to a distributed map, that we will use to store the task output. Regions provide extra features such as LRU eviction, that can be used to improve our solution in the future. As data grows, we can add more nodes to the cluster and with a simple rebalance command, the data will be evenly distributed across all the nodes.&lt;/p&gt;
&lt;h2 id=&#34;how&#34;&gt;How?&lt;/h2&gt;
&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;Assuming you have Apache Geode installed. For help, see the &lt;a href=&#34;https://geode.apache.org/docs/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;User Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;start-apache-geode-cluster&#34;&gt;Start Apache Geode Cluster&lt;/h3&gt;
&lt;p&gt;First we start a one locator and one server cluster.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. ./gfsh 
2. start locator --name=locator1
3. start server --name=server1 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Create the region where we will store the Gradle artifacts&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;4. create region --name=&#39;gradleRegionName&#39; 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;using-the-geode-gradle-build-cachehttpsgithubcomjhuynh1geode-gradle-build-cache&#34;&gt;Using the &lt;a href=&#34;https://github.com/jhuynh1/geode-gradle-build-cache&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Geode Gradle Build Cache&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Change your project&amp;rsquo;s settings.gradle to include the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span class=&#34;n&#34;&gt;buildscript&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;repositories&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;maven&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
         &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://dl.bintray.com/jasonhuynh/jhuynh1-maven/&amp;#34;&lt;/span&gt;
       &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;jcenter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
     &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
     &lt;span class=&#34;n&#34;&gt;dependencies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;classpath&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;com.github.jhuynh1.geode.gradle.build.cache:geode-gradle-build-cache:0.1&amp;#39;&lt;/span&gt;
     &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
 
 &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;com.github.jhuynh1.geode.gradle.build.cache.GeodeGradleBuildCache&lt;/span&gt;
 &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;com.github.jhuynh1.geode.gradle.build.cache.GeodeGradleBuildCacheServiceFactory&lt;/span&gt;
 
 &lt;span class=&#34;n&#34;&gt;buildCache&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;n&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
     &lt;span class=&#34;c1&#34;&gt;//this is set to false to hilite usage of remote cache
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//this setting will impact your performance
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;enabled&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt; 
   &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

   &lt;span class=&#34;c1&#34;&gt;// Register custom build cache implementation
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;registerBuildCacheService&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GeodeGradleBuildCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GeodeGradleBuildCacheServiceFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
 
   &lt;span class=&#34;n&#34;&gt;remote&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GeodeGradleBuildCache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
     &lt;span class=&#34;n&#34;&gt;enabled&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt; 
     &lt;span class=&#34;c1&#34;&gt;//this is set to allow pushing to the remote cache
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//the type of system will probably affect this setting (ci vs dev)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;     &lt;span class=&#34;n&#34;&gt;push&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
     &lt;span class=&#34;c1&#34;&gt;//optional settings.  The defaults are listed below
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//locatorHost = &amp;#39;localhost&amp;#39;
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//locatorPort = 10334
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//gradleRegionName = &amp;#39;gradleRegionName&amp;#39;
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
 &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run a build with &lt;code&gt;--build-cache&lt;/code&gt; or add &lt;code&gt;org.gradle.caching=true&lt;/code&gt; to gradle.properties.&lt;/p&gt;
&lt;h3 id=&#34;remote-and-local-cache&#34;&gt;Remote and Local Cache&lt;/h3&gt;
&lt;p&gt;There are different ways to configure the remote and local cache relationship in Gradle to get optimal performance. These settings were not configured to get the best performance but to show the usage of the remote cache. More resources can be found online for creating ci and developer specific configurations. More info &lt;a href=&#34;https://docs.gradle.org/current/userguide/build_cache.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;what-next&#34;&gt;What next?&lt;/h2&gt;
&lt;p&gt;The code for the Geode Gradle Build Cache can be found &lt;a href=&#34;https://github.com/jhuynh1/geode-gradle-build-cache&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;. There are many improvements and features someone could add, some ideas that come to mind:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Store meta data or statistics about our build and use that to determine when to actually cache or force a miss to have it build locally.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We could add a continuous query to alert us when certain files or certain file sizes are uploaded.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Maybe we have remote teams that span WAN sites, we could replicate the region across a wan and have multiples sites and teams sharing artifacts.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;want-to-learn-more-about-apache-geode&#34;&gt;Want to learn more about Apache Geode?&lt;/h2&gt;
&lt;p&gt;More &lt;a href=&#34;https://github.com/apache/geode-examples&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;tutorials/examples&lt;/a&gt; of Apache Geode &lt;/br&gt;
Please reach out to the &lt;a href=&#34;https://geode.apache.org/community/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Geode Community&lt;/a&gt;!&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
