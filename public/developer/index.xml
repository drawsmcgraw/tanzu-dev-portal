<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VMware Tanzu Developer Center – VMware Tanzu Developer Center</title>
    <link>/</link>
    <description>Recent content on VMware Tanzu Developer Center</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
      
      
    
    
    <item>
      
      <title>Blog: Understanding the Differences Between Dockerfile and Cloud Native Buildpacks</title>
      
      <link>/blog/understanding-the-differences-between-dockerfile-and-cloud-native-buildpacks/</link>
      <pubDate>Mon, 28 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/understanding-the-differences-between-dockerfile-and-cloud-native-buildpacks/</guid>
      <description>

        
        &lt;p&gt;Container images enable you to bundle an application with all of its dependencies—soup to nuts, all the way down to the OS file system. Effectively, you are packaging your app and its environment into a single, immutable, and runnable artifact. You can then drop that image onto any container runtime and you’re (nearly) off to the races.&lt;/p&gt;
&lt;p&gt;The benefits of taking this approach over deploying an application-only artifact onto a custom and curated environment are well established: greater predictability, repeatability, portability, and scalability, to name just a few. So, what’s the catch? The responsibility of providing the runtime and OS shifts from the ops or IT team that formerly created and maintained the target environment to the dev or DevOps team that is now packaging the application as an image. With this transition, organizations large and small must reimagine how they ensure consistency, security, transparency, and upkeep of these modernized deployable artifacts.&lt;/p&gt;
&lt;p&gt;How you build your images is a key part of the answer. Let’s compare two approaches—Dockerfile and Cloud Native Buildpacks—to see how they measure up when it comes to meeting, or exacerbating, these challenges.&lt;/p&gt;
&lt;h2 id=&#34;what-is-dockerfile&#34;&gt;What Is Dockerfile?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/engine/reference/builder&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Dockerfile&lt;/a&gt; is the oldest and most common approach for building images. A Dockerfile is a script where each command begins with a keyword called a Dockerfile instruction. Each instruction creates a layer in a Docker image. After the last instruction is executed, the resulting image becomes your deployable artifact.&lt;/p&gt;
&lt;p&gt;Here is a simple example of a Dockerfile for a Java app. It adds the app artifact (.jar file) onto a base OS image that has a pre-installed Java runtime (JRE), and it defines the app startup command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; adoptopenjdk:11-jre-hotspot&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; ./target/*.jar app.jar&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CMD&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;java&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-jar&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;app.jar&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You would create an image by running:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; my-app-repo
mvn package
docker build . --tag my-image --file Dockerfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;what-are-buildpacks&#34;&gt;What Are Buildpacks?&lt;/h2&gt;
&lt;p&gt;A &lt;a href=&#34;https://www.cncf.io/blog/2020/11/18/toc-approves-cloud-native-buildpacks-from-sandbox-to-incubation&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Cloud Native Computing Foundation (CNCF) project&lt;/a&gt;, &lt;a href=&#34;https://buildpacks.io&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Cloud Native Buildpacks&lt;/a&gt;—also referred to as CNBs or buildpacks, for short—provides an opinionated and structured way to build images.&lt;/p&gt;
&lt;p&gt;You don’t need to create or maintain any scripts of your own. You simply choose an OSS or vendored “&lt;a href=&#34;https://buildpacks.io/docs/concepts/components/builder&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;builder&lt;/a&gt;” that serves the function of a thorough and well-formed Dockerfile (without actually using a Dockerfile). The builder provides the runtime base image for your application as well as any logic for compiling your code and layering it onto the base image in a thoughtful manner.&lt;/p&gt;
&lt;p&gt;The builder itself is an image, too, but you cannot use the &lt;code&gt;docker&lt;/code&gt; CLI to execute the builder and generate an image for your application. You need a specialized tool—a “&lt;a href=&#34;https://buildpacks.io/docs/concepts/components/platform&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;platform&lt;/a&gt;,” in CNB-speak—that knows how to access the builder and orchestrate the creation of your application image. The platform that provides the most comparable user experience to the &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/build&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;&lt;code&gt;docker build&lt;/code&gt;&lt;/a&gt; command is a CLI called &lt;a href=&#34;https://buildpacks.io/docs/tools/pack&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;&lt;code&gt;pack&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You could create an image by running:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; my-app-repo
pack build my-image --builder paketobuildpacks/builder:base
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If your builder of choice can handle applications written in various languages, this command will work for any of them, as the tooling automatically figures out which logic to apply.&lt;/p&gt;
&lt;h2 id=&#34;where-dockerfile-shines&#34;&gt;Where Dockerfile Shines&lt;/h2&gt;
&lt;p&gt;Dockerfile has been around as long as Docker images, so it is familiar technology to many already in the container ecosystem. There are many examples on the internet, and it is often easy and convenient to reach for the most traditional tool in your kit.&lt;/p&gt;
&lt;p&gt;Since a Dockerfile is a plain text file that uses a direct syntax comprising about a dozen &lt;a href=&#34;https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#dockerfile-instructions&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;instructions&lt;/a&gt;, it serves as a transparent (though not always precise) record of the software that has been installed into an image. It is easy to update and can be saved to a version control system along with your application code.&lt;/p&gt;
&lt;p&gt;The true power of Dockerfile lies in its flexibility. The images you can build are limited only by your ability to script your Dockerfile. You can start from scratch or augment an existing image—any one of Docker’s &lt;a href=&#34;https://docs.docker.com/docker-hub/official_images&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Official&lt;/a&gt; or &lt;a href=&#34;https://docs.docker.com/docker-hub/publish&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Verified Publisher&lt;/a&gt; images, for example, or really any image you get your hands on. You can install system packages, allow or limit root access, lock in configuration, and so on. The sky&amp;rsquo;s the limit.&lt;/p&gt;
&lt;h2 id=&#34;challenges-with-dockerfile&#34;&gt;Challenges With Dockerfile&lt;/h2&gt;
&lt;p&gt;The drawbacks of Dockerfile also lie in its flexibility. Each Dockerfile becomes another piece of custom code that you own. You must account for correctness, efficiency, and security. Over the life of your app, you must also continually keep an eye out for when OS and runtime bits might require patches or upgrades.&lt;/p&gt;
&lt;p&gt;The simplicity of Dockerfile poses additional challenges. It’s just a script that, at first pass, likely lives in the same repo as your app code. Any efforts to vet, standardize, or reuse Dockerfiles across applications or development teams is up to you. Any automation for building and maintaining images as part of a DevOps toolchain is also up to you. Without proper planning and oversight, things can quickly get messy.&lt;/p&gt;
&lt;h2 id=&#34;where-buildpacks-shine&#34;&gt;Where Buildpacks Shine&lt;/h2&gt;
&lt;p&gt;The CNB project provides the structure needed for creating and maintaining images at scale. At the same time, it provides a simple user experience, obviating the need to become an image-building expert when you might only be building a single image.&lt;/p&gt;
&lt;p&gt;The task of choosing and maintaining the base image (think the “FROM” statement in a Dockerfile) and the know-how for providing the contents of the rest of the layers (analogous to all the other instructions in a Dockerfile) are delegated to buildpacks. The CNB project provides a &lt;a href=&#34;https://buildpacks.io/docs/reference/spec/buildpack-api&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Buildpack API&lt;/a&gt; to foster an ecosystem of buildpacks. In our example above, we chose the open source &lt;a href=&#34;https://paketo.io&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Paketo Buildpacks&lt;/a&gt;, which can handle applications written in Java, Ruby, Golang, .NET Core, and more. In each case, Paketo Buildpacks employ optimizations related to image size and layering; caching; and security; as well as standards and optimizations particular to a given programming language. One example of how buildpacks automatically do something few would reliably get right is the Paketo Java memory calculation.&lt;/p&gt;
&lt;p&gt;CNBs also provide choices around the user experience. As with buildpacks, a &lt;a href=&#34;https://buildpacks.io/docs/reference/spec/platform-api&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Platform API&lt;/a&gt; enables an ecosystem of tools that can be incorporated into your workflow. Need a CLI to mimic the &lt;code&gt;docker build&lt;/code&gt; approach? Use &lt;code&gt;pack&lt;/code&gt;. Want to recreate the “Build as a Service” experience of the prior generation of Heroku and Cloud Foundry buildpacks? Install &lt;a href=&#34;https://github.com/pivotal/kpack#readme&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;&lt;code&gt;kpack&lt;/code&gt;&lt;/a&gt; into your Kubernetes cluster and let it autonomously kick off builds whenever you commit new code to git or upgrade your builder image.&lt;/p&gt;
&lt;p&gt;Suddenly, achieving consistent builds across your organization becomes trivial. As long as all apps are built using the same builder, you can guarantee they will be built in the same way. Since the builders are themselves images and are decoupled from platforms, CNBs inherently provide a way to distribute and reuse build logic across an organization.&lt;/p&gt;
&lt;p&gt;The resulting app images are enriched with metadata that make them easy to inspect. You can examine an image directly, without needing to seek out the script that generated it, to determine which base images and buildpacks were used to create it. Depending on your choice of buildpacks, you may also get a detailed Software Bill of Materials (SBOM) including runtime version, application dependencies, and other details. Your security and operations teams will thank you.&lt;/p&gt;
&lt;p&gt;Also worth mentioning is the capability to swap out OS layers without rebuilding an image. With Dockerfile, patching the OS requires an update to the “FROM” statement, which in turn forces re-creation of all the layers in the image, even if the app did not change. CNBs provide a &lt;a href=&#34;https://buildpacks.io/docs/concepts/operations/rebase&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;rebasing&lt;/a&gt; capability, which is faster and safer. That capability is particularly powerful in combination with &lt;code&gt;kpack&lt;/code&gt; as together they enable you to roll out an OS update across a large number of images in a matter of minutes.&lt;/p&gt;
&lt;h2 id=&#34;challenges-with-buildpacks&#34;&gt;Challenges With Buildpacks&lt;/h2&gt;
&lt;p&gt;Buildpacks require you to fit in a box. That box might be big enough for you not to care most of the time, but it will likely be too small at some point, for some application.&lt;/p&gt;
&lt;p&gt;One one hand, your mileage will vary depending on how robustly the current ecosystem of buildpacks supports your use case. For example, if you are building Java applications, Paketo provides a set of battle-tested buildpacks that are not only likely to meet your needs, but to solve problems you might not have considered (exiting cleanly on an out-of-memory error, for example). On the other hand, if you are writing your applications in Lisp you might find yourself needing to write your own custom buildpacks, which requires significantly more work. The exact calculus for a given app will change over time as the buildpack ecosystem grows.&lt;/p&gt;
&lt;p&gt;What’s more, you may run into certain limitations with buildpacks. For example, currently you can&amp;rsquo;t install an arbitrary OS package using &lt;code&gt;apt-get install&lt;/code&gt;. While most applications can handle it, if you wanted to run, say, PostgreSQL and needed some package that doesn&amp;rsquo;t exist on your runtime base image, you&amp;rsquo;d be out of luck. In such a case, you would be better off creating a one-off Dockerfile. To benefit from the automation at scale that buildpacks afford, you need to give up some flexibility. This tradeoff isn&amp;rsquo;t novel, but it will be a deal breaker for some workloads.&lt;/p&gt;
&lt;h2 id=&#34;making-the-call&#34;&gt;Making The Call&lt;/h2&gt;
&lt;p&gt;Cloud Native Buildpacks resolve much of the operational complexity of using Dockerfiles. You can embrace the opinions and leverage the expertise of the authors behind the buildpacks of your choice to easily assemble images for applications written in a variety of languages. Your organization can incorporate custom buildpacks to express and effectuate their own opinions. You can ensure that any build by any member of your team or organization, carried out on any machine, will result in the same image. You can provide insight to your operations and security teams about an image’s contents. You have a choice of platforms tailored to individual developers or large-scale systems and more. You can build one image at a time or patch an OS across an estate of images in one fell swoop.&lt;/p&gt;
&lt;p&gt;You may run into situations where buildpacks cannot handle certain requirements. In these cases, scripting your own Dockerfile will provide the power and flexibility you need to assemble an image for your application.&lt;/p&gt;
&lt;p&gt;Nevertheless, the advantages of Cloud Native Buildpacks are very appealing, both for simplicity and security. Enough, presumably, to justify favoring buildpacks over Dockerfile wherever possible.&lt;/p&gt;
&lt;h2 id=&#34;learn-more&#34;&gt;Learn More&lt;/h2&gt;
&lt;p&gt;To learn more about Dockerfile, check out the &lt;a href=&#34;https://docs.docker.com/engine/reference/builder&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Dockerfile reference documentation&lt;/a&gt; or check out our &lt;a href=&#34;/workshops/lab-container-basics&#34;&gt;Container Basics workshop&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For more information on Cloud Native Buildpacks, a great place to start is the &lt;a href=&#34;https://buildpacks.io&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;CNB project website&lt;/a&gt;. We also have some terrific &lt;a href=&#34;/guides/containers/cnb-what-is/&#34;&gt;guides on Cloud Native Buildpacks&lt;/a&gt;, as well as &lt;a href=&#34;/guides/containers/cnb-gs-pack/&#34;&gt;pack&lt;/a&gt; and &lt;a href=&#34;/guides/containers/cnb-gs-kpack/&#34;&gt;kpack&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also check out my KubeAcademy course on &lt;a href=&#34;https://kube.academy/courses/building-images&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Building Images&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Blog: Tanzu Developer Celebrates Its 1st Birthday with Some Great New Features!</title>
      
      <link>/blog/tanzu-developer-celebrates-its-1st-birthday-with-some-great-new-features/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/tanzu-developer-celebrates-its-1st-birthday-with-some-great-new-features/</guid>
      <description>

        
        &lt;p&gt;My, how time flies. &lt;a href=&#34;/blog/a-place-to-build-apps-and-build-skills/&#34;&gt;It seems like just yesterday&lt;/a&gt; that the Tanzu Developer Center launched. Our initial showing had what we believed at the time to be a wide array of content, from &lt;a href=&#34;/guides&#34;&gt;guides&lt;/a&gt; to &lt;a href=&#34;/videos&#34;&gt;videos&lt;/a&gt; to &lt;a href=&#34;/samples&#34;&gt;code samples&lt;/a&gt;. Over the last 12 months, though, we’ve really seen our content grow.&lt;/p&gt;
&lt;h2 id=&#34;tanzutv&#34;&gt;Tanzu.TV&lt;/h2&gt;
&lt;p&gt;With shows that run monthly, weekly—even daily—each and every episode is always a great time. &lt;a href=&#34;/tv/tanzu-tuesdays/&#34;&gt;Tanzu Tuesdays&lt;/a&gt;, for example, hosted by &lt;a href=&#34;/team/tiffany-jernigan/&#34;&gt;Tiffany Jernigan&lt;/a&gt;, features a new guest every week who takes you into a deep-dive of a topic of their choosing, complete with live demos and coding. &lt;a href=&#34;/tv/code/&#34;&gt;Code&lt;/a&gt;, on the other hand, is a weekly show hosted by the Spring developer advocates, who walk you through complex, real-world scenarios and show you the tools and techniques you can use to solve them. Make sure to check out all of our shows on &lt;a href=&#34;/tv&#34;&gt;Tanzu.TV&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&#34;workshops&#34;&gt;Workshops&lt;/h2&gt;
&lt;p&gt;In September of 2020, &lt;a href=&#34;/blog/highlights-of-the-springone-2020-self-paced-workshops-and-their-new-home/&#34;&gt;we launched self-paced workshops on the Tanzu Developer Center&lt;/a&gt;. Complete with your own personal environment right in the browser, these workshops offer hands-on instructions for working with new technologies and techniques. For example, our &lt;a href=&#34;/workshops/lab-k8s-fundamentals/&#34;&gt;Kubernetes Fundamentals Workshop&lt;/a&gt; teaches you how to prepare and deploy your applications on Kubernetes without having to set up your own cluster or install anything locally.&lt;/p&gt;
&lt;h2 id=&#34;vmware-tanzu-labs-practices&#34;&gt;VMware Tanzu Labs Practices&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://tanzu.vmware.com/labs&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;VMware Tanzu Labs&lt;/a&gt; has actually been around for a long, &lt;em&gt;long&lt;/em&gt; time. &lt;a href=&#34;https://tanzu.vmware.com/content/blog/vmware-tanzu-labs-new-name&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Previously known as VMware Pivotal Labs&lt;/a&gt;, this organization has been providing agile software development and consulting services for more than 30 years. Over that time, its practitioners have picked up a trick or two, practices which they happily &lt;a href=&#34;https://tanzu.vmware.com/content/blog-tag-devops-best-practices/kubernetes-guides-software-development-practices-vmware-tanzu-labs-open-source&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;share on the Tanzu Developer Center for free&lt;/a&gt;. These practices comprise a wealth of knowledge gleaned from building modern applications, developing products, modernizing existing applications, and working with distributed teams. &lt;a href=&#34;/practices&#34;&gt;Check out the practices today&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&#34;new-outcome-architectures&#34;&gt;NEW! Outcome Architectures&lt;/h2&gt;
&lt;p&gt;Today, we’re introducing &lt;a href=&#34;/outcomes&#34;&gt;outcome architectures&lt;/a&gt;. These outcomes not only address the “why” in the form of strategy content, but the “how” in the form of practical—and proven—tactical references. This new style of content pieces together guides and workshops in a sequential order, building a larger narrative to accomplish a larger goal. We’ve chosen to launch with two outcomes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;/outcomes/secure-software-supply-chain/&#34;&gt;Secure software supply chains&lt;/a&gt; – A secure software supply chain is a full suite of software that will move your code from a developer’s laptop through source control and, eventually, onto production systems. This is not a one-way transaction. This supply chain, when implemented properly, will become a closed-loop system, whereby the same tools that will drive code to production will also help to address critical production events.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;/outcomes/application-observability/&#34;&gt;Application observability&lt;/a&gt; – Software systems commonly comprise a multitude of microservices spanning a variety of cloud and on-premise environments, with dependencies on external services and tools. These systems require constant change in order to accommodate new features and keep up with critical security patches, but change introduces risk. A strong observability culture is essential to managing this risk and making sense of these complex systems.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As you may have noticed, there is something conspicuously absent from the site: patterns. Patterns were a good fit for what the site was a year ago. We started with a dozen or so pieces of content, all fitting into neat little buckets; the intention was to build out content pattern by pattern. Today, however, we have well over 200 guides, blogs, practices, videos, and samples, and that number is growing faster than ever. We’re working on a more flexible way to discover content on the site, and believe that outcomes are a great starting point.&lt;/p&gt;
&lt;h2 id=&#34;thank-you&#34;&gt;Thank You!&lt;/h2&gt;
&lt;p&gt;It’s been such a pleasure to work on this content over the past year, and we’re encouraged each and every time we hear that someone got something useful out of it. The Tanzu Developer Center is an ever-growing project with content constantly being added, and we can’t wait to see what the next year brings. We appreciate everyone who has visited us over these last 12 months, and if you’re new here, we encourage you to take a look around! We have &lt;em&gt;a lot&lt;/em&gt; planned and we’re so excited to bring new content and features to you!&lt;/p&gt;
&lt;p&gt;From &lt;a href=&#34;/team&#34;&gt;all of us who have written content for the site&lt;/a&gt;, thank you!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Blog: Using Knative Eventing for Better Observability</title>
      
      <link>/blog/using-knative-eventing-for-better-observability/</link>
      <pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/using-knative-eventing-for-better-observability/</guid>
      <description>

        
        &lt;p&gt;If you’re using one of the great observability tools out there, you probably already mark your data with important events that may affect it—deployments, configuration changes, code commits, and more. But what about changes Kubernetes makes on its own, like autoscaling events?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://knative.dev&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Knative&lt;/a&gt; is a Kubernetes-based platform used to deploy and manage serverless workloads. It has two components: serving and eventing, both of which can be deployed independently. In this post, we’re going to focus on eventing here, which can automatically mark events in your data or trigger other events based on your needs.&lt;/p&gt;
&lt;h3 id=&#34;knative-eventing&#34;&gt;Knative Eventing&lt;/h3&gt;
&lt;p&gt;The eventing component of Knative is a loosely coupled system of event producers and consumers that allows for multiple modes of usage and event transformation.&lt;/p&gt;
&lt;p&gt;Among the other components in this system are the &lt;a href=&#34;https://knative.dev/docs/eventing/broker/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;broker&lt;/a&gt;, which routes the events over &lt;a href=&#34;https://knative.dev/docs/eventing/channels/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;channels&lt;/a&gt;, and &lt;a href=&#34;https://knative.dev/docs/eventing/triggers/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;triggers&lt;/a&gt;, which subscribe specific consumers to events. For our example, we’re going to keep things very simple, with a single broker using a single&lt;a href=&#34;https://github.com/knative/eventing/blob/release-0.20/config/channels/in-memory-channel/README.md&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt; in-memory channel, &lt;/a&gt;which itself is not to be used in production.&lt;/p&gt;
&lt;h3 id=&#34;kubernetes-events&#34;&gt;Kubernetes Events&lt;/h3&gt;
&lt;p&gt;If we want Kubernetes events as a source, we can use the &lt;a href=&#34;https://knative.dev/docs/eventing/samples/kubernetes-event-source/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;API server source&lt;/a&gt; as an event producer. This will publish any changes seen by the API server to the channel we’re using, and we can consume that event with a small golang application and forward to the observability tool of our choice.&lt;/p&gt;
&lt;p&gt;In this case, we’re going to specifically watch for horizontal pod autoscaler (HPA) messages. Anytime the HPA scales our example app up or down, we’ll send a API call to mark an event.&lt;/p&gt;
&lt;h3 id=&#34;eventing-in-action&#34;&gt;Eventing in Action&lt;/h3&gt;
&lt;p&gt;We’re going to use Kind to deploy a Knative eventing setup and then deploy a sample application with an autoscaler so we can see when it scales up or down. To do this, we will need to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have &lt;a href=&#34;https://kind.sigs.k8s.io&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Kind&lt;/a&gt; installed&lt;/li&gt;
&lt;li&gt;Clone this repo &lt;a href=&#34;https://github.com/tybritten/hpa-sender&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;https://github.com/tybritten/hpa-sender&lt;/a&gt; \&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first thing we need to do is create the Kind cluster. If you’re not comfortable with curling to bash, you can download it first and inspect it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -sL https://raw.githubusercontent.com/csantanapr/knative-kind/master/01-kind.sh &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, we need to install all the Knative eventing components, starting with the CRD and core components:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl apply -f https://github.com/knative/eventing/releases/download/v0.19.0/eventing-crds.yaml
kubectl apply -f https://github.com/knative/eventing/releases/download/v0.19.0/eventing-core.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As mentioned earlier, we need a channel; we’re going to use the simple in-memory channel and corresponding broker:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl apply -f https://github.com/knative/eventing/releases/download/v0.19.0/in-memory-channel.yaml
kubectl apply -f https://github.com/knative/eventing/releases/download/v0.19.0/mt-channel-broker.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Lastly, we need to install the metrics server (and apply a patch) for the HPA:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.6/components.yaml
kubectl patch deployment metrics-server -n kube-system -p &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;template&amp;#34;:{&amp;#34;spec&amp;#34;:{&amp;#34;containers&amp;#34;:[{&amp;#34;name&amp;#34;:&amp;#34;metrics-server&amp;#34;,&amp;#34;args&amp;#34;:[&amp;#34;--cert-dir=/tmp&amp;#34;, &amp;#34;--secure-port=4443&amp;#34;, &amp;#34;--kubelet-insecure-tls&amp;#34;,&amp;#34;--kubelet-preferred-address-types=InternalIP&amp;#34;]}]}}}}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let’s check to make sure everything is up and running:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl get all -n knative-eventing
NAME                                        READY   STATUS    RESTARTS   AGE
pod/eventing-controller-66c877b879-vx6dp    1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          7m15s
pod/eventing-webhook-644c5c7667-pr5x7       1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          7m15s
pod/imc-controller-587f98f97d-l6s9r         1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          6m56s
pod/imc-dispatcher-6db95d7857-n6249         1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          6m56s
pod/mt-broker-controller-76b65f7c96-tpktv   1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          6m51s
pod/mt-broker-filter-6bd64f8c65-wd7hm       1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          6m51s
pod/mt-broker-ingress-7d8595d747-77n77      1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          6m51s

NAME                       TYPE        CLUSTER-IP      EXTERNAL-IP   PORT&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;S&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;           AGE
service/broker-filter      ClusterIP   10.96.126.148   &amp;lt;none&amp;gt;        80/TCP,9092/TCP   6m51s
service/broker-ingress     ClusterIP   10.96.98.183    &amp;lt;none&amp;gt;        80/TCP,9092/TCP   6m51s
service/eventing-webhook   ClusterIP   10.96.211.233   &amp;lt;none&amp;gt;        443/TCP           7m15s
service/imc-dispatcher     ClusterIP   10.96.72.204    &amp;lt;none&amp;gt;        80/TCP            6m56s

NAME                                    READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/eventing-controller     1/1     &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;            &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           7m15s
deployment.apps/eventing-webhook        1/1     &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;            &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           7m15s
deployment.apps/imc-controller          1/1     &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;            &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           6m56s
deployment.apps/imc-dispatcher          1/1     &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;            &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           6m56s
deployment.apps/mt-broker-controller    1/1     &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;            &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           6m51s
deployment.apps/mt-broker-filter        1/1     &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;            &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           6m51s
deployment.apps/mt-broker-ingress       1/1     &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;            &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           6m51s
deployment.apps/pingsource-mt-adapter   0/0     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;            &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;           7m15s

NAME                                               DESIRED   CURRENT   READY   AGE
replicaset.apps/eventing-controller-66c877b879     &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;       7m15s
replicaset.apps/eventing-webhook-644c5c7667        &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;       7m15s
replicaset.apps/imc-controller-587f98f97d          &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;       6m56s
replicaset.apps/imc-dispatcher-6db95d7857          &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;       6m56s
replicaset.apps/mt-broker-controller-76b65f7c96    &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;       6m51s
replicaset.apps/mt-broker-filter-6bd64f8c65        &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;       6m51s
replicaset.apps/mt-broker-ingress-7d8595d747       &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;       6m51s
replicaset.apps/pingsource-mt-adapter-5d85796c74   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;       7m15s

NAME                                                     REFERENCE                      TARGETS   MINPODS   MAXPODS   REPLICAS   AGE
horizontalpodautoscaler.autoscaling/broker-filter-hpa    Deployment/mt-broker-filter    2%/70%    &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;          6m51s
horizontalpodautoscaler.autoscaling/broker-ingress-hpa   Deployment/mt-broker-ingress   2%/70%    &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;          6m51s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we want to add the API event sender. First we need a broker in the default namespace where the application will be:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;eventing.knative.dev/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;broker&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;knative-eventing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We then need a service account (with a cluster role and role binding) for the API source to use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ServiceAccount&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;events-sa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterRole&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;event-watcher&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;apiGroups&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;events&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;verbs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;watch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterRoleBinding&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;k8s-ra-event-watcher&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;roleRef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiGroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterRole&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;event-watcher&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subjects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ServiceAccount&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;events-sa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we need our API server source:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sources.knative.dev/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ApiServerSource&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;testevents&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;serviceAccountName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;events-sa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Resource&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Event&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;sink&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ref&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;eventing.knative.dev/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Broker&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;knative-eventing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can apply these all together from a file in the &lt;code&gt;kind-example&lt;/code&gt; folder in the repo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl apply -f k8s-events.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We now have an API source and a broker reader for an event consumer:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl get all
NAME                                                                  READY   STATUS    RESTARTS   AGE
pod/apiserversource-testevents-bbeb355d-72a6-4e81-b0a8-02d9b0dtq8gn   1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          6s

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;S&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;   AGE
service/kubernetes   ClusterIP   10.96.0.1    &amp;lt;none&amp;gt;        443/TCP   42m

NAME                                                                              READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/apiserversource-testevents-bbeb355d-72a6-4e81-b0a8-02d9b0d31525   1/1     &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;            &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           6s

NAME                                                                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/apiserversource-testevents-bbeb355d-72a6-4e81-b0a8-02d9b0d31525-7685c896c   &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;       6s

NAME                                                              TYPE                                    SOURCE                  SCHEMA   BROKER    DESCRIPTION   READY   REASON
eventtype.eventing.knative.dev/2c7c2c1b3399bde6269acf3b7fe28c3a   dev.knative.apiserver.resource.add      https://10.96.0.1:443            default                 False   BrokerDoesNotExist
eventtype.eventing.knative.dev/5c1186d11f693b2c331a9c31246588e0   dev.knative.apiserver.resource.delete   https://10.96.0.1:443            default                 False   BrokerDoesNotExist
eventtype.eventing.knative.dev/b6426fa883a42e3e23ace1cebabfdd5e   dev.knative.apiserver.resource.update   https://10.96.0.1:443            default                 False   BrokerDoesNotExist

NAME                                             SINK                                                                                AGE   READY   REASON
apiserversource.sources.knative.dev/testevents   http://broker-ingress.knative-eventing.svc.cluster.local/knative-eventing/default   7s    True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can now use any number of consumers, the most simple being the Knative event-display container (&lt;code&gt;gcr.io/knative-releases/knative.dev/eventing-contrib/cmd/event_display)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For this example, I’ve created and published a container using the code in the repo. We’re going to deploy it along with another role that gives it access to the horizontal pod autoscalers, as well as a trigger to send the events to the container:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ServiceAccount&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hpa-sender&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;knative-eventing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterRole&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hpa-sender&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;apiGroups&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;autoscaling&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# &amp;#34;&amp;#34; indicates the core API group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;secrets&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;horizontalpodautoscalers&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;verbs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;get&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;watch&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;list&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterRoleBinding&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hpa-sender&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;roleRef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiGroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterRole&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hpa-sender&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subjects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ServiceAccount&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hpa-sender&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;knative-eventing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;apps/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deployment&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hpa-sender&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;knative-eventing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hpa-sender&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;replicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hpa-sender&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hpa-sender&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;serviceAccountName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hpa-sender&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hpa-sender&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;vmtyler/hpa-sender&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;containerPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Service&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hpa-sender&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;knative-eventing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hpa-sender&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;targetPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;eventing.knative.dev/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Trigger&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hpa-sender-trigger&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;knative-eventing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;broker&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subscriber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uri&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;http://hpa-sender.knative-eventing.svc.cluster.local&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can apply these all together from a file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl apply -f hpa-sender-deployment.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;hpa-sender-configuration&#34;&gt;HPA-Sender Configuration&lt;/h4&gt;
&lt;p&gt;The way the hpa-sender container works is pretty simple; it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Watches the API server events related to HPAs&lt;/li&gt;
&lt;li&gt;Retrieves the specific HPA referenced in the event from the API server&lt;/li&gt;
&lt;li&gt;Checks if the HPA has an annotation for hpa-sender with a secret location as namespace/secretname&lt;/li&gt;
&lt;li&gt;Retrieves the secret, which includes configuration for where to send the event, if it has the annotation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So to use this app, we need a secret with the configuration necessary for our event destination, and we have to annotate our HPA.&lt;/p&gt;
&lt;h4 id=&#34;sample-app-and-hpa-secret&#34;&gt;Sample App and HPA Secret&lt;/h4&gt;
&lt;p&gt;The first thing we need to do is create the secret with the necessary configuration. (There are some sample ones in the repo.) We’re going to use &lt;a href=&#34;https://tanzu.vmware.com/observability&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;VMware Tanzu Observability by Wavefront&lt;/a&gt; as our destination:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Secret&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;php-apache-hpe&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Opaque&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;stringData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://WAVEFRONTHOSTNAME/api/v2/event&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;    {
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;      &amp;#34;Authorization&amp;#34;: &amp;#34;Bearer &amp;lt;wavefront_api_token&amp;gt;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;    }&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;    {
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;      &amp;#34;name&amp;#34;: &amp;#34;HPA Scaling&amp;#34;,
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;      &amp;#34;annotations&amp;#34;: {
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;        &amp;#34;severity&amp;#34;: &amp;#34;info&amp;#34;,
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;        &amp;#34;type&amp;#34;: &amp;#34;scaling&amp;#34;,
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;        &amp;#34;details&amp;#34;: &amp;#34;_message_&amp;#34;
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;      },
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;      &amp;#34;tags&amp;#34; : [
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;        &amp;#34;Scale&amp;#34;
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;      ],
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;      &amp;#34;startTime&amp;#34;: 0,
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;      &amp;#34;endTime&amp;#34;: 0
&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;    }&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We’ll put our WaveFront host name in there along with our API token. In the body, you’ll see a &lt;em&gt;message&lt;/em&gt;, which is what hpa-sender will replace with the actual HPA message.&lt;/p&gt;
&lt;p&gt;For our sample app, we’ll use a basic php-apache image:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;apps/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deployment&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;php-apache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;php-apache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;replicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;php-apache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;php-apache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;k8s.gcr.io/hpa-example&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;containerPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;limits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;cpu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;500m&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;cpu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;200m&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Service&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;php-apache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;php-apache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;php-apache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;autoscaling/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;HorizontalPodAutoscaler&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hpa-event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default/php-apache-hpe&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;php-apache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;maxReplicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;minReplicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;scaleTargetRef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;apps/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deployment&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;php-apache&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;targetCPUUtilizationPercentage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;currentCPUUtilizationPercentage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;currentReplicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;desiredReplicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You will see on the HPA that it has an annotation of &lt;code&gt;hpa-event: default/php-apache-hpe &lt;/code&gt;enabling the hpa-sender and pointing to the secret with the configuration.&lt;/p&gt;
&lt;p&gt;We can apply these all together from a single file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl apply -f hpa-app.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To check on the app and the HPA, we can run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ kubectl get pods
NAME                                                              READY   STATUS    RESTARTS   AGE
apiserversource-testevents-bbeb355d-72a6-4e81-b0a8-02d9b0dtq8gn   1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          74m
php-apache-d4cf67d68-crmsr

$ kubectl get hpa
NAME         REFERENCE               TARGETS         MINPODS   MAXPODS   REPLICAS   AGE
php-apache   Deployment/php-apache   &amp;lt;unknown&amp;gt;/50%   &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;          47s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we can cause the load to go up or down by following &lt;a href=&#34;https://unofficial-kubernetes.readthedocs.io/en/latest/tasks/run-application/horizontal-pod-autoscale-walkthrough/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;these instructions&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ kubectl run -i --tty load-generator --image&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;busybox /bin/sh

Hit enter &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;command&lt;/span&gt; prompt

$ &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; true&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; wget -q -O- http://php-apache.default.svc.cluster.local&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will trigger events to our URL:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/blogs/using-knative-eventing-for-better-observability/wavefront_event_knative.png&#34; alt=&#34;WaveFront Event Screenshot&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Now we have events marking these scaling occurrences on our application’s performance charts.&lt;/p&gt;
&lt;p&gt;This is just one use case for Knative eventing with the Kubernetes API Source, but you can imagine the possibilities enabled by this very customizable, pluggable framework. We didn’t even need to deploy the Knative serving component to do it! If you want to see me go through these steps in more detail, and also walk through how the HPA-Sender works, watch this episode of Tanzu.TV:

&lt;div class=&#34;youtube-video-shortcode&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/9lBaKKe-59E&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Blog: The Hate for YAML: The Hammer or the Nail?</title>
      
      <link>/blog/the-hate-for-yaml-the-hammer-or-the-nail/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/the-hate-for-yaml-the-hammer-or-the-nail/</guid>
      <description>

        
        &lt;p&gt;Those four letters that strike dread in the hearts of every Kubernetes user. That short acronym that pierces like a knife in the dark. The aura of terror that follows it, enveloping everyone and everything as its reach seems to grow to the ends of time itself.&lt;/p&gt;
&lt;p&gt;YAML.&lt;/p&gt;
&lt;p&gt;Alright, maybe that’s a bit dramatic, but there’s no doubt that YAML has developed a reputation for being a pain, namely due to the combination of semantics and empty space that gets deserialized to typed values by a library that you hope follows the same logic as others. This has fostered frustration among developers and operators no matter what the context. But is the issue as simple as “YAML is a pain”? Or is it a bit more nuanced than that?&lt;/p&gt;
&lt;p&gt;Last year, at &lt;a href=&#34;https://www.softwarecircus.io/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Software Circus: Nightmares on Cloud Street&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/jbeda&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Joe Beda&lt;/a&gt; gave a talk on this very subject titled &lt;a href=&#34;https://www.youtube.com/watch?v=8PpgqEqkQWA&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;I’m Sorry About The YAML&lt;/a&gt;. In it, he explores the factors that contribute to YAML’s reputation, or the so-called “two wolves” inside the hatred of YAML—the frustration with YAML itself and the problem that it’s being used to solve—and how they contribute to each other.&lt;/p&gt;
&lt;h2 id=&#34;the-problem-with-the-hammer&#34;&gt;The Problem with the Hammer&lt;/h2&gt;
&lt;p&gt;Beda starts by talking about YAML itself, both writing it and reading it. Of course, the first thing that comes to mind is the meaningful use of blank space. Opinions run high in this discussion, as it’s a situation with which Python developers are intimately familiar. Indeed, there’s a very real scenario where missing a couple of spaces can drastically change your data while still being valid YAML. Consider the following two examples:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;baz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;baz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It’s easy to spot the difference in such a small example, but potentially even easier to overlook two missing spaces when this YAML is hundreds or thousands of lines long. To be fair, this issue isn&amp;rsquo;t completely unique to YAML. In JSON for example, you could easily place a key in a wrong node, or misspell a key in an array of objects. Both of these can of course be mitigated with tools such as schema validators.&lt;/p&gt;
&lt;p&gt;There is some behavior that isn’t as obvious, though. Take the following YAML, for example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;country_codes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;united_states&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;us&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ireland&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ie&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;norway&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;no&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let’s try loading it using the standard library in Ruby, which will parse the YAML and then print it out as JSON.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;yaml&amp;#39;&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;-ENDYAML
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&lt;/span&gt;&lt;span class=&#34;ss&#34;&gt;country_codes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;ss&#34;&gt;united_states&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;us&lt;/span&gt;
  &lt;span class=&#34;ss&#34;&gt;ireland&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ie&lt;/span&gt;
  &lt;span class=&#34;ss&#34;&gt;norway&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;no&lt;/span&gt;
&lt;span class=&#34;no&#34;&gt;ENDYAML&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;puts&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;YAML&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;country_codes&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;united_states&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;us&amp;#34;&lt;/span&gt;, &lt;span class=&#34;s2&#34;&gt;&amp;#34;ireland&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ie&amp;#34;&lt;/span&gt;, &lt;span class=&#34;s2&#34;&gt;&amp;#34;norway&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;false&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is what Beda calls the “Norway Problem.” YAML’s specification doesn’t require quoting strings, which can cause some unintended behavior from any given library in your language of choice. In the &lt;a href=&#34;https://yaml.org/type/bool.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;official YAML specification&lt;/a&gt;, “no” is a valid value to represent a boolean that is “false”. And it isn’t limited to just this niche case. Consider the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1.2.0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;1.2.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It makes sense that this is being parsed as a string. After all, what else could it be interpreted as? Well, what if we represent the same thing, but in a slightly different way?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1.2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;1.2&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With no schema validation or context, the YAML specification clearly states that this should be &lt;a href=&#34;https://yaml.org/type/float.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;interpreted as a float&lt;/a&gt;. You and I probably even agree that both of these scenarios make sense, but this ambiguity leaves a non-zero margin of error, especially when you put it in the context of something as complex as Kubernetes.&lt;/p&gt;
&lt;h2 id=&#34;yamls-attack-surface&#34;&gt;YAML’s Attack Surface&lt;/h2&gt;
&lt;p&gt;Things can also get tricky when you start deserializing anything more complex than a 1:1 representation of data and logic.&lt;/p&gt;
&lt;p&gt;In YAML, you can reference one structure from another, which is very, very handy when you know that values from one portion of a YAML document will need to be referenced later. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;amp;speaker&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Joe Beda&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;presentation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Nightmare on Cloud Street&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;speaker&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;*speaker&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This YAML defined the anchor “speaker” with the value “Joe Beda”, which is then referenced later in the line &lt;code&gt; speaker: *speaker&lt;/code&gt;. When this YAML is expanded, this becomes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Joe Beda&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;presentation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Nightmare on Cloud Street&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;speaker&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Joe Beda&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But as they say, “With great power comes a great opportunity for someone with malicious intent to exploit.” Take a look at the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;amp;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;amp;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;*a,*a,*a]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;amp;c&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;*b,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;*b,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;*b]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is a little weird to look at, but try to think it through. We’ve set the anchor “a” to an array containing three values. Then we give the anchor “b” a value that references the anchor “a”, three times. We then reference the “b” anchor three more times in “c” anchor. If you run this through the Ruby code from earlier to translate it to JSON, we get the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
 &lt;span class=&#34;nt&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;
 &lt;span class=&#34;nt&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;[[[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is a play on a fairly old trick that utilizes recursion to expand a rather small amount of data into something that’s magnitudes larger. You can see that by the third line of our YAML, we turned an array with three items into one with one with 27. This issue was addressed in Kubernetes directly in &lt;a href=&#34;https://github.com/kubernetes/kubernetes/issues/83253&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;CVE-2019-11253&lt;/a&gt; to prevent a maliciously crafted piece of YAML from crashing the kube-apiserver.&lt;/p&gt;
&lt;h2 id=&#34;the-problem-with-the-nail&#34;&gt;The Problem with the Nail&lt;/h2&gt;
&lt;p&gt;Beda did mention there was a second wolf in this conversation, and with it comes the nuance of YAML’s use in the context of Kubernetes.&lt;/p&gt;
&lt;p&gt;First and foremost, Kubernetes resources can be complex, and in turn make the YAML very verbose. Another word that could be used is “explicit.” In machine-to-machine communication, explicitness is great. It doesn’t matter if it’s 100 lines of YAML or 1,000, the difference when being parsed and passed around to different machines and APIs, all while making sure those APIs are responsible for making too many assumptions, is completely negligible. That YAML has to come from somewhere, though, and often that “somewhere” is actually “someone.” Such explicitness means an additional burden of complexity for the user.&lt;/p&gt;
&lt;p&gt;Kubernetes also does &lt;em&gt;a lot&lt;/em&gt;. In fact, it can solve so many problems that it can actually make the simpler problems harder. Beda gives a great analogy referencing a popular word processor that often received complaints for being too “bloated.” People would say, “It has all of these features and I only ever use 20 percent of them.” Beda describes the research the development team undertook to figure out how users leveraged those features: They concluded that while any individual user would only leverage a small percentage of features—say, 10 percent—different collections of users would leverage a different 10 percent, and most features actually received significant usage.&lt;/p&gt;
&lt;p&gt;The same can be said for Kubernetes. It has a long tail of features and fields in the YAML that users are writing, which some may find too verbose, explicit, or repetitive. While you may not use those features, they may be well-utilized by others.&lt;/p&gt;
&lt;p&gt;So with your YAML written, you head to the command line, run &lt;code&gt;kubectl apply&lt;/code&gt;, and don’t receive any errors. Everything must be perfect! Well, maybe not. Even with valid YAML, any of the above scenarios could lead to the Kubernetes API server initially accepting something, but then as different pods and containers are stood up and volumes are claimed, one fat-fingered configuration throws it all out the window. And that means your development loop is now significantly longer than you’d initially expected, a frustrating experience to say the least.&lt;/p&gt;
&lt;h2 id=&#34;how-do-we-improve&#34;&gt;How Do We Improve?&lt;/h2&gt;
&lt;p&gt;As Beda notes, “There are no silver bullets” to this problem. There are a lot of opinions, but at the end of the day, there’s no one-size-fits-all solution. Maybe if it were something that was focused on in the early days of Kubernetes the conversation would be different, but hindsight truly is 20/20.&lt;/p&gt;
&lt;p&gt;That said, with such a strong community, you have a seemingly limitless choice of tools and solutions. From generators to validators to templating systems, it feels like a new option is appearing every day.&lt;/p&gt;
&lt;p&gt;Beda also points out a common trap that some can fall into: mixing up config and code. That is, the difference between using an existing solution such as YAML vs. writing your own DSL. It’s really easy to say that something as complex as Kubernetes could have its own language to create and configure objects, but now you’ve layered a whole new complexity onto an existing one.&lt;/p&gt;
&lt;p&gt;He references a short, but relevant, piece by Mike Hadlow titled &lt;a href=&#34;http://mikehadlow.blogspot.com/2012/05/configuration-complexity-clock.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;The Configuration Complexity Clock&lt;/a&gt; in which Hadlow walks through, from start to finish, what happens in a case such as this, and expands on it. Basically, if you create your own configuration DSL, you’ve traded a common general purpose language with a widely known skill set for something that nobody knows. You’ve also traded a potential fleet of testing tools for ones you now need to write yourself. Meanwhile, if you hide concepts, you’re potentially limiting features on one hand. On the other hand, if you’re embracing them, you’re no better off than you were at the start.&lt;/p&gt;
&lt;p&gt;Beda instead advocates embracing the tools that have emerged organically from the Kubernetes community itself. He also points out the benefit of taking a Unix-like toolchain mindset of breaking down a problem into smaller chunks and feeding each one into the next. If an individual doesn’t like a piece of the chain, they can replace it with a similar solution of their own. For example, &lt;a href=&#34;https://carvel.dev/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Carvel&lt;/a&gt; aims to accomplish this approach, providing a collection of single-purpose, composable tools that you can chain together. If you&amp;rsquo;d like to learn more about Carvel, there&amp;rsquo;s a great &lt;a href=&#34;/tv/tgik/142/&#34;&gt;TGIK episode&lt;/a&gt; that covers the different tools and how they can work together.&lt;/p&gt;
&lt;p&gt;So what’s the verdict? Is YAML the worst thing in the world? Is the hate overblown? Well, it’s your opinion and yours alone, just be sure to really reflect on why, exactly, you hold that opinion. Beda’s talk made me realize just how nuanced the common jokes about the pain of YAML really are, so if you have a spare half hour, be sure to &lt;a href=&#34;https://www.youtube.com/watch?v=8PpgqEqkQWA&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;watch it&lt;/a&gt;. Even if you’re a diehard YAML advocate, he still does a great job of putting into words the things that likely haven&amp;rsquo;t even crossed many people’s minds.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/8PpgqEqkQWA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      
      <title>Blog: Under the Microscope: Software Observability in a Distributed Architecture</title>
      
      <link>/blog/under-the-microscope-software-observability-in-a-distributed-architecture/</link>
      <pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/under-the-microscope-software-observability-in-a-distributed-architecture/</guid>
      <description>

        
        &lt;p&gt;It’s the day and age of mountains of microservices, running on various platforms, consuming multiple services from multiple providers. As applications become more and more distributed, they become more complex. Even splitting a monolith into multiple smaller microservices introduces several points of failure. What happens when the two services can’t reach each other over the network? What if one service relies on the other and it crashes? What about if the application slows to a crawl; where would you start looking to figure out why?&lt;/p&gt;
&lt;p&gt;Rather than guessing and hoping, you can lean on properly instrumented &lt;a href=&#34;/patterns/observability&#34;&gt;observability&lt;/a&gt;. Being able to aggregate logs and metrics, as well as trace a request as it flows through various applications and services, is as achievable as ever. No matter your language, framework, or platform of choice, chances are you have some great options.&lt;/p&gt;
&lt;p&gt;But first, let’s talk about why you should care about observability.&lt;/p&gt;
&lt;h2 id=&#34;what-is-observability&#34;&gt;What Is Observability?&lt;/h2&gt;
&lt;p&gt;I think of observability as the ability to infer the correlation between (seemingly) disparate systems. That means bringing together metrics from many systems in a way that allows us to find answers to questions that speed up both MTTD (the mean time to detect an issue) and MTTR (the mean time to resolve an issue). By themselves, metrics such as CPU, memory, response time, error rates, and latency are valuable, but they will not pinpoint the cause of a service degradation. Bringing these metrics together, where we can quickly understand how they relate to one another, is the beginning of observability.&lt;/p&gt;
&lt;h2 id=&#34;why-is-observability-important&#34;&gt;Why Is Observability Important?&lt;/h2&gt;
&lt;p&gt;The interaction between software components is becoming more complex as infrastructure as code continues to mature. Containers, service meshes, and the use of orchestration make it increasingly difficult to troubleshoot performance issues. Being able to quickly understand how these systems are interacting without first having to define those relationships is the essence of observability.&lt;/p&gt;
&lt;p&gt;Observability also moves the understanding of performance closer to the time of deployment. Observability is central to the ideas of DevOps, SREs, declarative [insert link here] deployments, etc. With observability, we see the performance of the service in real time, at the time of deployment.&lt;/p&gt;
&lt;h2 id=&#34;how-does-observability-differ-from-traditional-monitoring&#34;&gt;How Does Observability Differ from Traditional Monitoring?&lt;/h2&gt;
&lt;p&gt;First, let’s look back to when we had the mantra of “monitor everything.” While that sounded like a good idea, without correlation, monitoring everything doesn’t increase understanding, and in fact can make it more challenging to identify what’s impacting performance.&lt;/p&gt;
&lt;p&gt;I used to lead incident response for a high-volume website. This was before containers, however, so whenever we launched a new architecture, it had a tiered architecture with web, app, and DB servers. We had everything monitored, but it wasn’t well correlated.&lt;/p&gt;
&lt;p&gt;An issue once occurred in which we noticed that the web tier was responding slowly. Historically when the web tier slowed down, a rolling restart of the app servers would resolve it. However, on this day, as the automated script kicked off the rolling restart, we watched as response time slowed to the point that the site became unresponsive. When we dove into the slew of monitoring tools, we found that our database servers were all I/O-bound. We subsequently determined that when the app servers were starting up, they were opening several pooled connections to the database and executing certain queries to cache information at the app layer. The rolling restart of the app layer was leading to resource exhaustion on the DB layer. So we DoS’d our site.&lt;/p&gt;
&lt;p&gt;Without observability, we were limited in our understanding of the underlying issue, which meant that we responded to the signal we best understood even though it was not causing the underlying problem. So, the steps we took to resolve the issue ultimately made it worse. True observability would have let us ask the question, “Where else in the system are we seeing anomalies?” That’s because while monitoring can help speed MTTD, observability can speed MTTR, by quickly correlating the signals with minimal effort.&lt;/p&gt;
&lt;p&gt;Now that we have an idea of what observability is and why it is essential, let’s walk through how to achieve it.&lt;/p&gt;
&lt;h2 id=&#34;how-do-you-achieve-observability&#34;&gt;How Do You Achieve Observability?&lt;/h2&gt;
&lt;p&gt;To achieve observability, start by instrumenting services as much as possible. Doing so is easier today than ever before. Not only are there myriad commercial products available, there are handy open source products like Prometheus, Grafana, Zipkin, and others. There is no excuse for not instrumenting your systems.&lt;/p&gt;
&lt;p&gt;Understanding the measurements in context is also critical, and requires a central place to ingest all of that telemetry, where correlation can occur. Correlating can mean different things, but at minimum you should be able to visualize data from other systems in a standard format.&lt;/p&gt;
&lt;p&gt;Finally, you need to be able to quickly interrogate this mountain of data in order to identify the cause of performance issues. This capability is central to true observability. You need to be able to ask questions and get answers in real time. If you have to define the problems ahead of time and build indices, your questions may not be relevant to the specific issue at hand.&lt;/p&gt;
&lt;p&gt;These steps assume the telemetry is flowing into a common platform, and that platform can visualize and make queries in real time. In my earlier example, all of the systems involved had some form of monitoring in place. Still, the correlation did not happen because they all flowed data to different destinations, which meant there was no one single place to discover what else might also be having an issue.&lt;/p&gt;
&lt;h2 id=&#34;how-do-you-get-started&#34;&gt;How Do You Get Started?&lt;/h2&gt;
&lt;p&gt;You have a lot of options, both open source and commercial, that you can use to achieve observability. If you’re leaning toward the open source solutions, we’ve created guides for some of our favorites. If you’re looking to get started with gathering metrics, for example, make sure to check out &lt;a href=&#34;/guides/kubernetes/observability-prometheus-grafana-p1/&#34;&gt;Prometheus and Grafana: Gathering Metrics from Kubernetes&lt;/a&gt; as well as &lt;a href=&#34;/guides/spring/spring-prometheus/&#34;&gt;Prometheus and Grafana: Gathering Metrics from Spring Boot on Kubernetes&lt;/a&gt;. If you’re more interested in tracing, we’ve published &lt;a href=&#34;/guides/spring/spring-zipkin/&#34;&gt;Getting Started with Zipkin and Spring Boot&lt;/a&gt;. While many of these guides assume you’re working with Spring Boot, they also provide a lot of great context and lay the groundwork for transferring these ideas to other languages.&lt;/p&gt;
&lt;p&gt;Finally, if you’re looking for a more all-in-one solution, check out how to &lt;a href=&#34;/blog/debugging-a-kubernetes-workload-with-octant&#34;&gt;debug Kubernetes workloads with Octant&lt;/a&gt; and learn about how you can use the free tier of &lt;a href=&#34;/guides/spring/spring-zipkin/&#34;&gt;Wavefront for Spring Boot: Getting Started&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Blog: Data Science with Python &amp; JupyterHub on Kubernetes - Part 1</title>
      
      <link>/blog/data-science-with-python-jupyterhub-on-kubernetes-part-1/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/data-science-with-python-jupyterhub-on-kubernetes-part-1/</guid>
      <description>

        
        &lt;p&gt;Provisioning environments for data scientists and analysts to run simulations, test new models, or experiment with new datasets can be time-consuming and error-prone. Python is a popular choice for data science use cases, and one of the easiest ways to leverage Python is through Jupyter Notebooks. A web-based development environment for multiple languages, Jupyter Notebooks support the creation and sharing of documents that contain code, equations, visualizations, output, and markup text all in the same document. Because Jupyter Notebooks are just text files, they can be easily stored and managed in a source code repository such as GitLab or GitHub. JupyterHub, meanwhile, is a multiuser hub that spawns, manages, isolates, and proxies multiple instances of a single-user Jupyter Notebook server.&lt;/p&gt;
&lt;p&gt;Kubernetes provides the perfect abstractions and API to automate consistent and isolated environments for data scientists to conduct their work. Combining these three things—Jupyter Notebooks, Python, and Kubernetes—into one powerful platform therefore makes a lot of sense.&lt;/p&gt;
&lt;p&gt;In the first post in this two-part series, you will learn how to deploy a Kubernetes cluster using kind on a Mac, then how to install JupyterHub into that cluster. In the second post, we will show you how to use the data science and machine learning notebooks you have created on your newly deployed JupyterHub service running on Kubernetes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/blogs/jupyter-hub-on-k8s/p1-jh-ex.png&#34; alt=&#34;Example notebook in JupyterHub&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;before-you-begin&#34;&gt;Before You Begin&lt;/h2&gt;
&lt;p&gt;There are a few things you’ll need before getting started with Jupyter Notebooks on Kubernetes. These instructions leverage the kind project (&lt;a href=&#34;https://kind.sigs.k8s.io/),&#34;&gt;https://kind.sigs.k8s.io/),&lt;/a&gt; which stands for Kubernetes in Docker. I ran through this example on my MacBook, but any system that has Docker installed can be used; kind will create a default storage class for your cluster using a local path persistent volume. For a production deployment of JupyterHub, you want to make sure you have persistent storage (using the CSI) that maps to a shared storage solution such as NFS, iSCSI, or FC. The default JupyterHub Helm chart settings create a service type load balancer because most managed Kubernetes offerings come configured with a cloud load balancer. To keep this tutorial brief, we will use Kubernetes port forwarding to forward a local port to our proxy-public service, which would normally be exposed through the cloud load balancer.&lt;/p&gt;
&lt;h2 id=&#34;install-kind-and-create-your-kubernetes-cluster&#34;&gt;Install kind and Create Your Kubernetes Cluster&lt;/h2&gt;
&lt;p&gt;Start by taking the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open your favorite terminal emulator on your Mac, which should be running OS X&lt;/li&gt;
&lt;li&gt;Use the Brew package manager, which makes installing kind on Mac OS X simple&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯ brew install &lt;span class=&#34;nv&#34;&gt;kind&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&amp;gt; Downloading https://homebrew.bintray.com/bottles/kind-0.9.0.catalina.bottle.1.tar.gz
&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&amp;gt; Downloading from https://d29vzk4ow07wi7.cloudfront.net/e5ba99b5f14711e0dcb121a992d74c5ee6c6b0468b27e5200bf796d4987e13c0?response-content-disposition&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;attachme
&lt;span class=&#34;c1&#34;&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&amp;gt; Pouring kind-0.9.0.catalina.bottle.1.tar.gz
&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&amp;gt; Caveats
zsh completions have been installed to:
  /usr/local/share/zsh/site-functions

/usr/local/share/zsh/site-functions is not in your zsh FPATH!
Add it by following these steps:
  https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh
&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&amp;gt; Summary
🍺  /usr/local/Cellar/kind/0.9.0: &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt; files, 9.2MB
&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&amp;gt; &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;brew cleanup&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; has not been run in &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; days, running now...
Removing: /Users/kraustvmware.com/Library/Caches/Homebrew/pcre2--10.35.catalina.bottle.tar.gz... &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;2.0MB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Removing: /Users/kraustvmware.com/Library/Caches/Homebrew/sqlite--3.33.0.catalina.bottle.tar.gz... &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1.9MB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Removing: /Users/kraustvmware.com/Library/Caches/Homebrew/Cask/iterm2--3.3.12.zip... &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;13.5MB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Removing: /Users/kraustvmware.com/Library/Logs/Homebrew/fdupes... &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;64B&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Removing: /Users/kraustvmware.com/Library/Logs/Homebrew/gdbm... &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;64B&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Removing: /Users/kraustvmware.com/Library/Logs/Homebrew/readline... &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;64B&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Removing: /Users/kraustvmware.com/Library/Logs/Homebrew/sqlite... &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;64B&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Removing: /Users/kraustvmware.com/Library/Logs/Homebrew/xz... &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;64B&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Removing: /Users/kraustvmware.com/Library/Logs/Homebrew/pcre2... &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;64B&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Removing: /Users/kraustvmware.com/Library/Logs/Homebrew/openssl@1.1... &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;64B&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Removing: /Users/kraustvmware.com/Library/Logs/Homebrew/python@3.8... &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; files, 172.3KB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Pruned &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; symbolic links from /usr/local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Download a kind cluster configuration manifest or create your own. This is my config:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯ cat multinode-conf.yaml

kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
networking:
  apiServerAddress: &lt;span class=&#34;s2&#34;&gt;&amp;#34;127.0.0.1&amp;#34;&lt;/span&gt;
  apiServerPort: &lt;span class=&#34;m&#34;&gt;6443&lt;/span&gt;
nodes:
- role: control-plane
- role: worker
- role: worker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Create your local Kubernetes cluster:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯ kind create cluster --config ./multinode-conf.yaml --name jupyter
Creating cluster &lt;span class=&#34;s2&#34;&gt;&amp;#34;jupyter&amp;#34;&lt;/span&gt; ...
 ✓ Ensuring node image &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;kindest/node:v1.19.1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 🖼
 ✓ Preparing nodes 📦 📦 📦
 ✓ Writing configuration 📜
 ✓ Starting control-plane 🕹️
 ✓ Installing CNI 🔌
 ✓ Installing StorageClass 💾
 ✓ Joining worker nodes 🚜
Set kubectl context to &lt;span class=&#34;s2&#34;&gt;&amp;#34;kind-jupyter&amp;#34;&lt;/span&gt;
You can now use your cluster with:

kubectl cluster-info --context kind-jupyter

Have a question, bug, or feature request? Let us know! https://kind.sigs.k8s.io/#community 🙂
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Test your Kubernetes cluster:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯ kubectl config get-contexts
CURRENT   NAME           CLUSTER        AUTHINFO       NAMESPACE
*         kind-jupyter   kind-jupyter   kind-jupyter

❯ kubectl get nodes
NAME                    STATUS   ROLES    AGE     VERSION
jupyter-control-plane   Ready    master   2m31s   v1.19.1
jupyter-worker          Ready    &amp;lt;none&amp;gt;   2m1s    v1.19.1
jupyter-worker2         Ready    &amp;lt;none&amp;gt;   2m1s    v1.19.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;helm-install&#34;&gt;HELM Install&lt;/h2&gt;
&lt;p&gt;Before we can install the JupyterHub Helm chart, we need to ensure Helm is installed. If you don’t already have it, follow the instructions below for OS X or reference this &lt;a href=&#34;/guides/kubernetes/helm-gs/&#34;&gt;Getting Started Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On your Mac, download and install the &lt;a href=&#34;https://github.com/helm/helm/releases&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Helm CLI&lt;/a&gt; if you haven&amp;rsquo;t already done so.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
❯ chmod &lt;span class=&#34;m&#34;&gt;700&lt;/span&gt; get_helm.sh
❯ ./get_helm.sh
Downloading https://get.helm.sh/helm-v3.4.1-darwin-amd64.tar.gz
Verifying checksum... Done.
Preparing to install helm into /usr/local/bin
Password:
helm installed into /usr/local/bin/helm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;install-jupyterhub&#34;&gt;Install JupyterHub&lt;/h2&gt;
&lt;p&gt;We are now going to leverage the Helm package manager for Kubernetes to install JupyterHub. Follow the instructions below to deploy JupyterHub notebooks on your Kubernetes cluster.&lt;/p&gt;
&lt;p&gt;Add the Jupyter Helm chart repo to Helm:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯ helm repo add jupyterhub https://jupyterhub.github.io/helm-chart/
❯ helm repo update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On a Linux machine, generate a random hex string to be used as a security token by JupyterHub:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯ openssl rand -hex &lt;span class=&#34;m&#34;&gt;32&lt;/span&gt;
  c46350ed823f94.......20dff86cc63a570d3be
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Confirm the existence of the “standard” storage class, which will be used for the persistent volume for each instance spawned by JupyterHub. This will allow each user to have a 10GB persistent volume so that their work will persist through restarts of their instance or pod and be mounted to their home directory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯ kubectl get storageclass                                      

NAME                 PROVISIONER             RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE
standard &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;   rancher.io/local-path   Delete          WaitForFirstConsumer   &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;                  3m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Modify the configuration of a Helm chart. This is done at deployment time with a values YAML file. To simplify your experience, we have already created a &lt;a href=&#34;https://raw.githubusercontent.com/tkrausjr/k8s-manifests/master/jupyter-hub/scipy-jhub-values-kind.yaml&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;configuration YAML&lt;/a&gt; file for the JupyterHub Helm package, which you can download and edit. We have preconfigured this values file to configure several things for your JupyterHub installation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Thanks to the new Docker image pull changes on Docker Hub, you will need to configure an &lt;code&gt;imagePullSecret&lt;/code&gt; with your Docker Hub account to pull the required images. Read more about it &lt;a href=&#34;https://docs.docker.com/docker-hub/download-rate-limit/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Change the default interface to the newer &lt;a href=&#34;https://jupyter.org/#:~:text=JupyterLab%20is%20a%20web%2Dbased,scientific%20computing%2C%20and%20machine%20learning.&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Jupyter Lab&lt;/a&gt; interface. This recent improvement provides some aesthetic and functional benefits, such as providing a terminal interface to your Jupyter Notebook instance to do things like git checkouts.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯ wget https://raw.githubusercontent.com/tkrausjr/k8s-manifests/master/jupyter-hub/scipy-jhub-values-kind.yaml

❯ vi scipy-jhub-values-kind.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Change the following in the &lt;code&gt;scipy-jhub-values-kind.yaml&lt;/code&gt; file:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Put in your Docker Hub account the username, email, and password.&lt;/li&gt;
&lt;li&gt;Put in the generated hex string from Step 1.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;c&#34;&gt;# imagePullSecret is configuration to create a k8s Secret that Helm chart&amp;#39;s pods&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# can get credentials from to pull their images.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;imagePullSecret&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;automaticReferenceInjection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;registry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;DockerHub-Username&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;## &amp;lt;&amp;lt;Change to your User Name&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;DockerHub-Email&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;## &amp;lt;&amp;lt;Change to your Email&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;DockerHub-Password&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;## &amp;lt;&amp;lt;Change to your Pass&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;service&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterIP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fsGid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;deploymentStrategy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Recreate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;sqlite-pvc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;upgrade&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;pvc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;accessModes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;ReadWriteOnce&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;storage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;3Gi&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;storageClassName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;standard &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;## &amp;lt;Change to your Storage Class&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;singleuser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;jupyter/scipy-notebook&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;memory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;limit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;5G&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;guarantee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2.&lt;/span&gt;&lt;span class=&#34;l&#34;&gt;5G&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;defaultUrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/lab&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;storage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;dynamic&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dynamic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;storageClass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;standard &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;## &amp;lt;Change to your Storage Class&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;service&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterIP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;secretToken&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;c86a373144e4e8b1341fa5661cdc70f165856ba48eb54028eb844d41f1f2aeb4d4a0cca29b9548d52cb9b4c2fb901aa00537a9d37451a6f77953add34039ca56&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;## &amp;lt;&amp;lt;Change the token to your random hex string from Step 1&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We have chosen the latest version of the &lt;code&gt;jupyter/scipy-notebook&lt;/code&gt;, which comes with all the required libraries for the machine learning and data science use cases we will demonstrate in the second post of this two-part series. Specifically, the &lt;code&gt;scipy-notebook&lt;/code&gt; comes preinstalled with pandas, matplotlib, scikit-learn, beautifulsoup, and seaborn. For a list of the Docker images that the Jupyter team maintains, you can look &lt;a href=&#34;https://jupyter-docker-stacks.readthedocs.io/en/latest/using/selecting.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Create a dedicated Kubernetes namespace to house the JupyterHub Kubernetes components:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯  kubectl create namespace jupyter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Install JupyterHub using the Helm chart and reference the values file you modified in Step 3:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯  helm install jhub-datascience jupyterhub/jupyterhub -f scipy-jhub-values-kind.yaml -n jupyter --timeout 180s
WARNING: You should switch to &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://charts.helm.sh/stable&amp;#34;&lt;/span&gt;
NAME: jhub-datascience
LAST DEPLOYED: Thu Oct &lt;span class=&#34;m&#34;&gt;29&lt;/span&gt; 13:58:01 &lt;span class=&#34;m&#34;&gt;2020&lt;/span&gt;
NAMESPACE: jupyter
STATUS: deployed
REVISION: &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
TEST SUITE: None
NOTES:
Thank you &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; installing JupyterHub!
Your release is named jhub-datascience and installed into the namespace jupyter.
You can find &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; the hub and proxy is ready by doing:
 kubectl --namespace&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;jupyter get pod
and watching &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; both those pods to be in status &lt;span class=&#34;s1&#34;&gt;&amp;#39;Running&amp;#39;&lt;/span&gt;.
You can find the public IP of the JupyterHub by doing:
 kubectl --namespace&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;jupyter get svc proxy-public
It might take a few minutes &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; it to appear!
Note that this is still an alpha release! If you have questions, feel free to
  1. Read the guide at https://z2jh.jupyter.org
  2. Chat with us at https://gitter.im/jupyterhub/jupyterhub
  3. File issues at https://github.com/jupyterhub/zero-to-jupyterhub-k8s/issues
directly instead.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This installation will take a while to pull down all the images required to use JupyterHub and bootstrap the installation process.&lt;/p&gt;
&lt;p&gt;You can monitor and troubleshoot the JupyterHub installation by watching the pod creations in the &lt;code&gt;jupyter&lt;/code&gt; namespace.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯  kubectl get po -n jupyter -w                        

NAME                              READY   STATUS    RESTARTS   AGE
continuous-image-puller-4lpbv     1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          90s
continuous-image-puller-cw8vd     1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          90s
continuous-image-puller-hr75f     1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          90s
continuous-image-puller-skspt     1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          90s
hub-7d9698c5d4-dh4ld              1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          90s
proxy-7c5f54cb77-t8l4d            1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          90s
user-scheduler-67f756d5d6-4gb6b   1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          90s
user-scheduler-67f756d5d6-f4z4c   1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          90s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also monitor for errors by putting a watch on Kubernetes events happening during the installation of the Helm release inside the &lt;code&gt;jupyter&lt;/code&gt; namespace.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯  kubectl get events -n jupyter -w

0s          Normal    Pulled                   pod/continuous-image-puller-6ksn9      Container image &lt;span class=&#34;s2&#34;&gt;&amp;#34;k8s.gcr.io/pause:3.2&amp;#34;&lt;/span&gt; already present on machine
0s          Normal    Created                  pod/continuous-image-puller-6ksn9      Created container pause
0s          Normal    Started                  pod/continuous-image-puller-6ksn9      Started container pause
0s          Normal    EnsuringLoadBalancer     service/proxy-public                   Ensuring load balancer
0s          Normal    EnsuredLoadBalancer      service/proxy-public                   Ensured load balancer
0s          Warning   FailedScheduling         pod/hub-7b9c7b96d5-2l4sd               running &lt;span class=&#34;s2&#34;&gt;&amp;#34;VolumeBinding&amp;#34;&lt;/span&gt; filter plugin &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; pod &lt;span class=&#34;s2&#34;&gt;&amp;#34;hub-7b9c7b96d5-2l4sd&amp;#34;&lt;/span&gt;: pod has unbound immediate PersistentVolumeClaims
0s          Warning   ProvisioningFailed       persistentvolumeclaim/hub-db-dir       storageclass.storage.k8s.io &lt;span class=&#34;s2&#34;&gt;&amp;#34;standard&amp;#34;&lt;/span&gt; not found
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To look at a failed Helm release in Kubernetes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯  helm list -A                              
WARNING: &lt;span class=&#34;s2&#34;&gt;&amp;#34;kubernetes-charts.storage.googleapis.com&amp;#34;&lt;/span&gt; is deprecated &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;stable&amp;#34;&lt;/span&gt; and will be deleted Nov. 13, 2020.
WARNING: You should switch to &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://charts.helm.sh/stable&amp;#34;&lt;/span&gt;
NAME      	NAMESPACE	REVISION	UPDATED                                	STATUS	CHART            	APP VERSION
jhub-scipy	jupyter  	&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;       	2020-11-04 09:25:17.906053349 -0800 PST	failed	jupyterhub-0.10.0	1.2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To uninstall a failed Helm release in Kubernetes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯  helm uninstall jhub-scipy -n jupyter                                                                                               

WARNING: &lt;span class=&#34;s2&#34;&gt;&amp;#34;kubernetes-charts.storage.googleapis.com&amp;#34;&lt;/span&gt; is deprecated &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;stable&amp;#34;&lt;/span&gt; and will be deleted Nov. 13, 2020.
WARNING: You should switch to &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://charts.helm.sh/stable&amp;#34;&lt;/span&gt;
release &lt;span class=&#34;s2&#34;&gt;&amp;#34;jhub-scipy&amp;#34;&lt;/span&gt; uninstalled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;jupyter-hub-access&#34;&gt;Jupyter Hub Access&lt;/h2&gt;
&lt;p&gt;To verify that your Jupyter Hub deployment is successful, the following Kubernetes objects should be running in the &lt;code&gt;jupyter&lt;/code&gt; namespace:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯  kubectl get deploy,po,svc,pvc -n jupyter     

NAME                             READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/hub              1/1     &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;            &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           3m
deployment.apps/proxy            1/1     &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;            &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           3m
deployment.apps/user-scheduler   2/2     &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;            &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;           3m

NAME                                  READY   STATUS    RESTARTS   AGE
pod/continuous-image-puller-4lpbv     1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          3m
pod/continuous-image-puller-cw8vd     1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          3m
pod/continuous-image-puller-hr75f     1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          3m
pod/continuous-image-puller-skspt     1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          3m
pod/hub-7d9698c5d4-dh4ld              1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          3m
pod/proxy-7c5f54cb77-t8l4d            1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          3m
pod/user-scheduler-67f756d5d6-4gb6b   1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          3m
pod/user-scheduler-67f756d5d6-f4z4c   1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          3m

NAME           TYPE        CLUSTER-IP      EXTERNAL-IP   PORT&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;S&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;    AGE
hub            ClusterIP   10.96.151.178   &amp;lt;none&amp;gt;        8081/TCP   3m
proxy-api      ClusterIP   10.96.90.242    &amp;lt;none&amp;gt;        8001/TCP   3m
proxy-public   ClusterIP   10.96.66.108    &amp;lt;none&amp;gt;        80/TCP     3m

NAME          STATUS   VOLUME            CAPACITY   ACCESS MODES   STORAGECLASS   AGE
claim-admin   Bound    pvc-46f13b00-580a-435a-b263-22b4cfd2376d   10Gi       RWO            
standard       20m
hub-db-dir    Bound    pvc-96243b44-2088-44df-828a-d9abf75cea46   3Gi        RWO            standard       51m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The final step is to expose the proxy-public Kubernetes service locally on your Mac using port forwarding.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;❯ kubectl port-forward -n jupyter svc/proxy-public 8080:80 &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;2&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;39859&lt;/span&gt;
Forwarding from 127.0.0.1:8080 -&amp;gt; &lt;span class=&#34;m&#34;&gt;8000&lt;/span&gt;                                                     
Forwarding from &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;::1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;:8080 -&amp;gt; &lt;span class=&#34;m&#34;&gt;8000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To access the JupyterHub web UI from your Mac, use your web browser and enter your local IP address with the port specified above (8080), so http://localhost:8080/.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/blogs/jupyter-hub-on-k8s/p1-jh-login.png&#34; alt=&#34;JupyterHub login screen&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Congratulations! You are now ready to consume the service you have created and developed using Python Jupyter Notebooks running on JupyterHub on Kubernetes. In &lt;a href=&#34;/blog/data-science-with-python-jupyterhub-on-kubernetes-part-2/&#34;&gt;Part 2 of this series&lt;/a&gt;, we will focus on how to use JupyterHub and use Jupyter Notebooks on Kubernetes.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Data: VMware Tanzu SQL, Now GA for Kubernetes: A Consistent Postgres Experience Everywhere</title>
      
      <link>/data/tanzu-sql/blog/tanzu-sql-now-on-k8s/</link>
      <pubDate>Tue, 10 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/data/tanzu-sql/blog/tanzu-sql-now-on-k8s/</guid>
      <description>

        
        &lt;p&gt;Data services—such as caches, messaging queues, and relational databases—are the backbone of applications. And when it comes to relational databases, Postgres is a pretty popular option. &lt;a href=&#34;https://tanzu.vmware.com/content/blog/pivotal-postgres&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Its killer feature is its versatility&lt;/a&gt;. Natively and through plugins, Postgres supports a wide variety of data types, formats, and programming languages, which makes it useful for all kinds of applications, including text, geospatial, graph, and more. With Postgres, organizations have the potential to reduce the need for specialized databases, decreasing operational overhead.&lt;/p&gt;
&lt;p&gt;To run Postgres effectively, you need higher availability, instant scalability, operational simplicity, and the ability to run on-premises and across clouds. Perhaps most importantly, you need Postgres delivered on-demand via self-service. The idea of requesting an instance via a ticket is a non-starter these days.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://tanzu.vmware.com/content/vmware-tanzu-sql/vmware-tanzu-sql-now-ga-kubernetes-postgres&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Read More&amp;hellip;&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>SpringOne Tour: SpringOne Tour December</title>
      
      <link>/tv/springone-tour/0021/</link>
      <pubDate>Wed, 08 Dec 2021 10:00:00 -0800</pubDate>
      
      <guid>/tv/springone-tour/0021/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/springone-tour/Tour-December.png" width="640" />]]>
        
        
      </description>
    </item>
    
    <item>
      
      <title>SpringOne Tour: SpringOne Tour November EMEA</title>
      
      <link>/tv/springone-tour/0020/</link>
      <pubDate>Wed, 17 Nov 2021 10:00:00 -0800</pubDate>
      
      <guid>/tv/springone-tour/0020/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/springone-tour/Tour-November.png" width="640" />]]>
        
        
      </description>
    </item>
    
    <item>
      
      <title>Between Chair and Keyboard: The one with Baruch Sadogursky</title>
      
      <link>/tv/bcak/30/</link>
      <pubDate>Mon, 30 Aug 2021 10:00:00 -0700</pubDate>
      
      <guid>/tv/bcak/30/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/bcak/30-update.png" width="640" />]]>
        
        &lt;p&gt;Please join Nate Schutta and Baruch Sadogursky, (a.k.a JBaruch), the Head of DevOps Advocacy and a Developer Advocate at JFrog. His passion is speaking about technology. Well, speaking in general, but doing it about technology makes him look smart, and 19 years of hi-tech experience sure helps. When he’s not on stage (or on a plane to get there), he learns about technology, people and how they work, or more precisely, don’t work together.  He is a co-author of the Liquid Software book, a CNCF ambassador and a passionate conference speaker on DevOps, DevSecOps, digital transformation, containers and cloud-native, artifact management, and other topics, and is a regular at the industry’s most prestigious events including KubeCon, DockerCon, Devoxx, DevOps Days, OSCON, Qcon, JavaOne and many others. You can see some of his talks at jfrog.com/shownotes&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Between Chair and Keyboard: The one with Sharat Chander</title>
      
      <link>/tv/bcak/36/</link>
      <pubDate>Mon, 26 Jul 2021 10:00:00 -0700</pubDate>
      
      <guid>/tv/bcak/36/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/bcak/36.jpg" width="640" />]]>
        
        &lt;p&gt;Please join Nate Schutta and guest Sharat Chander. Sharat has worked in the IT industry for 25 years for firms including Bell Atlantic, Verizon, Sun Microsystems, and Oracle. His background and technical specialty is in Java development tools, graphics design, and product/community management. Sharat has been actively involved in the Java community for 20 years by helping drive greater awareness, acceptance, adoption, and advocacy of Java and related technologies. As Oracle’s Director of Java Product Management and Developer Engagement, Sharat leads Java advocacy efforts throughout the world. He is a frequent keynote speaker and participant in developer programs worldwide. When not growing visibility for Java, Sharat follows his passion for baseball by actively coaching Little League baseball teams and fanatically following his hometown Baltimore Orioles. You can find Sharat at multiple global developer events, as well as follow him on Twitter: @Sharat_Chander&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Between Chair and Keyboard: The one with Aasta Frascati-Robinson</title>
      
      <link>/tv/bcak/35/</link>
      <pubDate>Mon, 19 Jul 2021 10:00:00 -0700</pubDate>
      
      <guid>/tv/bcak/35/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/bcak/35.jpg" width="640" />]]>
        
        &lt;p&gt;Please join Nate Schutta and guest Aasta Frascati-Robinson, who likes to make things with fun people. Brainstorming together, picking up whatever we need to make it happen makes for great days. My creative work draws from the beauty of many different emotions in life and celebrating the unique perspectives we all bring to it. Be it smiles, tears, or the many in betweens, feeling is where it’s at. I work best in exploratory environments that foster creativity with a people-first mentality, open to action to address diverse team needs. The most fun projects I’ve worked on have involved communities, many mediums, learning new things, and an energetic atmosphere with awesome people. Feel free to contact to collaborate. :)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Cloud Stream by VMware: Multi Cloud Career Growth From Sysadmin to VP the Journey Ahead</title>
      
      <link>/tv/cloud-stream/0004/</link>
      <pubDate>Fri, 16 Jul 2021 07:00:00 -0700</pubDate>
      
      <guid>/tv/cloud-stream/0004/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/cloud-stream/0004.jpg" width="640" />]]>
        
        &lt;p&gt;Multi Cloud Career Growth: From Sysadmin to VP the Journey Ahead &amp;gt; Andy&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>SpringOne Tour: Do or Do Not, There is No Try{} in Production</title>
      
      <link>/tv/springone-tour/0018/</link>
      <pubDate>Wed, 14 Jul 2021 10:00:00 -0700</pubDate>
      
      <guid>/tv/springone-tour/0018/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/springone-tour/S1T-Twitter-FB-July.png" width="640" />]]>
        
        &lt;h3 id=&#34;day-1-livestream&#34;&gt;Day 1 Livestream&lt;/h3&gt;
&lt;div class=&#39;flex align-items-center&#39;&gt;
	&lt;h5&gt;July 14 &amp;bullet; 10:00 AM&amp;ndash;12:00 PM PT
	&lt;!-- &lt;strong&gt;&lt;a class=&#39;ml-3 lightbox&#39; href=&#39;#day-1-reminder&#39;&gt;&lt;i class=&#39;fa fa-calendar-check mr-1&#39;&gt;&lt;/i&gt;Add to calendar&lt;/a&gt;&lt;/strong&gt; --&gt;
	&lt;/h5&gt;
&lt;/div&gt;
&lt;p&gt;You’ve arrived at production, the happiest place on earth! But as you’re finishing up your celebratory cup of coffee, management bursts through the door: “We have new requirements!” And so the cycle continues; change the only constant.&lt;/p&gt;
&lt;p&gt;In this episode, learn how to safely modify your code through testing, so you can take your application from check-in to “hey, check that out!”&lt;/p&gt;
&lt;p&gt;&lt;a class=&#39;btn mt-2&#39; href=&#39;https://www.twitch.tv/vmwaretanzu&#39;&gt;Watch Day 1 on Twitch&lt;/a&gt;&lt;/p&gt;
&lt;!-- &lt;div id=&#39;day-1-reminder&#39; class=&#39;p-5&#39; style=&#39;display: none&#39;&gt;
	&lt;h3 class=&#39;-text-white mb-3 text-center&#39;&gt;Add to calendar&lt;/h3&gt;
  &lt;div class=&#39;d-flex jc-between&#39;&gt;
      &lt;script type=&#34;text/javascript&#34;&gt;
          cal_single = ics();
          cal_single.addEvent(&#39;Do or Do Not, There is No Try{} in Production on Twitch&#39;, &#39;https://www.twitch.tv/vmwaretanzu&#39;, &#39;Twitch&#39;, &#39;07/14/2021 10:00 am PDT&#39;, &#39;07/14/2021 12:00 pm PDT&#39;);
      &lt;/script&gt;
      &lt;a href=&#34;#&#34;
         onclick=&#34;javascript:cal_single.download(&#39;Do or Do Not, There is No Try\{\} in Production Day 1 on Twitch&#39;)&#34;
         class=&#39;btn mr-2 mb-2&#39;&gt;Outlook/iCal&lt;/a&gt; &lt;a
          href=&#34;https://www.google.com/calendar/render?action=TEMPLATE&amp;text=Do+or+Do+Not%2C+There+is+No+Try%7B%7D+in+Production+Day+1+Livestream&amp;details=https%3A%2F%2Fwww.twitch.tv%2Fvmwaretanzu&amp;dates=20210714T170000Z%2F20210714T190000Z&#34;
          class=&#39;btn mb-2&#39;&gt;Google Calendar&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt; --&gt;
&lt;br&gt;
&lt;h3 id=&#34;day-2-workshop&#34;&gt;Day 2 Workshop&lt;/h3&gt;
&lt;h5 id=&#34;july-15-bullet-1000-amndash130-pm-pt&#34;&gt;July 15 • 10:00 AM–1:30 PM PT&lt;/h5&gt;
&lt;p&gt;Join us for a hands-on session covering unit and integration testing techniques using Spring Boot, API contracts, database schema management, and testcontainers, followed by a Kubernetes-native build &amp;amp; deploy supply chain powered by kpack and ArgoCD. You’ll have your own test environment so you can follow along as we work through the deployment of a microservice-based application.&lt;/p&gt;
&lt;!-- &lt;a class=&#39;btn mt-2 lightbox&#39; href=&#39;#register&#39;&gt;Register for Workshop&lt;/a&gt;

&lt;div id=&#34;register&#34; class=&#39;p-5&#39; style=&#34;display:none&#34;&gt;
	&lt;h3 class=&#39;-text-white mb-3 hide&#39;&gt;Register&lt;/h3&gt;
	&lt;script src=&#34;https://connect.tanzu.vmware.com/js/forms2/js/forms2.min.js&#34;&gt;&lt;/script&gt;
	&lt;form id=&#34;mktoForm_8250&#34;&gt;&lt;/form&gt;
	&lt;script&gt;
	  MktoForms2.setOptions({formXDPath : &#34;/rs/pivotal/images/marketo-xdframe-relative.html&#34;});
	  MktoForms2.loadForm(&#34;https://connect.tanzu.vmware.com&#34;, &#34;625-IUJ-009&#34;, 8250, function(form){
			form.onSuccess(function(values, followUpUrl) {
				form.getFormElem().hide();
				$(&#39;.hide&#39;).hide();
				$(&#39;.confirmation&#39;).show();
				return false;
			});
	  });
	&lt;/script&gt;
	&lt;div class=&#39;confirmation&#39; style=&#34;display:none&#34;&gt;
		&lt;h3 class=&#34;-text-white mt-0&#34;&gt;Thank you!&lt;/h3&gt;
		&lt;p&gt;Join us on July 15 using this link:&lt;br/&gt; &lt;span class=&#39;-text-white zoom-link&#39;&gt;https://VMware.zoom.us/j/98899426924?pwd=ejhNczJ1cFNmejNtM1ZsSzhKbVgrQT09&lt;/span&gt;&lt;/p&gt;
		&lt;p&gt;
			&lt;strong&gt;Add this workshop to your calendar:&lt;/strong&gt;
			&lt;br/&gt;
			&lt;strong&gt;
	      &lt;script type=&#34;text/javascript&#34;&gt;
	          cal_single2 = ics();
	          cal_single2.addEvent(&#39;Do or Do Not, There is No Try\{\} in Production Workshop&#39;, &#39;https://VMware.zoom.us/j/98899426924?pwd=ejhNczJ1cFNmejNtM1ZsSzhKbVgrQT09&#39;, &#39;Zoom&#39;, &#39;07/15/2021 10:00 am PDT&#39;, &#39;07/15/2021 1:30 pm PDT&#39;);
	      &lt;/script&gt;
				&lt;a href=&#34;#&#34; onclick=&#34;javascript:cal_single2.download(&#39;Do or Do Not, There is No Try\{\} in Production Day 2 Workshop&#39;)&#34;&gt;Outlook/iCal&lt;/a&gt;
	      &amp;nbsp;&amp;bullet;&amp;nbsp;
	      &lt;a href=&#34;https://www.google.com/calendar/render?action=TEMPLATE&amp;text=Do+or+Do+Not%2C+There+is+No+Try%7B%7D+in+Production+Day+2+Workshop&amp;details=https%3A%2F%2FVMware.zoom.us%2Fj%2F98899426924%3Fpwd%3DejhNczJ1cFNmejNtM1ZsSzhKbVgrQT09&amp;dates=20210715T170000Z%2F20210715T203000Z&#34;&gt;Google&lt;/a&gt;
	    &lt;/strong&gt;
	  &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt; --&gt;&lt;blockquote&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Tuesdays: Self-signed JWTs: Dos and Don&#39;ts with Josh Cummings</title>
      
      <link>/tv/tanzu-tuesdays/0061/</link>
      <pubDate>Tue, 13 Jul 2021 12:00:00 -0700</pubDate>
      
      <guid>/tv/tanzu-tuesdays/0061/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/tanzu-tuesdays/0061.png" width="640" />]]>
        
        &lt;p&gt;If you are securing a REST API with JWTs, chances are you either 1. use an authorization server or 2. have read countless variations on how a REST API can mint its own JWTs. Is this a good idea? If so, how should you go about doing it? In this talk, we&amp;rsquo;ll start with an unsecured REST API and review the trade-offs of having it use self-signed JWTs. By the end, you&amp;rsquo;ll have a better idea whether this is an option for you.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Between Chair and Keyboard: The one with Sam Newman</title>
      
      <link>/tv/bcak/34/</link>
      <pubDate>Mon, 12 Jul 2021 10:00:00 -0700</pubDate>
      
      <guid>/tv/bcak/34/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/bcak/34.jpg" width="640" />]]>
        
        &lt;p&gt;Please join Nate Schutta and guest Sam Newman, author, speaker, and independent consultant interested in cloud, continuous delivery and microservices. Aside from other things I&amp;rsquo;ve spoken at more than a few conferences, and wrote some things including the books Building Microservices and Monolith To Microservices for O&amp;rsquo;Reilly.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>TGIK: TGI Kubernetes 159: Exploring Kuberhealthy</title>
      
      <link>/tv/tgik/159/</link>
      <pubDate>Fri, 09 Jul 2021 20:00:00 +0000</pubDate>
      
      <guid>/tv/tgik/159/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/tgik/159.jpg" width="640" />]]>
        
        &lt;p&gt;Notes: &lt;a href=&#34;https://github.com/vmware-tanzu/tgik/tree/master/episodes/159&#34;&gt;https://github.com/vmware-tanzu/tgik/tree/master/episodes/159&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;00:04:47 - Welcome to TGIK!&lt;/li&gt;
&lt;li&gt;00:07:20 - Week in Review&lt;/li&gt;
&lt;li&gt;00:25:28 - Looking at Kuberhealthy&lt;/li&gt;
&lt;li&gt;00:28:59 - Installing Kuberhealthy&lt;/li&gt;
&lt;li&gt;00:43:27 - Connecting to console&lt;/li&gt;
&lt;li&gt;00:50:26 - Finding prom metrics (`/metrics&#39;)&lt;/li&gt;
&lt;li&gt;00:55:15 - Exploring external checks&lt;/li&gt;
&lt;li&gt;01:01:11 - Creating your own checks&lt;/li&gt;
&lt;li&gt;01:03:28 - Continuing to debug cross-namespace checks&lt;/li&gt;
&lt;li&gt;01:10:12 - Looking at HTTP Check&lt;/li&gt;
&lt;li&gt;01:13:16 - Debugging and filing bug&lt;/li&gt;
&lt;li&gt;01:48:22 - Wrapping up&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Come hang out with Joe Beda (@jbeda) as he explores something new in the Kubernetes ecosystem.  Hang out as we explore something NEW for the first time.&lt;/p&gt;
&lt;p&gt;Continuing the CNCF sandbox series, this week we will be looking at kuberhealthy! (&lt;a href=&#34;https://github.com/kuberhealthy/kuberhealthy&#34;&gt;https://github.com/kuberhealthy/kuberhealthy&lt;/a&gt;)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Cloud Stream by VMware: Multi Cloud Career Growth Career Perspectives from Sysadmin to Solution Engineer</title>
      
      <link>/tv/cloud-stream/0003/</link>
      <pubDate>Fri, 09 Jul 2021 07:00:00 -0700</pubDate>
      
      <guid>/tv/cloud-stream/0003/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/cloud-stream/0003.jpg" width="640" />]]>
        
        &lt;p&gt;Multi Cloud Career Growth: Career Perspectives from Sysadmin to Solution Engineer the Journey Ahead &amp;gt; With Jeff Schroeder&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Talk: Tanzu Talk: what is Tanzu? A quick overview of VMware&#39;s kubernetes distros and suites</title>
      
      <link>/tv/talk/95/</link>
      <pubDate>Thu, 08 Jul 2021 08:47:34 +0000</pubDate>
      
      <guid>/tv/talk/95/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/talk/95.jpg" width="640" />]]>
        
        &lt;p&gt;Coté tells you how he thinks of the different Tanzu editions.&lt;/p&gt;
&lt;p&gt;See them all here: &lt;a href=&#34;https://tanzu.vmware.com/tanzu/compare&#34;&gt;https://tanzu.vmware.com/tanzu/compare&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Archives and free books: &lt;a href=&#34;https://www.tanzutalk.com&#34;&gt;https://www.tanzutalk.com&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Tuesdays: There&#39;s an Impostor Among Us</title>
      
      <link>/tv/tanzu-tuesdays/0060/</link>
      <pubDate>Tue, 06 Jul 2021 12:00:00 -0700</pubDate>
      
      <guid>/tv/tanzu-tuesdays/0060/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/tanzu-tuesdays/among-us.png" width="640" />]]>
        
        &lt;p&gt;We&amp;rsquo;re going to play Among Us!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Talk: Ambient Tanzu - Executives as Architects, DevOps Metrics in 20 Minutes</title>
      
      <link>/tv/talk/94/</link>
      <pubDate>Tue, 06 Jul 2021 10:12:18 +0000</pubDate>
      
      <guid>/tv/talk/94/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/talk/94.jpg" width="640" />]]>
        
        
      </description>
    </item>
    
    <item>
      
      <title>Cloud Stream by VMware: Partner Perspectives Multi-Cloud Deployments &amp; Career Growth - Mentorship, Leading a Change in Technology Strategy</title>
      
      <link>/tv/cloud-stream/0002/</link>
      <pubDate>Fri, 02 Jul 2021 07:00:00 -0700</pubDate>
      
      <guid>/tv/cloud-stream/0002/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/cloud-stream/0002.jpg" width="640" />]]>
        
        &lt;p&gt;Join the Cloud Stream for a discussion with John Fiscus of Lumen: For Multi Cloud Deployments &amp;amp; Career Growth: Mentorship, Leading a Change in Technology Strategy&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Blog: Kubernetes Operators: Should You Use Them?</title>
      
      <link>/blog/kubernetes-operators-should-you-use-them/</link>
      <pubDate>Fri, 02 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/kubernetes-operators-should-you-use-them/</guid>
      <description>

        
        &lt;p&gt;Kubernetes is the leading trendsetter in the future of autonomous software, having made it possible for companies throughout the world to experience a tremendous reduction in human toil when it comes to all types of software management and deployment.&lt;/p&gt;
&lt;p&gt;Kubernetes has a reputation for being a complex software system with high startup costs and an intense learning curve, yet it remains steadfastly popular among companies that made the initial investment and immediately started reaping the benefits of improved efficiency and effectiveness in delivering automated, on-demand software that accelerates time-to-value.&lt;/p&gt;
&lt;p&gt;Many of the companies that made the lucrative decision to choose Kubernetes as a distributed software system to manage their applications quickly recognized the value of expanding the power of their Kubernetes ecosystem through Kubernetes operators that reduce operational toil in platform services and tenant workloads.&lt;/p&gt;
&lt;h2 id=&#34;reduce-operational-toil-with-kubernetes-operators&#34;&gt;Reduce operational toil with Kubernetes operators&lt;/h2&gt;
&lt;p&gt;You can leverage Kubernetes operators to accomplish all types of automated tasks, including software deployments, management, troubleshooting and updates through custom resources to define the state of the system, and custom controllers to reconcile the existing state of the system with the desired state of the system defined in the custom resource.&lt;/p&gt;
&lt;p&gt;There’s also an impressive assortment of Kubernetes operators developed by contributing members of the Kubernetes community that are freely available. For more information, see &lt;a href=&#34;https://operatorhub.io/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;OperatorHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Kubernetes operators use level-triggered logic to bring about the desired state that you defined in custom resources by continually looping through the system until it is able to reconcile the desired state. A Kubernetes operator never quits working until it completes its directive. For example, when a Kubernetes operator encounters an unexpected condition, it doesn’t crash or fail, but stays-on-course, continually looping until the condition is remedied and it is able to successfully accomplish the desired state.&lt;/p&gt;
&lt;h2 id=&#34;is-the-upfront-engineering-effort-to-learn-kubernetes-worth-the-cost&#34;&gt;Is the upfront engineering effort to learn kubernetes worth the cost?&lt;/h2&gt;
&lt;p&gt;The upfront cost for building Kubernetes operators is the engineering effort that it’s going to take to learn Kubernetes and to build the software that will extend its control plane. The cost for the engineering effort is going to vary, depending on the Kubernetes experience of the engineers and your company’s use-cases. This will determine the number of engineering hours required to get an operator into production. The important thing to remember is your company is going to start saving money from a reduction in operational toil the moment the Kubernetes operator starts managing your software.&lt;/p&gt;
&lt;p&gt;The key to justify the upfront cost is to compare the engineering effort against the savings your company will immediately incur from the reduction in end-user operational toil. One way to find this out is to apply Kubernetes engineering principles to your use-cases. If the outcomes show a considerable reduction in operational toil from your end-users, the decision to invest in the upfront engineering effort is a wise one.&lt;/p&gt;
&lt;h3 id=&#34;alternative-solutions&#34;&gt;Alternative solutions&lt;/h3&gt;
&lt;p&gt;There are use-cases where a company does not need the immense power of a Kubernetes operator, and where the upfront engineering effort to learn Kubernetes is not worth the investment. An example would be if your company has a small number of workloads to deploy. In this case, it would be more efficient for you to use a template or an overlay because the barrier to user entry for both is very low. Do not incur the overhead of complexity where it is not justified by business requirements.&lt;/p&gt;
&lt;h2 id=&#34;use-case-examples&#34;&gt;Use-case examples&lt;/h2&gt;
&lt;p&gt;The following are examples of use-cases that show the benefits of building Kubernetes operators.&lt;/p&gt;
&lt;h3 id=&#34;platform-services&#34;&gt;Platform services&lt;/h3&gt;
&lt;p&gt;If your company uses platform services to manage cluster add-ons like ingress and monitoring, or applications to manage company and community supported workloads, the upfront cost of building Kubernetes operators is going to yield an immediate, on-going, long-term investment.&lt;/p&gt;
&lt;p&gt;Kubernetes operators are often leveraged in production to run various platform service cluster add-ons. Often, you can make use of community-supported projects like the Prometheus Operator for app metrics or Cert-Manager to help manage Transport Layer Security (TLS) assets.&lt;/p&gt;
&lt;p&gt;Using Kubernetes operators to fulfill platform services usually offers the most efficient and resilient solution since it is native to the Kubernetes substrate and uses the same engineering principles that make the system stable, self-healing and extendable.&lt;/p&gt;
&lt;h3 id=&#34;tenant-workload&#34;&gt;Tenant workload&lt;/h3&gt;
&lt;p&gt;Tenant workloads with the largest teams and the most involved architecture will benefit most from Kubernetes operators. You’ll see immediate benefits once you identify the tenant workloads where the most engineering time is spent in routine toil around deployment and maintenance that Kubernetes operators can autonomously take over for your end-users.&lt;/p&gt;
&lt;h3 id=&#34;in-house-software&#34;&gt;In-house software&lt;/h3&gt;
&lt;p&gt;There is no limit as to the amount or type of software Kubernetes operators can manage for your business. This includes in-house software that Kubernetes operators autonomously control, freeing-up time for your developers to focus on website updates and fixing existing issues. In-house software is any application developed by your company, for your company. Examples of in-house software include a billing app for an online store, a customer database for an emergency alert system, an inventory management software for an online pharmacy, and an online scheduling tool for a hospital. Any online business that provides Software as a Service (SaaS) can manage their business more efficiently and reliably with Kubernetes operators.&lt;/p&gt;
&lt;h2 id=&#34;theres-a-proper-way-to-build-kubernetes-operators&#34;&gt;There’s a proper way to build Kubernetes operators&lt;/h2&gt;
&lt;p&gt;The articles that you read about Kubernetes operators being hard to build are true. That’s why Kubernetes training and experience are essential. If you try to build one without understanding Kubernetes, you’re more likely to create problems that diminish the instant time-to-value savings that your company would have realized had the Kubernetes operator been built properly on Kubernetes engineering principles.&lt;/p&gt;
&lt;h2 id=&#34;affordable-kubernetes-training&#34;&gt;Affordable Kubernetes training&lt;/h2&gt;
&lt;p&gt;If the cost of Kubernetes training is a concern for your company, there is a viable, and fun solution. One of the more popular, affordable ways to learn how to build Kubernetes operators is to join the &lt;a href=&#34;https://kubernetes.io/community/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Kubernetes community&lt;/a&gt;, where you’ll find a myriad of support from new and experienced users and contributors who share advice, use-cases and bug fixes that make the complexity of learning Kubernetes a lot less intimidating, and much more manageable.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Talk: Tanzu Talk: Beyond DevOps metrics – technical, business, &amp; culture metrics</title>
      
      <link>/tv/talk/93/</link>
      <pubDate>Thu, 01 Jul 2021 12:09:40 +0000</pubDate>
      
      <guid>/tv/talk/93/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/talk/93.jpg" width="640" />]]>
        
        &lt;p&gt;In this talk, you’ll hear about three types of metrics that organizations are using to get better at building and running software. You know, those organizations that are doing the “digital transformation” thing so that they can run their business with software that isn’t ancient and lame.
Be like a tech company! We all know development and operations metrics like lead time, error budgets, and mean time to repair. But we don’t focus on business metrics enough. And least of all, we don’t talk about internal, organization, or “culture” metrics enough. This talk gives an overview of 15 metrics across three types: technical metrics, business metrics, and culture metrics. If we look at the end-to-end process of software creation, usage, and work as a system to be programmed and refined, we need metrics across that entire system.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Code: Newly Native with Josh Long</title>
      
      <link>/tv/code/0036/</link>
      <pubDate>Wed, 30 Jun 2021 12:00:00 -0700</pubDate>
      
      <guid>/tv/code/0036/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/code/josh-long.jpg" width="640" />]]>
        
        &lt;p&gt;In this session, we’re going to explore some new possibilities for native Spring Boot applications with Spring Native and GraalVM. we’ll look at using the Exposed ORM for Kotlin; Spring Integration; and the Okta Spring Boot starter. It’ll be fun. And we might even explore some of the new bits in Spring Integration 5.5, while we’re at it.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Tuesdays: Creating Images the Easy Way - Cloud Native Buildpacks with Daniel Mikusa</title>
      
      <link>/tv/tanzu-tuesdays/0059/</link>
      <pubDate>Tue, 29 Jun 2021 12:00:00 -0700</pubDate>
      
      <guid>/tv/tanzu-tuesdays/0059/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/tanzu-tuesdays/0059.png" width="640" />]]>
        
        &lt;p&gt;Buildpacks are a pluggable, modular, language-agnostic tool that takes application source code and gives you an OCI (Open Container Initiative) image that you can run using Docker, Kubernetes, or your OCI Runtime of choice. Tired of writing and maintaining Dockerfiles and vetting base images? Unsure how that monitoring or security agent needs to be installed? Feeling pressure from your Security team about your images? Just want to get back to coding? Buildpacks have you covered. You write code and buildpacks take care of the rest. Don&amp;rsquo;t believe it? Come check out this session, which will take you from doing things the hard way to doing them the buildpacks way.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Between Chair and Keyboard: The one with Spencer Gibb</title>
      
      <link>/tv/bcak/33/</link>
      <pubDate>Mon, 28 Jun 2021 10:00:00 -0700</pubDate>
      
      <guid>/tv/bcak/33/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/bcak/33.jpg" width="640" />]]>
        
        &lt;p&gt;Please join Nate Schutta and guest Spencer Gibb, a Software Engineer at VMware, where he is the co-founder and lead of the Spring Cloud Core projects. His interests include distributed systems, JVM languages, web services frameworks, message-driven architectures, and making software development simpler. His blog is located at &lt;a href=&#34;https://gibb.tech&#34;&gt;https://gibb.tech&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>TGIK: TGI Kubernetes 158: Bare metal clusters with Cluster API Tinkerbell</title>
      
      <link>/tv/tgik/158/</link>
      <pubDate>Fri, 25 Jun 2021 20:00:00 +0000</pubDate>
      
      <guid>/tv/tgik/158/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/tgik/158.jpg" width="640" />]]>
        
        &lt;p&gt;Join Naadir Jeewa with guest Jason DeTiberus from Equinix Metal as we explore Cluster API Tinkerbell &lt;a href=&#34;https://tinkerbell.org/&#34;&gt;https://tinkerbell.org/&lt;/a&gt; for automated, declarative deployment of Kubernetes clusters on bare metal infrastructure.&lt;/p&gt;
&lt;p&gt;Notes: &lt;a href=&#34;https://hackmd.io/@randomvariable/HJ1Kiql3O&#34;&gt;https://hackmd.io/@randomvariable/HJ1Kiql3O&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Photo by Callum Whale: &lt;a href=&#34;https://unsplash.com/photos/3pH7TxHU6gw&#34;&gt;https://unsplash.com/photos/3pH7TxHU6gw&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Cloud Stream by VMware: Meet the team behind VMware Cloud</title>
      
      <link>/tv/cloud-stream/0001/</link>
      <pubDate>Fri, 25 Jun 2021 07:00:00 -0700</pubDate>
      
      <guid>/tv/cloud-stream/0001/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/cloud-stream/0001.jpg" width="640" />]]>
        
        &lt;p&gt;Join the Cloud Stream team for our first episode.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Talk: Tanzu Talk: Transformation Requires Trying New Things</title>
      
      <link>/tv/talk/92/</link>
      <pubDate>Thu, 24 Jun 2021 10:33:22 +0000</pubDate>
      
      <guid>/tv/talk/92/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/talk/92.jpg" width="640" />]]>
        
        &lt;p&gt;Just a reminder: if you want to change how your organization functions, you need to try new things. Time spent just optimizing and removing costs doesn&amp;rsquo;t change anything.&lt;/p&gt;
&lt;p&gt;Free book: &lt;a href=&#34;https://tanzu.vmware.com/content/ebooks/changing-mindsets-the-missing-ingredient-to-digital-transformation?utm_source=cote&amp;amp;utm_medium=video&amp;amp;utm_campaign=TanzuTalk&amp;amp;utm_content=tryingnewthings&#34;&gt;https://tanzu.vmware.com/content/ebooks/changing-mindsets-the-missing-ingredient-to-digital-transformation?utm_source=cote&amp;amp;utm_medium=video&amp;amp;utm_campaign=TanzuTalk&amp;amp;utm_content=tryingnewthings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Archives &amp;amp; more: &lt;a href=&#34;https://www.tanzutalk.com/videos&#34;&gt;https://www.tanzutalk.com/videos&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Code: OpenID Connect with Spring cloud Gateway with Mario Gray</title>
      
      <link>/tv/code/0035/</link>
      <pubDate>Wed, 23 Jun 2021 12:00:00 -0700</pubDate>
      
      <guid>/tv/code/0035/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/code/mario-gray.png" width="640" />]]>
        
        &lt;p&gt;This episode features a user-facing service needing authentication. Using Spring Cloud Gateway, we can fulfill OAuth connect with a userDetails service and authorization against downstream back end micro services.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Tuesdays: The road to Native Images – what can trip me up? With Dan Dobrin</title>
      
      <link>/tv/tanzu-tuesdays/0058/</link>
      <pubDate>Tue, 22 Jun 2021 12:00:00 -0700</pubDate>
      
      <guid>/tv/tanzu-tuesdays/0058/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/tanzu-tuesdays/0058.png" width="640" />]]>
        
        &lt;p&gt;Increased cloud adoption by deploying modern apps in K8s opens up entire new sets of use-cases for enterprises on a constant basis. Hence the need to create lightweight and efficient containers that start almost instantly and consume less memory and CPU by orders of magnitude.&lt;/p&gt;
&lt;p&gt;Native Images are the next chapter of Spring’s innovation journey in the K8s world. Can Spring Native with GraalVM make the migration to native images seamless? Is there anything that could potentially trip us up? What do we need to know when migrating apps to native? Can we learn to write better Java code in the process?&lt;/p&gt;
&lt;p&gt;Let’s answer these questions by looking into:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How does Just-in-time vs Ahead-of-time compilation compare?&lt;/li&gt;
&lt;li&gt;Understanding Runtime vs Build-Time Class Initialization for Spring Native Images&lt;/li&gt;
&lt;li&gt;Ahead-of-time compilation limitations - what do I need to know and how is Spring Native helping me to mitigate them?&lt;/li&gt;
&lt;li&gt;What&amp;rsquo;s working differently for some of the Java’s features in Native Images?&lt;/li&gt;
&lt;li&gt;Can we learn to write better Java code in the process?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As developers we learn by example … let&amp;rsquo;s use some practical ones&amp;hellip; then explore the topic further at our leisure with a comprehensive set as reference&amp;hellip;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Talk: Tanzu Talk: Best Practices for Running Containers and Kubernetes in Production, report read through</title>
      
      <link>/tv/talk/91/</link>
      <pubDate>Tue, 22 Jun 2021 08:30:00 +0000</pubDate>
      
      <guid>/tv/talk/91/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/talk/91.jpg" width="640" />]]>
        
        &lt;p&gt;Putting together your big ol&#39; kubernetes strategy? In today&amp;rsquo;s Tanzu Talk I go over a Gartner paper on exactly that.&lt;/p&gt;
&lt;p&gt;Report: &lt;a href=&#34;https://tanzu.vmware.com/content/analyst-reports/best-practices-for-running-containers-and-kubernetes-in-production?utm_source=cote&amp;amp;utm_medium=video&amp;amp;utm_campaign=TanzuTalk&amp;amp;utm_content=gartnerk8stips&#34;&gt;https://tanzu.vmware.com/content/analyst-reports/best-practices-for-running-containers-and-kubernetes-in-production?utm_source=cote&amp;amp;utm_medium=video&amp;amp;utm_campaign=TanzuTalk&amp;amp;utm_content=gartnerk8stips&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Between Chair and Keyboard: The one with Kat Cosgrove</title>
      
      <link>/tv/bcak/32/</link>
      <pubDate>Mon, 21 Jun 2021 10:00:00 -0700</pubDate>
      
      <guid>/tv/bcak/32/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/bcak/32.jpg" width="640" />]]>
        
        &lt;p&gt;Please join Nate Schutta and guest Kat Cosgrove, a Developer Advocate and an actual cyborg. Her professional background has run the gamut from bartender, to video store clerk, to teacher, to software developer. She credits this wide-ranging experience for her success as a speaker, developer, and advocate. Her specialty is approachable 101-level content for junior developers or anyone else who considers themselves a newbie, with a particular focus on DevOps. When she&amp;rsquo;s not building demos or at a conference, she spends her time playing video games, watching horror movies, and reading science fiction. She lives in Seattle with her cat, Espresso, who is the real brains behind the operation and actually ghostwriting all of her tweets.&amp;quot;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Talk: Tanzu Talk: How to Prep for a Talk You&#39;ve Given Before</title>
      
      <link>/tv/talk/90/</link>
      <pubDate>Mon, 21 Jun 2021 09:50:11 +0000</pubDate>
      
      <guid>/tv/talk/90/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/talk/90.jpg" width="640" />]]>
        
        
      </description>
    </item>
    
    <item>
      
      <title>Code: Event-Driven Architecture Traps with Jakub Pilimon</title>
      
      <link>/tv/code/0034/</link>
      <pubDate>Wed, 16 Jun 2021 12:00:00 -0700</pubDate>
      
      <guid>/tv/code/0034/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/code/jakub-pilimon.jpg" width="640" />]]>
        
        &lt;p&gt;Event-driven architectures (EDA) have become more popular by the day. Organizations see a great value in them, and developers love how EDA help to grow, scale, and mirror what really happens in the business domain. However, most developers are not familiar with this kind of architecture, which can lead to common pitfalls that we’ll examine in this talk&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Tuesdays: Spring Boot loves Tanzu Observability with Madhura Bhave &amp; Stéphane Nicoll</title>
      
      <link>/tv/tanzu-tuesdays/0057/</link>
      <pubDate>Tue, 15 Jun 2021 12:00:00 -0700</pubDate>
      
      <guid>/tv/tanzu-tuesdays/0057/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/tanzu-tuesdays/0057.png" width="640" />]]>
        
        &lt;p&gt;As application developers we spend a lot of time thinking of ways to improve the efficiency of our web application. We could completely rewrite it, leverage more concurrency and even add reactive features. But how do we know if it is more efficient if we don&amp;rsquo;t measure and track relevant metrics? Once the application is pushed to production, we might also need to monitor the status of external services that the application relies on. For easy consumption of such metrics, being able to visualize them on a dashboard may make understanding the application behavior easier. In this talk, we will cover how metrics collected by a Spring Boot application can be sent to Tanzu Observability (Wavefront) using the Wavefront Spring Boot starter. Using a WebFlux demo application, we will go over out-of-the-box metrics, add custom metrics and look at how a slow remote service can be detected. We will also look at sending trace data to Wavefront.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>SpringOne Tour: Booternetes II: The YAML Strikes Back (Europe)</title>
      
      <link>/tv/springone-tour/0017/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 -0700</pubDate>
      
      <guid>/tv/springone-tour/0017/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/springone-tour/S1T-BootII-Europe-FB-TW.png" width="640" />]]>
        
        &lt;div class=&#39;flex align-items-center&#39;&gt;
	&lt;h5&gt;June 15 &amp;bullet; 09:00&amp;ndash;13:15 CEST&lt;/h5&gt;
&lt;/div&gt;
&lt;p&gt;As Luke started his Jedi training, he realized he wasn’t on Tatooine anymore; he was now part of a larger system, the Force. In this installment of SpringOne Tour, we’re going to teach our cloud native Spring Boot applications how to wield the Force by building on abstractions that know about and incorporate Kubernetes itself.&lt;/p&gt;
&lt;p&gt;Join VMware Tanzu team members Michael Coté, Olga Maciaszek-Sharma, and Marcin Grzejszczak for Booternetes II: The YAML Strikes Back. (And yes, that’s #booternetes.)&lt;/p&gt;
&lt;p&gt;And, stick around for Tanzu team members and experts Jakub Pilimon, Jonatan Ivanov, Nenad Momcilovic, and Timo Salm for an interactive workshop on where you’ll learn to apply some of these concepts in practice.&lt;/p&gt;
&lt;!-- &lt;a class=&#39;btn mt-2 lightbox&#39; href=&#39;#register&#39;&gt;Register for Workshop&lt;/a&gt; --&gt;
&lt;div id=&#34;register&#34; class=&#39;p-5&#39; style=&#34;display:none&#34;&gt;
	&lt;h3 class=&#39;-text-white mb-3 hide&#39;&gt;Register&lt;/h3&gt;
	&lt;script src=&#34;https://connect.tanzu.vmware.com/js/forms2/js/forms2.min.js&#34;&gt;&lt;/script&gt;
	&lt;form id=&#34;mktoForm_8248&#34;&gt;&lt;/form&gt;
	&lt;script&gt;
	  MktoForms2.setOptions({formXDPath : &#34;/rs/pivotal/images/marketo-xdframe-relative.html&#34;});
	  MktoForms2.loadForm(&#34;https://connect.tanzu.vmware.com&#34;, &#34;625-IUJ-009&#34;, 8248, function(form){
			form.onSuccess(function(values, followUpUrl) {
				form.getFormElem().hide();
				$(&#39;.hide&#39;).hide();
				$(&#39;.confirmation&#39;).show();
				return false;
			});
	  });
	&lt;/script&gt;
	&lt;div class=&#39;confirmation&#39; style=&#34;display:none&#34;&gt;
		&lt;h3 class=&#34;-text-white mt-0&#34;&gt;Thank you!&lt;/h3&gt;
		&lt;p&gt;Join us on June 15 using this link:&lt;br/&gt; &lt;span class=&#39;-text-white zoom-link&#39;&gt;https://vmware.zoom.us/j/91244076795?pwd=UGt5UG5qUGplNmVCUjA0bW12aEFLUT09&lt;/span&gt;&lt;/p&gt;
&lt;!-- 		&lt;p&gt;
			&lt;strong&gt;Add this workshop to your calendar:&lt;/strong&gt;
			&lt;br/&gt;
			&lt;strong&gt;
	      &lt;script type=&#34;text/javascript&#34;&gt;
	          cal_single2 = ics();
	          cal_single2.addEvent(&#39;Booternetes II: The YAML Strikes Back (Europe) Workshop&#39;, &#39;https://vmware.zoom.us/j/91244076795?pwd=UGt5UG5qUGplNmVCUjA0bW12aEFLUT09&#39;, &#39;Zoom&#39;, &#39;06/15/2021 12:00 am PDT&#39;, &#39;06/15/2021 04:15 am PDT&#39;);
	      &lt;/script&gt;
				&lt;a href=&#34;#&#34; onclick=&#34;javascript:cal_single2.download(&#39;Booternetes II: The YAML Strikes Back (Europe) Workshop&#39;)&#34;&gt;Outlook/iCal&lt;/a&gt;
	      &amp;nbsp;&amp;bullet;&amp;nbsp;
	      &lt;a href=&#34;https://www.google.com/calendar/render?action=TEMPLATE&amp;text=Booternetes+II%3A+The+YAML+Strikes+Back+%28Europe%29&amp;details=https%3A%2F%2Fvmware.zoom.us%2Fj%2F91244076795%3Fpwd%3DUGt5UG5qUGplNmVCUjA0bW12aEFLUT09&amp;dates=20210615T070000Z%2F20210615T111500Z&#34;&gt;Google&lt;/a&gt;
	    &lt;/strong&gt;
	  &lt;/p&gt; --&gt;
	&lt;/div&gt;
&lt;/div&gt;
      </description>
    </item>
    
    <item>
      
      <title>Between Chair and Keyboard: The one with Brian Sam-Bodden</title>
      
      <link>/tv/bcak/31/</link>
      <pubDate>Mon, 14 Jun 2021 10:00:00 -0700</pubDate>
      
      <guid>/tv/bcak/31/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/bcak/31.png" width="640" />]]>
        
        &lt;p&gt;Please join Nate Schutta and guest Brian Sam-Bodden. Before joining Redis Labs, Brian founded and ran Integrallis, a successful consultancy for over 2 decades. He is a frequent speaker at user groups and conferences nationally and abroad. Brian is the author of “Beginning POJOs: Spring, Hibernate, JBoss and Tapestry,” co-author of the “Enterprise Java Development on a Budget: Leveraging Java Open Source Technologies” and a contributor to O&amp;rsquo;Reilly&amp;rsquo;s “97 Things Every Project Manager Should Know”.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>TGIK: TGI Kubernetes 157: Exploring kcp: apiserver without Kubernetes</title>
      
      <link>/tv/tgik/157/</link>
      <pubDate>Fri, 11 Jun 2021 20:00:00 +0000</pubDate>
      
      <guid>/tv/tgik/157/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/tgik/157.jpg" width="640" />]]>
        
        &lt;p&gt;Join Evan as we explore &lt;a href=&#34;https://github.com/kcp-dev/kcp,&#34;&gt;https://github.com/kcp-dev/kcp,&lt;/a&gt; a kubernetes apiserver without most of the built-in Kubernetes types. Learn a bit about the goals of the project, what it&amp;rsquo;s good for now, and what it might be good for in the future.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Blog: Kubeapps Meets Tanzu Kubernetes Grid: a New Release is out</title>
      
      <link>/blog/kubeapps-meets-tanzu-kubernetes-grid-a-new-release-is-out/</link>
      <pubDate>Fri, 11 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/kubeapps-meets-tanzu-kubernetes-grid-a-new-release-is-out/</guid>
      <description>

        
        &lt;p&gt;&lt;em&gt;Special thanks to Antonio Gamez and Michael Nelson, members of the VMware Kubeapps Team&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The latest version of &lt;a href=&#34;https://github.com/kubeapps/kubeapps/releases/tag/v2.3.2&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Kubeapps (v.2.3.2)&lt;/a&gt; is now available for deployment on VMware Tanzu™ Kubernetes Grid™ (TKG) workload clusters. VMware Tanzu users already benefit from deploying Kubeapps in several environments and, now with a little configuration Kubeapps can be integrated with your TKG workload cluster.&lt;/p&gt;
&lt;p&gt;In addition to this capability,  Kubeapps also features full compatibility with the latest versions of &lt;a href=&#34;https://pinniped.dev/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Pinniped&lt;/a&gt; which means that it can be used with &lt;a href=&#34;https://github.com/kubeapps/kubeapps/blob/7aa7c579251e0fb5b446ab71a67d8d847d6ce843/docs/user/using-an-OIDC-provider-with-pinniped.md#enabling-oidc-login-in-managed-clusters&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;any OIDC provider for your TKG clusters and even in managed clusters&lt;/a&gt; such as Azure Kubernetes Service (AKS) and Google Kubernetes Engine (GKE).&lt;/p&gt;
&lt;p&gt;Want to know more? Keep reading to discover the latest capabilities of Kubeapps that will enable developers and admin clusters to deploy and manage trusted open-source content in TKG clusters.&lt;/p&gt;
&lt;h2 id=&#34;a-bit-of-history-what-is-kubeapps&#34;&gt;A bit of History: What is Kubeapps?&lt;/h2&gt;
&lt;p&gt;Kubeapps is an in-cluster web-based application that enables users with a one-time installation to deploy, manage, and upgrade applications on a Kubernetes cluster.&lt;/p&gt;
&lt;p&gt;This past year, the Kubeapps team has added key new features to support different use cases and scenarios. Firstly, we added &lt;a href=&#34;https://blog.bitnami.com/2020/05/kubeapps-now-supports-private-docker-registries.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;support for private Helm and Docker registries&lt;/a&gt; and later, in &lt;a href=&#34;https://blog.bitnami.com/2020/10/Kubeapps-2.0.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Kubeapps version 2.0&lt;/a&gt;, we built support to run Kubeapps on various VMware Tanzu ™ platforms such as Tanzu ™ Mission Control, vSphere and Tanzu ™ Kubernetes Grid.&lt;/p&gt;
&lt;p&gt;With Kubeapps you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Customize deployments through an intuitive, form-based user interface&lt;/li&gt;
&lt;li&gt;Inspect, upgrade and delete applications installed in the cluster&lt;/li&gt;
&lt;li&gt;Browse and deploy from public or private chart repositories including VMware Marketplace™ and Bitnami Application Catalog&lt;/li&gt;
&lt;li&gt;Secure authentication to Kubeapps using an OAuth2/OIDC provider such as the VMware Cloud Service Portal&lt;/li&gt;
&lt;li&gt;Secure authorization based on Kubernetes role-based access control&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;key-features-of-kubeapps-232&#34;&gt;Key Features of Kubeapps 2.3.2&lt;/h2&gt;
&lt;p&gt;In this Kubeapps release, we have focused on delivering key user experience features including the capability to enable Tanzu users to deploy Kubeapps directly as a Helm chart in TKG workload clusters. This version is tested and validated on the latest version of TKG (v1.3.1)&lt;/p&gt;
&lt;p&gt;Once Kubeapps is up and running, cluster admins will benefit from having :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SSO for Authentication with TKG using Pinniped by configuring an OIDC provider&lt;/li&gt;
&lt;li&gt;Ability to configure VMware Tanzu™ Application Catalog (TAC) as a private Chart repository;&lt;/li&gt;
&lt;li&gt;Capability to configure VMware Marketplace ™ Catalog and the Bitnami Application Catalog as public chart repositories;&lt;/li&gt;
&lt;li&gt;A customized user interface adapted to the Tanzu look and feel.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/images/blogs/kubeapps-232-release/kubeapps-tkg.png&#34; alt=&#34;alt_text&#34;  title=&#34;Kubeapps support for SSO Authentication&#34; /&gt;
&lt;em&gt;Kubeapps support for SSO Authentication&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;All these new capabilities are designed to offer a seamless experience between Kubeapps and Tanzu Kubernetes Grid clusters.&lt;/p&gt;
&lt;h2 id=&#34;how-can-i-configure-kubeapps-to-run-in-my-tkg-clusters&#34;&gt;How can I configure Kubeapps to run in my TKG clusters?&lt;/h2&gt;
&lt;p&gt;Tanzu users can execute these simple steps to gain the maximum advantage with this new version of Kubeapps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Configure your cluster to enable SSO for Authentication with TKG using Pinniped and integrate Kubeapps with the identity management provider&lt;/li&gt;
&lt;li&gt;Adjust the Kubeapps user interface to get a customized look and feel&lt;/li&gt;
&lt;li&gt;Configure role-based access control in Kubeapps (RBAC) to manage roles and permissions among the teams in your organization&lt;/li&gt;
&lt;li&gt;Deploy Kubeapps in the cluster&lt;/li&gt;
&lt;li&gt;Add public and private repositories to Kubeapps: the public VMware Marketplace™ repository and your private &lt;a href=&#34;https://tanzu.vmware.com/application-catalog&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;VMware Tanzu Application Catalog&lt;/a&gt; for &lt;a href=&#34;https://tanzu.vmware.com/tanzu/advanced&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Tanzu Advanced&lt;/a&gt; repository&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At this point your development team can start deploying, listing, removing and managing applications in your TKG clusters from the Kubeapps user interface with total confidence!&lt;/p&gt;
&lt;p&gt;Refer to the Kubeapps documentation to learn how to &lt;a href=&#34;https://github.com/kubeapps/kubeapps/tree/master/docs/step-by-step/kubeapps-on-tkg&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;deploy and configure Kubeapps on VMware Tanzu Kubernetes Grid.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;support-and-resources&#34;&gt;Support and Resources&lt;/h2&gt;
&lt;p&gt;Since Kubeapps is an OSS project, support for this version of Kubeapps will be provided on a best-effort basis.&lt;/p&gt;
&lt;p&gt;For solving the problems you may have (including deployment support, operational support and bug fixes), please &lt;a href=&#34;https://github.com/kubeapps/kubeapps/issues&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;open an issue in the Kubeapps GitHub repository.&lt;/a&gt; A markdown template is provided by default to open new issues with the information requested to prioritize and respond to them as soon as possible.&lt;/p&gt;
&lt;p&gt;Also, if you want to contribute to the project, feel free to &lt;a href=&#34;https://github.com/kubeapps/kubeapps/pulls&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;send us a pull request,&lt;/a&gt; and the team will check it and guide you in the process for a successful merge.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kubeapps/kubeapps/tree/master/docs&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;The Kubeapps documentation section&lt;/a&gt; is full of useful resources to help you get the best of the chart.&lt;/p&gt;
&lt;p&gt;Check out the step-by-step guide for &lt;a href=&#34;https://github.com/kubeapps/kubeapps/tree/master/docs/step-by-step/kubeapps-on-tkg&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;deploying and configuring Kubeapps on VMware Tanzu™ Kubernetes Grid™&lt;/a&gt; and the &lt;a href=&#34;https://docs.bitnami.com/tutorials/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Bitnami documentation tutorials site&lt;/a&gt; for improving your Kubernetes skills.&lt;/p&gt;
&lt;p&gt;For more information on VMware Tanzu Kubernetes Grid, refer to &lt;a href=&#34;https://docs.vmware.com/en/VMware-Tanzu-Kubernetes-Grid/index.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;its documentation page&lt;/a&gt;  where you will find handy information on managing your Kubernetes clusters.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Talk: Tanzu Talk: Opening up healthcare with FHIR &amp; other healthcare innovations</title>
      
      <link>/tv/talk/89/</link>
      <pubDate>Thu, 10 Jun 2021 09:05:21 +0000</pubDate>
      
      <guid>/tv/talk/89/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/talk/89.jpg" width="640" />]]>
        
        &lt;p&gt;Right now there’s no end of possibilities for technology-driven innovation in healthcare. Coté and JT Perry discussed this state in part one of the conversation, and it part two they go over examples of those innovations. First, they discuss what FHIR (in the US) is and how it creates new opportunities for better patient care. Also, discussed: the software development tool-chain for more innovation in healthcare, at-home devices to reduce hospital stays, and API implementation and management.&lt;/p&gt;
&lt;p&gt;See part one: &lt;a href=&#34;https://www.youtube.com/watch?v=Dpac46N_5qM&amp;amp;list=PLAdzTan_eSPRNuA52_34wh5VTBC-0Rz7U&#34;&gt;https://www.youtube.com/watch?v=Dpac46N_5qM&amp;amp;list=PLAdzTan_eSPRNuA52_34wh5VTBC-0Rz7U&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JT in Twitter: &lt;a href=&#34;https://twitter.com/circlejtp&#34;&gt;https://twitter.com/circlejtp&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Code: Kotlin Spring with CoRoutines with Mario Gray</title>
      
      <link>/tv/code/0033/</link>
      <pubDate>Wed, 09 Jun 2021 12:00:00 -0700</pubDate>
      
      <guid>/tv/code/0033/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/code/mario-gray.png" width="640" />]]>
        
        &lt;p&gt;Refactor a Spring Application in Kotlin&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Practices: User Research: Biases, DOs &amp; DON’Ts</title>
      
      <link>/practices/user-research-introduction-session/dos-and-donts/</link>
      <pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/practices/user-research-introduction-session/dos-and-donts/</guid>
      <description>

        
        &lt;p&gt;Biases to be aware of during interviews as well as several “dos &amp;amp; don’ts” to consider while conducting research.&lt;/p&gt;
&lt;h3 id=&#34;research-is-not&#34;&gt;RESEARCH IS NOT&amp;hellip;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A demo to sell a product&lt;/li&gt;
&lt;li&gt;Word for word everything the user wants, sometimes known as “Requirements Gathering”. We look for pains, gaps and needs. We dig deeper to ask why they want something, when they last needed it &amp;amp; build a timeline for such functionality.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;research-biases&#34;&gt;RESEARCH BIASES&lt;/h3&gt;
&lt;p&gt;Biases can and will interfere with gathering valuable and accurate research. Be aware of the following biases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Social Desirability Bias (participant)
&lt;ul&gt;
&lt;li&gt;Answer questions in a way that will lead to them being liked &amp;amp; accepted&lt;br&gt;
&lt;em&gt;To counteract&lt;/em&gt;: positive reinforcement of criticism or negative feedback&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sponsor Bias (participant)
&lt;ul&gt;
&lt;li&gt;Feelings about the sponsor, such as a company, client, or stakeholder, may bias their answers&lt;br&gt;
&lt;em&gt;To counteract&lt;/em&gt;: Stay neutral about sponsor feedback&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Confirmation Bias
&lt;ul&gt;
&lt;li&gt;Using participants answer to confirm their own belief. We tend to remember points that support our hypothesis and filter out points that disprove.&lt;br&gt;
&lt;em&gt;To counteract&lt;/em&gt;: Re-evaluate participant&amp;rsquo;s expressions, perform &lt;a href=&#34;/practices/research-synthesis/&#34;&gt;research synthesis&lt;/a&gt; as a group, challenge preexisting assumptions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Leading question and wording Bias
&lt;ul&gt;
&lt;li&gt;Elaborating on a participant&amp;rsquo;s answer puts words into their mouth&lt;br&gt;
&lt;em&gt;To counteract&lt;/em&gt;: Use participant’s own words, avoid summarizing and ask them to summarize once more instead&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;research-interview-dos-and-donts&#34;&gt;RESEARCH INTERVIEW DOS AND DON&amp;rsquo;TS&lt;/h3&gt;
&lt;p&gt;Below is a list of interview dos and don’ts that you can go over with your team to help them craft questions that draw insightful information from people.&lt;/p&gt;
&lt;h4 id=&#34;do-start-the-interview-with-simple-questions&#34;&gt;Do: Start the interview with simple questions.&lt;/h4&gt;
&lt;h5 id=&#34;dont-start-with-hard-questions-ease-into-them&#34;&gt;Don’t start with hard questions. Ease into them.&lt;/h5&gt;
&lt;p&gt;Starting with easy topics will help people get relaxed, comfortable, and talking.&lt;/p&gt;





&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Good Question&lt;/th&gt;
&lt;th&gt;Bad Question&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Tell me a little bit about what you do?&lt;/td&gt;
&lt;td&gt;You answered that you hate __ in our recruiting survey. Why do you hate ___ ?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;do-ask-open-ended-questions-with-what-how-and-why&#34;&gt;Do: Ask open-ended questions with “What”, “How” and “Why”.&lt;/h4&gt;
&lt;h5 id=&#34;dont-ask-leading-questions-or-lead-users-through-tasks&#34;&gt;Don’t ask leading questions or lead users through tasks.&lt;/h5&gt;
&lt;h5 id=&#34;dont-ask-questions-with-did-is-or-would-that-provide-only-yes-or-no-answers&#34;&gt;Don’t ask questions with “Did”, “Is”, or “Would” that provide only yes or no answers.&lt;/h5&gt;
&lt;p&gt;The goal is to hear people speak in their own words as much as possible. It’s very easy for people to say they would buy your product until they actually have to pay. Past behavior is the best predictor of future behavior.&lt;/p&gt;
&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Good Question&lt;/th&gt;
&lt;th&gt;Bad Question&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;How are you doing?&lt;/td&gt;
&lt;td&gt;Are you having a good day?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Can you tell me the whole story of? Then what?&lt;/td&gt;
&lt;td&gt;Do you like this and find this helpful?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Why did you do that?&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;How did you do that?&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;do-seek-concrete-stories-past-actions--behaviors&#34;&gt;Do: Seek concrete stories, past actions &amp;amp; behaviors.&lt;/h4&gt;
&lt;h5 id=&#34;dont-seek-generalizations-or-ask-about-future-behavior&#34;&gt;Don’t seek generalizations or ask about future behavior.&lt;/h5&gt;
&lt;p&gt;The goal is to understand what happened in their past to give us clues about why they think or feel things today.&lt;/p&gt;
&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Good Question&lt;/th&gt;
&lt;th&gt;Bad Question&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Can you talk about the last time you used this?&lt;/td&gt;
&lt;td&gt;Do you typically do this?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;What did you do that time and why was it different?&lt;/td&gt;
&lt;td&gt;What do you normally do?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;What do you think about this product?&lt;/td&gt;
&lt;td&gt;Would you pay for this?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tell me about the last time you had a painful experience with this product.&lt;/td&gt;
&lt;td&gt;What do you want?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;do-give-people-time-to-answer-the-question&#34;&gt;Do: Give people time to answer the question.&lt;/h4&gt;
&lt;h5 id=&#34;dont-fill-in-silence-with-more-questions&#34;&gt;Don’t fill in silence with more questions.&lt;/h5&gt;
&lt;p&gt;The goal is to give people space to think because being interviewed is difficult. You can also use silence as a way to extract even more information that people may be hesitant to give. Related, also feel free to move forward if the conversation is digressing or come back to the question if someone is having a hard time answering.&lt;/p&gt;
&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Good Behavior&lt;/th&gt;
&lt;th&gt;Bad Behavior&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Silence&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Interrupting while interviewee is speaking&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;do-nod-and-say-less-the-interviewee-is-always-right&#34;&gt;Do: Nod and say less. The interviewee is always right.&lt;/h4&gt;
&lt;h5 id=&#34;dont-correct-or-contradict-a-research-participant-if-they-do-something-wrong&#34;&gt;Don’t correct or contradict a research participant if they do something &amp;ldquo;wrong&amp;rdquo;.&lt;/h5&gt;
&lt;p&gt;The goal is to get people speaking as honestly as possible and to encourage them to feel it’s okay when they don’t understand how to use something in an interview. Correcting interviewees makes them feel that they are being tested and they can easily become afraid to speak their mind for fear of looking dumb.&lt;/p&gt;
&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Good Interviewer Behavior&lt;/th&gt;
&lt;th&gt;Bad Interviewer Behavior&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;User: This part doesn’t make sense. Is it supposed to do that?&lt;br&gt;&lt;br&gt;Interviewer: What do you think it should do?&lt;br&gt;&lt;br&gt;User: I think it would swap out all the pictures.&lt;br&gt;&lt;br&gt;Interviewer: There is no actual answer here, we want to learn about what you expect. Thanks!&lt;/td&gt;
&lt;td&gt;User: This part doesn’t make sense. Is it supposed to do that?&lt;br&gt;&lt;br&gt;Interviewer: Oh, it&amp;rsquo;s a slideshow and it&amp;rsquo;s just broken in the prototype. You’re supposed to tap on the arrow and the next image should enter the page.&lt;br&gt;&lt;br&gt;User: Oh I didn’t see that, sorry.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;do-actively-listen-and-dig-deeper-with-why-questions&#34;&gt;Do: Actively listen and dig deeper with “why” questions.&lt;/h4&gt;
&lt;h5 id=&#34;dont-ignore-users-when-they-are-struggling-in-silence-or-they-show-surprise&#34;&gt;Don’t ignore users when they are struggling in silence, or they show surprise.&lt;/h5&gt;
&lt;h5 id=&#34;dig-deeper-and-ask-why-they-are-reacting-a-certain-way&#34;&gt;Dig deeper and ask why they are reacting a certain way.&lt;/h5&gt;
&lt;p&gt;The goal is to pay attention to the user as they are speaking and feel comfortable going off script when you see or hear something interesting. It can be easy to read straight off the script without asking follow up questions but it means that we miss out on something that may be valuable for us to know.&lt;/p&gt;
&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Good Interviewer Behavior&lt;/th&gt;
&lt;th&gt;Bad Interviewer Behavior&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Interviewer: What do you think this page does?&lt;br&gt;&lt;br&gt; User: Oh! I like that. Anyway, I think this page tells me my sleep duration.&lt;br&gt;&lt;br&gt; Interviewer: Let’s rewind for a second, what did you mean by “Oh! I like that.”?&lt;/td&gt;
&lt;td&gt;Interviewer: What do you think this page does?&lt;br&gt;&lt;br&gt; User: Oh! I like that. Anyway, I think this page tells me my sleep duration.&lt;br&gt;&lt;br&gt; Interviewer: Great, what would you do next?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;do-stay-neutral-about-the-product-you-are-showing&#34;&gt;Do: Stay neutral about the product you are showing.&lt;/h4&gt;
&lt;h5 id=&#34;dont-talk-about-or-sell-your-product&#34;&gt;Don’t talk about or sell your product.&lt;/h5&gt;
&lt;p&gt;The goal with research is to have as unbiased feedback as possible. For example, interviewees should feel . Talking about your opinion, or even telling them what the product is supposed to do will subtly encourage interviewees to agree with you. Interviewees will feel inclined to be polite and make you feel good about your product to begin with.&lt;/p&gt;
&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Good Interviewer Behavior&lt;/th&gt;
&lt;th&gt;Bad Interviewer Behavior&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Interviewer: We’re interested in having you test drive an idea that&amp;rsquo;s related to sleep cycles.&lt;/td&gt;
&lt;td&gt;Interviewer: We’re working on this mobile app that gives you an easy way to look at how much sleep you’re getting at night.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;do-wrap-up-with-broad-questions&#34;&gt;Do: Wrap up with broad questions.&lt;/h4&gt;
&lt;h5 id=&#34;dont-wrap-up-without-having-interviewees-reflect-on-their-experience&#34;&gt;Don’t wrap up without having interviewees reflect on their experience.&lt;/h5&gt;
&lt;p&gt;Interviewees will have more to say. You can capture many interesting insights during the wrap-up.&lt;/p&gt;
&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Good Interviewer Behavior&lt;/th&gt;
&lt;th&gt;Bad Interviewer Behavior&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;How was this experience for you? Is there anything else pertaining to sleep that you’ve been thinking about lately?&lt;/td&gt;
&lt;td&gt;We’ve got no more questions for you. Thanks, bye!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;interview-practice-silent-quiz&#34;&gt;INTERVIEW PRACTICE SILENT QUIZ&lt;/h3&gt;
&lt;p&gt;Here are 3 “bad” questions. Turn them into good questions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Was that helpful for you?&lt;/li&gt;
&lt;li&gt;What do you want?&lt;/li&gt;
&lt;li&gt;How do you like this?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;interview-practice&#34;&gt;INTERVIEW PRACTICE&lt;/h2&gt;
&lt;p&gt;Interview each other by only using “Tell me more about…” or “Why?”&lt;/p&gt;
&lt;p&gt;Remember to regroup and learn from mistakes. Perfection is impossible.&lt;/p&gt;
&lt;h2 id=&#34;research-sample-structure&#34;&gt;RESEARCH SAMPLE STRUCTURE&lt;/h2&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Introduce yourself and note taker.&lt;/li&gt;
&lt;li&gt;Explain how long the interview will take and the general format.&lt;/li&gt;
&lt;li&gt;State the goal is just to have a discussion about their experience with ______ .&lt;/li&gt;
&lt;li&gt;No right or wrong answers to questions, the only right answer is their opinion. Let him/her know nothing they say will offend you.&lt;/li&gt;
&lt;li&gt;Mention they should feel free to ask questions anytime; they’ll have time at the end for questions too.&lt;/li&gt;
&lt;li&gt;Have you signed the Non Disclosure Agreement?&lt;/li&gt;
&lt;li&gt;Do you mind if we record the session?&lt;/li&gt;
&lt;li&gt;Any questions before we begin?&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;storytelling-questions&#34;&gt;Storytelling Questions&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;These questions are generally asked during Exploratory Research.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Use these questions to explore these topics:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Who, What, Where, When, Why, How&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tell me about what you do. What are your top responsibilities?&lt;/li&gt;
&lt;li&gt;Tell me about the last time…? And then what happened? Why (or how) did you do that?&lt;/li&gt;
&lt;li&gt;Tell me about a time that was difficult…?&lt;/li&gt;
&lt;li&gt;Your favorite moment…?&lt;/li&gt;
&lt;li&gt;What reasons helped you choose…?&lt;/li&gt;
&lt;li&gt;Anything else around phones?&lt;/li&gt;
&lt;li&gt;If you had a magic wand, what would you&amp;hellip;?&lt;/li&gt;
&lt;li&gt;Scenarios/activities&lt;/li&gt;
&lt;li&gt;Real world context&lt;/li&gt;
&lt;li&gt;Pains and Joys&lt;/li&gt;
&lt;li&gt;First time, last time&lt;/li&gt;
&lt;li&gt;Best time, worst time&lt;/li&gt;
&lt;li&gt;Wish list&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reactionary-questions&#34;&gt;Reactionary Questions&lt;/h3&gt;
&lt;p&gt;These questions are asked generally during Validation and Usability Research.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Can you describe the things you’re reading? What do you see?&lt;/li&gt;
&lt;li&gt;What do you think this page does? What can you do here?&lt;/li&gt;
&lt;li&gt;What questions are coming to your mind as you’re looking at this page?&lt;/li&gt;
&lt;li&gt;Before clicking on anything, what would you do next?&lt;/li&gt;
&lt;li&gt;What do you think would happen next?&lt;/li&gt;
&lt;li&gt;Why do you think that?&lt;/li&gt;
&lt;li&gt;When you mentioned ___, what did you mean?&lt;/li&gt;
&lt;li&gt;So what happened there?&lt;/li&gt;
&lt;li&gt;Was that what you expected? Why or why not?&lt;/li&gt;
&lt;li&gt;So what goes through your mind as you look at this?&lt;/li&gt;
&lt;li&gt;Which part of the page were you looking at?&lt;/li&gt;
&lt;li&gt;Did you find what you were looking for?&lt;/li&gt;
&lt;li&gt;What would you do next? Why?&lt;/li&gt;
&lt;li&gt;Is there anything else you would do at this point?&lt;/li&gt;
&lt;li&gt;Is there any other way to do that?&lt;/li&gt;
&lt;li&gt;What did you think of that?&lt;/li&gt;
&lt;li&gt;In what ways would you want this changed to make it better for you?&lt;/li&gt;
&lt;li&gt;What additional info would have helped?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;wrap-up-questions&#34;&gt;Wrap Up Questions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;We&amp;rsquo;ve been talking about ___ for awhile, has this brought up anything you’ve been thinking lately?&lt;/li&gt;
&lt;li&gt;What were the top 2 things that worked well and didn’t work well?&lt;/li&gt;
&lt;li&gt;What was not clear? What would you change?&lt;/li&gt;
&lt;li&gt;What impact would this have given your situation?&lt;/li&gt;
&lt;li&gt;What does this remind you of?&lt;/li&gt;
&lt;li&gt;If we waved a magic wand to make this service better for you, what would that be?&lt;/li&gt;
&lt;li&gt;Is there anything else regarding &amp;hellip; that you’ve been thinking of?&lt;/li&gt;
&lt;li&gt;What do you like/dislike about this?&lt;/li&gt;
&lt;li&gt;If you had 3 wishes to make this better for you, what would they be? Why?&lt;/li&gt;
&lt;li&gt;How would you describe this to a friend?&lt;/li&gt;
&lt;li&gt;Under what circumstances would you use this? Why?&lt;/li&gt;
&lt;li&gt;Can you describe to me what you see on this page?&lt;/li&gt;
&lt;li&gt;Which parts of this page are most/least important to you?&lt;/li&gt;
&lt;li&gt;What do you think this &lt;em&gt;[point to a UI element]&lt;/em&gt; might do?&lt;/li&gt;
&lt;li&gt;What does this &lt;em&gt;[point to a UI element]&lt;/em&gt; means?&lt;/li&gt;
&lt;li&gt;If you wanted to _______, how would you. . .?&lt;/li&gt;
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      
      <title>Tanzu Talk: Tanzu Talk: How Kubernetes Helps Businesses, results from the State of Kubernetes 2021 survey</title>
      
      <link>/tv/talk/88/</link>
      <pubDate>Tue, 08 Jun 2021 10:19:34 +0000</pubDate>
      
      <guid>/tv/talk/88/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/talk/88.jpg" width="640" />]]>
        
        &lt;p&gt;Coté goes over his highlights for the 2021 State of Kubernetes survey: rising production use, the benefits and business capabilities people are getting, hurdles for developers and operations, and the rising use in kubernetes distros.&lt;/p&gt;
&lt;p&gt;Get the survey: &lt;a href=&#34;https://tanzu.vmware.com/content/blog/state-of-kubernetes-survey-2021-benefits-challenges?utm_source=cote&amp;amp;utm_medium=video&amp;amp;utm_campaign=TanzuTalk&amp;amp;utm_content=k8sstate2021&#34;&gt;https://tanzu.vmware.com/content/blog/state-of-kubernetes-survey-2021-benefits-challenges?utm_source=cote&amp;amp;utm_medium=video&amp;amp;utm_campaign=TanzuTalk&amp;amp;utm_content=k8sstate2021&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Coté’s new book, free: &lt;a href=&#34;https://tanzu.vmware.com/content/ebooks/changing-mindsets-the-missing-ingredient-to-digital-transformation?utm_source=cote&amp;amp;utm_medium=video&amp;amp;utm_campaign=TanzuTalk&amp;amp;utm_content=k8sstate2021&#34;&gt;https://tanzu.vmware.com/content/ebooks/changing-mindsets-the-missing-ingredient-to-digital-transformation?utm_source=cote&amp;amp;utm_medium=video&amp;amp;utm_campaign=TanzuTalk&amp;amp;utm_content=k8sstate2021&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Talk: Tanzu Talk: Find Customer Friction, with Bernard Golden and Jesse Bean</title>
      
      <link>/tv/talk/87/</link>
      <pubDate>Thu, 03 Jun 2021 18:44:32 +0000</pubDate>
      
      <guid>/tv/talk/87/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/talk/87.jpg" width="640" />]]>
        
        &lt;p&gt;Coté is joined by Bernard Golden and Jesse Bean to talk about how companies they’re talking with are thinking through and approaching digital transformation and modernizing their software strategy.&lt;/p&gt;
&lt;p&gt;Get Coté&amp;rsquo;s new book for free: &lt;a href=&#34;https://tanzu.vmware.com/content/ebooks/changing-mindsets-the-missing-ingredient-to-digital-transformation?utm_source=cote&amp;amp;utm_medium=video&amp;amp;utm_campaign=TanzuTalk&amp;amp;utm_content=bernard&#34;&gt;https://tanzu.vmware.com/content/ebooks/changing-mindsets-the-missing-ingredient-to-digital-transformation?utm_source=cote&amp;amp;utm_medium=video&amp;amp;utm_campaign=TanzuTalk&amp;amp;utm_content=bernard&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Code: Bootiful Proxies with Josh Long</title>
      
      <link>/tv/code/0032/</link>
      <pubDate>Wed, 02 Jun 2021 12:00:00 -0700</pubDate>
      
      <guid>/tv/code/0032/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/code/josh-long.jpg" width="640" />]]>
        
        &lt;p&gt;Hey Spring fans! In this installment, we’re going to explore the wide world of proxies in the wide world of Springdom and see the implications on your GraalVM native image applications with Spring Native.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Talk: Tanzu Talk: The Decadence Vortex</title>
      
      <link>/tv/talk/86/</link>
      <pubDate>Wed, 02 Jun 2021 13:35:49 +0000</pubDate>
      
      <guid>/tv/talk/86/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/talk/86.jpg" width="640" />]]>
        
        &lt;p&gt;Too much success and you&amp;rsquo;ll get stuck right when you need to change. Get a copy of my new book for free to fix your mindset up real good: &lt;a href=&#34;https://tanzu.vmware.com/content/ebooks/changing-mindsets-the-missing-ingredient-to-digital-transformation?utm_source=cote&amp;amp;utm_medium=video&amp;amp;utm_campaign=TanzuTalk&amp;amp;utm_content=decadence&#34;&gt;https://tanzu.vmware.com/content/ebooks/changing-mindsets-the-missing-ingredient-to-digital-transformation?utm_source=cote&amp;amp;utm_medium=video&amp;amp;utm_campaign=TanzuTalk&amp;amp;utm_content=decadence&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Tanzu Tuesdays: RabbitMQ has a problem. Let us tell you about it. With Gerhard Lazu &amp; David Ansari</title>
      
      <link>/tv/tanzu-tuesdays/0056/</link>
      <pubDate>Tue, 01 Jun 2021 12:00:00 -0700</pubDate>
      
      <guid>/tv/tanzu-tuesdays/0056/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/tanzu-tuesdays/0056.png" width="640" />]]>
        
        &lt;p&gt;Everyone experienced problems with the software that they run. We all want to know how to fix things quickly and reliably, in a confidence-inspiring manner. Let&amp;rsquo;s be honest: &amp;ldquo;stop and start it&amp;rdquo; fixes are not an option for VMware customers which use our products in mission critical applications: emergency systems, factories, autonomous vehicles, etc.  RabbitMQ is this type of a system. Those responsible for it need to know when problems hit, preferably in advance, and they need a clear path to resolution. While RabbitMQ exposes a wealth of metrics, logs, and events, and has decent dashboards that help visualise these, we know that users only look at dashboards when there is a problem. Wouldn&amp;rsquo;t it be great if RabbitMQ notified you when there is a problem in the making? How about a run book on how to fix that specific problem? Imagine if some problems could even be fixed automatically. That is the direction that we are going towards. Let us show you what we have so far.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>TGIK: TGI Kubernetes 156: Exploring upstream k8s containers and OS images w/ multi-arch</title>
      
      <link>/tv/tgik/156/</link>
      <pubDate>Fri, 28 May 2021 20:00:00 +0000</pubDate>
      
      <guid>/tv/tgik/156/</guid>
      <description>

        
          <![CDATA[<img src="/images/tv/episodes/tgik/156.jpg" width="640" />]]>
        
        &lt;p&gt;Join jay as we go through how upstream Kubernetes builds both container and OS images across the project. This includes recent work to address multi-arch scenarios.&lt;/p&gt;
&lt;p&gt;00:03:00 - audio check
00:05:00 - Week in review
00:10:00 - Intro to multi OS containers, pause image, agnhost on kubernetes
00:21:00 - Dockerfile for windows
00:30:00 - peri&amp;rsquo;s blog post on buildx
00:38:00 - speaking of manifest
00:35:00 - deep dive into OCI and umoci
00:45:00 - intro to OVAs on windows, VHDs, cluster api image-builder
01:00:00 - nssm, systemctl, windows, linux
01:25:00 - ricardo sais&amp;hellip;. Freebsd on k8s ?&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
