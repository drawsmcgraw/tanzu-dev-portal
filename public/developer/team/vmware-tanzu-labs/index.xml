<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VMware Tanzu Developer Center – VMware Tanzu Labs</title>
    <link>/team/vmware-tanzu-labs/</link>
    <description>Recent content in VMware Tanzu Labs on VMware Tanzu Developer Center</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 22 Mar 2021 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="/team/vmware-tanzu-labs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      
      <title>Outcomes: Foundations of Modern Application Development Practices</title>
      
      <link>/outcomes/application-development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development/</guid>
      <description>

        
        &lt;h2 id=&#34;why-is-this-important&#34;&gt;Why is this important?&lt;/h2&gt;
&lt;p&gt;Software engineering techniques have never evolved at such a rapid pace as they are today. New frameworks, practices, and technologies keep emerging, while bringing new concepts and increased complexity of software. As a result, it feels hard to keep up with change and to make the right choices for your end-to-end modern application lifecycle.&lt;/p&gt;
&lt;p&gt;Beyond technology, this learning path also teaches the fundamentals of the 30+ year old &lt;a href=&#34;https://tanzu.vmware.com/labs&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;VMware Tanzu Labs&lt;/a&gt; methodology on developing modern applications, including how to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build the right thing the first time.&lt;/li&gt;
&lt;li&gt;Use Agile development to deliver the products your customers want.&lt;/li&gt;
&lt;li&gt;Seed a new mindset. Quickly validate your concepts. Get them from idea to production in days, and not months.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;who-is-this-learning-path-for&#34;&gt;Who is this learning path for?&lt;/h2&gt;
&lt;p&gt;This learning path is primarily for software engineers and other technical development team members involved in the development of modern applications.&lt;/p&gt;
&lt;p&gt;Managers, designers, and other non-technical stakeholders may also find this learning path useful for understanding new technical terminology and concepts.&lt;/p&gt;
&lt;h2 id=&#34;what-you-will-learn&#34;&gt;What you will learn&lt;/h2&gt;
&lt;p&gt;You will learn everything needed to start as a newly onboarded team member. Each section in this learning path provides details on specific skills or technologies, and includes links to corresponding information.&lt;/p&gt;
&lt;p&gt;We cover the following topics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/application-development/balanced-teams/&#34;&gt;Balanced Teams&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/application-development/team-rhythm/&#34;&gt;Team Rhythm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/application-development/product-validation/&#34;&gt;Product Validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Stories, Velocity, and Estimation (&lt;a href=&#34;https://github.com/vmware-tanzu/tanzu-dev-portal/issues/994&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;coming soon&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/application-development/pair-programming/&#34;&gt;Pair Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/application-development/test-driven-development/&#34;&gt;Test Driven Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/application-development/cloud-native-development/&#34;&gt;Cloud Native Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/application-development/remote/&#34;&gt;Distributed, Remote, and Asynchronous Work&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This learning path is also an adequate, on-the-clock preparation for getting the most out of an on-site or remote Tanzu Labs consulting engagement.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Cloud Native Application Development with Spring</title>
      
      <link>/outcomes/cloud-native-development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/</guid>
      <description>

        
        &lt;h2 id=&#34;why-is-this-learning-path-important&#34;&gt;Why is this learning path important?&lt;/h2&gt;
&lt;p&gt;This learning path provides you with foundational knowledge around modern, cloud native software development with Spring and Tanzu Application Service (TAS).&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll get the most out of this learning path if you have an application-related software development project with Tanzu Labs. However, it&amp;rsquo;s also a highly effective learning path without a service engagement.&lt;/p&gt;
&lt;h2 id=&#34;who-is-this-learning-path-for&#34;&gt;Who is this learning path for?&lt;/h2&gt;
&lt;p&gt;This learning path is for software engineers and architects interested in quickly ramping up their cloud native skills with Spring Boot.&lt;/p&gt;
&lt;h2 id=&#34;what-will-you-learn-in-this-learning-plan&#34;&gt;What will you learn in this learning plan?&lt;/h2&gt;
&lt;p&gt;You&amp;rsquo;ll learn essential cloud native software development skills using Spring Boot and the Tanzu Application Service.&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll also be given a list of specific and targeted links to assist you in this learning path. These links include:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Development ecosystem&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/general__unlearn/&#34;&gt;Things to unlearn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/general__twelve-factor-apps/&#34;&gt;Twelve-Factor Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/general__dev_env_tools/&#34;&gt;Development Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/general__spring_ecosystem/&#34;&gt;Spring Ecosystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/general__tdd/&#34;&gt;Test Driven Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/general__using_tas/&#34;&gt;Using Using Tanzu Application Service (TAS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/general__ci_cd/&#34;&gt;Continuous Delivery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Cloud native factors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/specific__logging/&#34;&gt;Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/specific__configuration/&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/specific__caching/&#34;&gt;Caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/specific__data_access/&#34;&gt;Data Access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/specific__integration/&#34;&gt;Enterprise Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/specific__api_gateway/&#34;&gt;API Gateways&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/specific__batch_processing/&#34;&gt;Batch Processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/specific__file_access/&#34;&gt;File Access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/specific__messaging/&#34;&gt;Messaging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/specific__user_interfaces/&#34;&gt;User interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/specific__telemetry/&#34;&gt;Telemetry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/outcomes/cloud-native-development/specific__security/&#34;&gt;Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each section is followed by suggested homework assignments and additional resources. This learning path takes approximately eight hours to complete, but the more time you spend on the learning path, for example, doing a deep study on the additional resources provided, the more value you&amp;rsquo;ll get out of it.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: How VMware Tanzu Labs Works and Why</title>
      
      <link>/outcomes/application-development-how-we-work/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development-how-we-work/</guid>
      <description>

        
        &lt;h2 id=&#34;why-are-we-talking-about-this&#34;&gt;Why are we talking about this?&lt;/h2&gt;
&lt;p&gt;VMware Tanzu Labs has a long history of doing things a little differently. We also have a 30-year reputation as being one of the most innovative, reliable, and agile software services organizations around. The secret to our success is our different way of thinking. But really, it isn&amp;rsquo;t so different, and it isn&amp;rsquo;t a secret. We think our way of doing things is pretty straight forward if you follow a few guiding principles.&lt;/p&gt;
&lt;p&gt;Thus, we&amp;rsquo;re writing it all down and telling the world all about it. We hope that you will also see how we approach is achievable, and we also hope many people and organizations will adopt some, or all, of these ideas themselves.&lt;/p&gt;
&lt;h2 id=&#34;its-not-all-about-consulting&#34;&gt;It&amp;rsquo;s not all about consulting&lt;/h2&gt;
&lt;p&gt;Our approach to how we work is the same regardless of whether we&amp;rsquo;re working with clients or with each other. Though we do talk a bit about how we approach consulting and working with clients, our principles are applicable to all product and services teams in all industries.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Things to Unlearn</title>
      
      <link>/outcomes/cloud-native-development/general__unlearn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/general__unlearn/</guid>
      <description>

        
        &lt;p&gt;Every company and team is different, and we have all spent a lot of time learning software development practices that can be detrimental to developing distributed cloud native systems.&lt;/p&gt;
&lt;p&gt;The list is not exhaustive, but starting to reflect on these anti-patterns will help you better understand how we work together.&lt;/p&gt;
&lt;h2 id=&#34;do-not-not-repeat-yourself&#34;&gt;Do Not, Not Repeat Yourself&lt;/h2&gt;
&lt;p&gt;As software engineers, we interiorize that duplicating code is a bad thing. The &amp;ldquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Don&amp;rsquo;t Repeat Yourself&lt;/a&gt;&amp;rdquo; (DRY) mantra led us to build shared libraries and shared data models to help keep things in a single place. In reality, the reliance on shared libraries and shared models can slow releases down because development teams have to align with all the other teams that also use the shared libraries and models. The teams managing the shared libraries often become gatekeepers to new functionality, resulting in everyone getting the lowest common denominator that works with all consumers. This creates a problem because it is rare that all consumers have the same needs.&lt;/p&gt;
&lt;p&gt;In the course of our projects, we use &lt;a href=&#34;https://github.com/ddd-crew/welcome-to-ddd&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Domain-Driven Design&lt;/a&gt; (DDD) principles to put a boundary around the services that should share things, have explicit external APIs and break away from common shared models.&lt;/p&gt;
&lt;h2 id=&#34;design-at-the-last-responsible-moment&#34;&gt;Design at the Last Responsible Moment&lt;/h2&gt;
&lt;p&gt;Some companies are incredibly risk-averse and want everything right the first time. The problem is that no practice can ensure such a thing. Just the opposite. We guarantee that you&amp;rsquo;ll learn something that you have never considered or planned before your app was added to production.&lt;/p&gt;
&lt;p&gt;That said, no planning guarantees that will be no surprises. So instead, we work in small iterations on thin slices of your app, getting them in front of users slice by slice. This provides the feedback loops we need to know if we are building the best thing for the company without months of up-front design work. We balance design and architecture by moving quickly, evolving the architecture as we learn new things.&lt;/p&gt;
&lt;h2 id=&#34;no-superheroes&#34;&gt;No Superheroes&lt;/h2&gt;
&lt;p&gt;We all want to be indispensable to our teams; able to do everything and solve any problem. In reality, it is not healthy for you, productive for your team, or smart for your company.
The way we work during a project actively encourages us to spread our individual knowledge to upskill our teammates. We identify people and processes that are bottlenecks to find ways to move fast and get everyone working sustainably. This might take some getting used to, but everything from our day-to-day pair programming, to our short-time-boxed project structure, aims to get your team self-sufficient and let everyone go home at the end of the day and take time off.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Balanced Teams</title>
      
      <link>/outcomes/application-development/balanced-teams/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development/balanced-teams/</guid>
      <description>

        
        &lt;p&gt;Many teams today have chosen to follow an Agile approach to software development. Despite the proven benefits of such an approach, many of these teams still fail to realize their full potential.&lt;/p&gt;
&lt;p&gt;One reason is that while these teams may place a priority on perfectly implementing their chosen Agile methodology, such as &lt;a href=&#34;https://en.wikipedia.org/wiki/Scrum_%28software_development%29&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Scrum&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Extreme_programming&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;XP&lt;/a&gt;, or &lt;a href=&#34;https://en.wikipedia.org/wiki/Kanban_%28development%29&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Kanban&lt;/a&gt;, they neglect to consider the impacts to the human side of those methodologies. One of the most promising of these human practices is the balanced team.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/balanced-team.jpg&#34; alt=&#34;Balanced Team in a meeting room&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-you-will-learn&#34;&gt;What you will learn&lt;/h2&gt;
&lt;p&gt;In this article, you will learn to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#definition&#34;&gt;Define balanced team for your team members&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#diagram&#34;&gt;Draw the balanced team diagram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#benefits&#34;&gt;Identify the benefits of a balanced team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;definition&#34;&gt;Define balanced team for your team members&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;“A team management philosophy that has people with a variety of skills and perspectives that support each other towards a shared goal.” - &lt;em&gt;balancedteam.org&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The typical balanced team mix for product development is a product manager, product designer, and engineer(s) dedicated to a single product development effort. This is in contrast to another common team structure where roles some roles, such as product management and design, are shared across many product efforts.&lt;/p&gt;
&lt;p&gt;When we work within the construct of a balanced team, we ensure that all these perspectives blend and inform each other so that we build products that are desirable, usable, feasible, and viable.&lt;/p&gt;
&lt;p&gt;Our product development teams are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.idonethis.com/two-pizza-team/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Small enough to be fed by two pizzas&lt;/a&gt; as pioneered by Amazon&lt;/li&gt;
&lt;li&gt;Multidisciplinary&lt;/li&gt;
&lt;li&gt;Organized around goals established by the product sponsor(s).&lt;/li&gt;
&lt;li&gt;Empowered to define and iterate on solutions that deliver against those goals.&lt;/li&gt;
&lt;li&gt;Empowered to talk to customers, make product decisions, and push code to production.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;team-roles-and-responsibilities&#34;&gt;Team Roles and Responsibilities&lt;/h2&gt;
&lt;p&gt;The following are the most common roles you will see on a balanced team for product development. However, your team’s roles may differ slightly depending on your product.&lt;/p&gt;





&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Role&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Engineer&lt;/td&gt;
&lt;td&gt;Engineers implement product functionality, working from a prioritized backlog of &lt;a href=&#34;https://en.wikipedia.org/wiki/User_story&#34;&gt;user stories&lt;/a&gt;. Engineers guide the implementation and help you understand the technical implications of product decisions. You will help them gain an understanding of what product success looks like. You will work together to validate your backlog’s prioritization.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Product Manager&lt;/td&gt;
&lt;td&gt;Leads a team to discover and deliver a product that creates meaningful value for their company and users. They facilitate decision-making in service of shipping successful features. To do so, product managers need to clearly understand who your users are and what they need, what impact the business expects from the product, and who your stakeholders are. They also need to collaborate closely with your team.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Product Designer&lt;/td&gt;
&lt;td&gt;Deliver value in the form of User Experience Design decisions. Their job is to deeply understand the users in order to define solutions that are desirable, useful, and usable. Product managers work closely with designers, pairing on user research to validate critical user and solution assumptions before adding development work to the backlog.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;diagram&#34;&gt;Draw the balanced team diagram&lt;/h2&gt;
&lt;p&gt;At VMware Tanzu Labs, we assemble balanced software product development teams in order to ensure that the products we are building are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#desirable&#34;&gt;Desirable from a customer’s perspective.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#viable&#34;&gt;Viable from a business perspective.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#feasible&#34;&gt;Feasible from a technical perspective.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each member of the balanced team represents one of these areas.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/balanced-teams.jpeg&#34; alt=&#34;Balanced Team Diagram&#34;  /&gt;&lt;/p&gt;
&lt;h4 id=&#34;desirable&#34;&gt;Desirable: Does it solve our users’ problems?&lt;/h4&gt;
&lt;p&gt;The product should be something that users want and that solves real problems. A designer’s primary question is, “How is the user affected?” More than anyone else on the team, designers help us answer these fundamental questions: “Is this an important problem to users?” and, “Does this design solve the problem?”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reflection:&lt;/strong&gt; if designers become too focused on user needs and cannot connect with business needs and technical feasibility, they will focus on solution ideas that cannot be implemented and/or will deliver no return on investment.&lt;/p&gt;
&lt;h4 id=&#34;viable&#34;&gt;Viable: Will this help the business?&lt;/h4&gt;
&lt;p&gt;The product has to support a sustainable business model. The product manager’s primary question is, “By solving these specific user problems with these specific solutions, are we creating valuable user and business outcomes?”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reflection:&lt;/strong&gt; if product managers become too focused on the business and cannot connect with users, they will likely focus on solutions that don’t solve any real needs and thus don’t get used.&lt;/p&gt;
&lt;h4 id=&#34;feasible&#34;&gt;Feasible: How difficult is it to build?&lt;/h4&gt;
&lt;p&gt;Product implementation has to be feasible and robust. Engineers’ primary question is, “What technical implementation will satisfy the project and product goals best?” Engineers help us debate the feasibility and merit of potential solutions while remaining mindful of technology constraints.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reflection:&lt;/strong&gt; it doesn’t help for engineers to come up with feasible solutions that don’t solve problems for users, or to home in on solutions that are desirable and viable and yet not feasible. Engineers should offer alternative solutions that are more feasible (or cheaper) if they know them to be available.&lt;/p&gt;
&lt;h2 id=&#34;benefits&#34;&gt;Identify four benefits of a balanced team&lt;/h2&gt;
&lt;p&gt;When sitting next to each other, or sharing virtual space, team members constantly communicate and collaborate. Teams are focused on delivering customer value through working software in small, iterative releases, and are self-organizing in that they can adapt common tools and practices to what works best for all members. Communication among team members tends to be informal, favoring spontaneous conversation over lengthy meetings.&lt;/p&gt;
&lt;p&gt;Balanced teams have a host of benefits, some top ones are:&lt;/p&gt;





&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Benefit&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Consensus building&lt;/td&gt;
&lt;td&gt;• Having a balanced team dedicated to a product and highly collaborative during product development allows for rapid context sharing and fewer meetings.&lt;br&gt;&lt;br&gt;• The different disciplines can break out of their siloed domains and create more room for compromise and collaboration.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Modularity of the team&lt;/td&gt;
&lt;td&gt;Shared product knowledge on the team across disciplines allows the team to not get blocked when a team member isn’t present.&lt;br&gt;&lt;br&gt; • Creates more flexibility for team members to rotate to other teams and easily onboard new members.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Autonomy in decision making&lt;/td&gt;
&lt;td&gt;• A shared sense of product ownership allows the team to feel confident in decision making, empowered to lead, able to ask another team member for help, and knows when to gather input from outside of the team.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cross Domain Empowerment&lt;/td&gt;
&lt;td&gt;• Having cross discipline balanced team members like a Product Designer and a Developer pair with each other to review UI implementations together allows for much less documentation like requirements and design specification. It also creates empathy and respect for other practitioners. Designers can more easily understand technical constraints the more time they spend with developers and can incorporate those learnings into future design concepts.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;in-this-article-you-learned-to&#34;&gt;In this article, you learned to:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#definition&#34;&gt;Define balanced team for your team members&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#diagram&#34;&gt;Draw the balanced team diagram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#benefits&#34;&gt;Identify the benefits of a balanced team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;keep-learning&#34;&gt;Keep Learning&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Want to learn more about balanced teams? Check out Becki Hyde, Product Manager at Tanzu Labs giving her talk &lt;a href=&#34;https://tanzu.vmware.com/content/videos/becki-hyde-making-magic-with-balanced-teams&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;“Making magic with Balanced Teams”&lt;/a&gt; at SpringOne.&lt;/li&gt;
&lt;li&gt;Ready to dive into more fine grained details of what balanced teams are? Check out this VMware Tanzu Labs &lt;a href=&#34;https://tanzu.vmware.com/content/white-papers/how-to-build-better-software-with-balanced-teams&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Balanced Team Whitepaper&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;related-topics&#34;&gt;Related topics&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/agile&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Agile Software Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/content/videos/lean-product-development-by-michael-fisher&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Lean Product Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/campaigns/design&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;User Centered Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Our Foundational Principles</title>
      
      <link>/outcomes/application-development-how-we-work/principles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development-how-we-work/principles/</guid>
      <description>

        
        &lt;p&gt;Within Tanzu Labs, we work with an unpredictable assortment of companies, industries, governments, countries, cities, cultures, and people. &lt;strong&gt;We help nearly every industry in the world refactor, reimagine, and build every kind of software product using any technology stack.&lt;/strong&gt; We work with countless unique embedded company cultures – some welcoming, some hostile, some ambivalent, yet nearly all have given us a mandate to help them rethink not only how they build products but how they build and manage teams. Sometimes they ask us to help them rethink their entire company culture. Sometimes they ask us to help them design their offices – really, their physical offices!&lt;/p&gt;
&lt;p&gt;Wow. That&amp;rsquo;s a lot of anything and everything.&lt;/p&gt;
&lt;p&gt;In a world where we work with anyone, anywhere, anytime, upon anything, &lt;strong&gt;what is our &amp;ldquo;north star&amp;rdquo; that guides how we approach so many diverse situations?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The answer is our &lt;strong&gt;foundational principles&lt;/strong&gt;. Within Tanzu Labs, we&amp;rsquo;ve developed six principles which complement our &lt;a href=&#34;https://www.vmware.com/radius/vmwares-culture-built-epic2-values/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;VMware EPIC&lt;sub&gt;2&lt;/sub&gt; values&lt;/a&gt; with an eye towards how we work with clients and each other:&lt;/p&gt;
&lt;h3 id=&#34;-empower-teams&#34;&gt;⚡️ Empower Teams&lt;/h3&gt;
&lt;p&gt;Diverse teams with shared context, psychological safety, and decision-making authority move faster.&lt;/p&gt;
&lt;h3 id=&#34;-start-simple&#34;&gt;🌱 Start Simple&lt;/h3&gt;
&lt;p&gt;Learn just enough to begin and let the work inform the direction.&lt;/p&gt;
&lt;h3 id=&#34;-embrace-change&#34;&gt;🦋 Embrace Change&lt;/h3&gt;
&lt;p&gt;Expect change and turn it into opportunity.&lt;/p&gt;
&lt;h3 id=&#34;-deliver-early-and-often&#34;&gt;🚀 Deliver Early and Often&lt;/h3&gt;
&lt;p&gt;Ship value to users and measure impact to lower risk.&lt;/p&gt;
&lt;h3 id=&#34;-improve-continuously&#34;&gt;🔬 Improve Continuously&lt;/h3&gt;
&lt;p&gt;We are always learning and humbled by what we don&amp;rsquo;t know.&lt;/p&gt;
&lt;h3 id=&#34;-give-back&#34;&gt;❤️ Give Back&lt;/h3&gt;
&lt;p&gt;Share our time, tools, code, and approach with internal and open source communities to maximize impact.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;With our foundational principles and VMware EPIC&lt;sub&gt;2&lt;/sub&gt; values established, we&amp;rsquo;ve set the stage for learning how we approach modern app development, and why we approach it this way, and why you should consider adopting this ideas, too.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Twelve-Factor Apps</title>
      
      <link>/outcomes/cloud-native-development/general__twelve-factor-apps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/general__twelve-factor-apps/</guid>
      <description>

        
        &lt;p&gt;Cloud native app development centers around the twelve factors initially described by the team behind the Heroku platform. The website &lt;a href=&#34;https://12factor.net/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;https://12factor.net&lt;/a&gt; provides a great understanding of how a cloud native application deals with aspects like logging, application state, and integration with external systems.&lt;/p&gt;
&lt;p&gt;Sometimes, you only need a handful of these factors to get it running on a cloud platform like VMware Tanzu Application Service (TAS) to refactor and update an existing legacy application. This allows for the operational benefits of the platform without the large investment of a far-reaching modernization effort. Not every application should become its better self. For the sake of effectiveness, we align the extent of modernization efforts with their concrete business benefits.&lt;/p&gt;
&lt;p&gt;Pay specific attention to these factors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://12factor.net/config&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;externalizing config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://12factor.net/backing-services&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;converting integrations into backing services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://12factor.net/processes&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;keeping your processes stateless&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://12factor.net/logs&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;logging to standard input and output&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information on cloud native apps, check out the free book by Kevin Hoffman, &lt;a href=&#34;https://content.pivotal.io/ebooks/beyond-the-12-factor-app&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Beyond the Twelve-Factor App&lt;/a&gt;. In it, he introduces three additional factors including API-first development, security, and telemetry not covered in the original set, but often required for apps to run well in the cloud.&lt;/p&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Read about the twelve factors at &lt;a href=&#34;https://12factor.net/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;https://12factor.net&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;additional-resources&#34;&gt;Additional resources&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://content.pivotal.io/ebooks/beyond-the-12-factor-app&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Beyond the Twelve-Factor App&lt;/a&gt; book.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Development Environment and Tools</title>
      
      <link>/outcomes/cloud-native-development/general__dev_env_tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/general__dev_env_tools/</guid>
      <description>

        
        &lt;p&gt;As software engineers, we work with the tools of our trade the whole time. Still, it&amp;rsquo;s always a good idea to take some time to brush up on a few things before starting our next project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Java 8 basics&lt;/strong&gt; such as &lt;a href=&#34;https://howtodoinjava.com/java-8-tutorial/#lambda&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;lambdas&lt;/a&gt;, the &lt;a href=&#34;https://howtodoinjava.com/java-8-tutorial/#stream&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;streams API&lt;/a&gt;, updated &lt;a href=&#34;https://howtodoinjava.com/java-8-tutorial/#date-time&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Date/Time libraries&lt;/a&gt;, &lt;a href=&#34;https://howtodoinjava.com/java8/default-methods-in-java-8/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;default methods&lt;/a&gt;, and &lt;a href=&#34;https://howtodoinjava.com/java8/java-8-optionals-complete-reference/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Optional&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Your company’s modern &lt;strong&gt;build tool&lt;/strong&gt; of choice (&lt;a href=&#34;https://maven.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Maven&lt;/a&gt; or &lt;a href=&#34;https://gradle.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Gradle&lt;/a&gt;). We lean on this for both dependency management as well as building our deployable application artifacts.&lt;/li&gt;
&lt;li&gt;Distributed source control with &lt;strong&gt;Git&lt;/strong&gt;. You should be comfortable with the &lt;a href=&#34;https://www.atlassian.com/git/tutorials&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;basic commands&lt;/a&gt; on the command line, including clone, fetch/merge/pull, add/rm, commit, and push.&lt;/li&gt;
&lt;li&gt;Your &lt;strong&gt;IDE&lt;/strong&gt; of choice. For example, &lt;a href=&#34;https://www.eclipse.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Eclipse&lt;/a&gt; with the &lt;a href=&#34;https://spring.io/tools&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Tools Suite&lt;/a&gt; or &lt;a href=&#34;https://www.jetbrains.com/idea/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;JetBrains IntelliJ IDEA&lt;/a&gt;. While we want our application and its build process to be decoupled from its development environment, you are going to use it every day during your project. It pays to get familiar with common actions. You should be comfortable with the basics of creating and importing new projects, standard code navigation, and generic refactoring commands. You should also be familiar with how to run tests within your favorite IDE, as you will do that a lot.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Review the applicable &lt;a href=&#34;https://howtodoinjava.com/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;tutorial(s)&lt;/a&gt; from Java 8 through your current version of Java.&lt;/li&gt;
&lt;li&gt;Run through the &lt;a href=&#34;https://www.atlassian.com/git/tutorials&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Git tutorials&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you are using Apache Maven for the build process, familiarize yourself with the &lt;a href=&#34;https://www.baeldung.com/maven&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Baeldung tutorial&lt;/a&gt; and &lt;a href=&#34;https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Maven in 5 Minutes guide&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you are using Gradle for the build process, run through the &lt;a href=&#34;https://gradle.org/guides&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Gradle guides&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you develop in the IntelliJ IDE, install the &lt;a href=&#34;https://plugins.jetbrains.com/plugin/8554-ide-features-trainer&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;learn plugin&lt;/a&gt; and run through the interactive tutorials within the application.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Team Rhythm</title>
      
      <link>/outcomes/application-development/team-rhythm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development/team-rhythm/</guid>
      <description>

        
        &lt;p&gt;A healthy lean and agile team has a strong and consistent rhythm. Each week is punctuated by a small set of standing practices and meetings.&lt;/p&gt;
&lt;p&gt;It is critical to establish a &lt;a href=&#34;https://en.wikipedia.org/wiki/Psychological_safety&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;psychologically safe&lt;/a&gt; work environment. Many of the following practices emphasize asking for help, volunteering to help others, explaining your reasoning, challenging the reasoning of others, and laying bare what you feel is and is not working well on the project. This will not happen within a &lt;em&gt;toxic&lt;/em&gt; work environment where honesty and vulnerability are punished, mocked, or reduce one’s standing in the organization.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/standup.jpg&#34; alt=&#34;Team Standup&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-you-will-learn&#34;&gt;What you will learn&lt;/h2&gt;
&lt;p&gt;In this article, you will learn to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;List the daily meetings and describe your role in each one.&lt;/li&gt;
&lt;li&gt;List the weekly meetings and describe your role in each one.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;list-daily-meetings-and-describe-your-role-in-each-one&#34;&gt;List daily meetings and describe your role in each one&lt;/h2&gt;
&lt;p&gt;Too many meetings can be a time-sink, especially daily meetings. We recommend the following high-value meetings, and to limit them to about 15 minutes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/day-in-a-life.jpg&#34; alt=&#34;Day in a life&#34;  /&gt;&lt;/p&gt;
&lt;h3 id=&#34;office-department-or-cross-team-stand-up&#34;&gt;Office, department, or cross-team stand-up&lt;/h3&gt;
&lt;p&gt;Your team’s interesting discoveries might unblock other teams. The problem that is stumping you might have recently been solved by another team. Office, department, or other cross-team &lt;a href=&#34;https://en.wikipedia.org/wiki/Stand-up_meeting&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;stand-up meetings&lt;/a&gt; are an efficient way to share information quickly.&lt;/p&gt;
&lt;p&gt;These gatherings do not have to only be about work. Office, department, and other cross-team stand-ups are an opportunity to build personal relationships by sharing social events, local happenings, or even trivia.&lt;/p&gt;
&lt;p&gt;We commonly see daily stand-up meetings having four categories: new faces, help requests, interesting things, and events.&lt;/p&gt;
&lt;p&gt;Your role as a &lt;strong&gt;Participant&lt;/strong&gt; when the stand-up moderator announces each topic:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Announce new teammates or guests.&lt;/li&gt;
&lt;li&gt;Ask for help if you or your team need it.&lt;/li&gt;
&lt;li&gt;Share interesting or notable things you’ve learned that could help other teams.&lt;/li&gt;
&lt;li&gt;Announce and/or volunteer to participate in events.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;project-stand-up&#34;&gt;Project Stand-up&lt;/h3&gt;
&lt;p&gt;The main purpose of the project stand-up is to check in on everyone’s progress, plan, and blockers. Another subtle but powerful purpose is to align everyone&amp;rsquo;s schedules, almost like synchronizing everyone&amp;rsquo;s clock.&lt;/p&gt;
&lt;p&gt;Some teams prefer to have everyone (or each pair) report on what they did the previous day. Other teams omit the status report and adopt a format similar to the &lt;a href=&#34;#office-department-or-cross-team-stand-up&#34;&gt;office, department, or cross-team stand-up&lt;/a&gt;, choosing to discuss blockers and other topics impacting the project. Experiment with both formats.&lt;/p&gt;

&lt;div class=&#34;callout td-box--gray-darkest p-3 mx-5 border-bottom border-right border-left border-top&#34;&gt;
    &lt;p&gt;Tip: Each week, have a different team member volunteer to facilitate the daily project stand-up. This reduces facilitation fatigue.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Your role as a &lt;strong&gt;Team Member&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Report on the previous workday&amp;rsquo;s progress as needed.&lt;/li&gt;
&lt;li&gt;Report any interesting or project-impacting topics.&lt;/li&gt;
&lt;li&gt;Understand blockers and their implications on the current priorities.&lt;/li&gt;
&lt;li&gt;Remind everyone of outstanding team action items and upcoming milestones.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;list-the-weekly-meetings-and-describe-your-role-in-each-one&#34;&gt;List the weekly meetings and describe your role in each one&lt;/h2&gt;
&lt;h3 id=&#34;iteration-planning-meeting&#34;&gt;Iteration Planning Meeting&lt;/h3&gt;
&lt;p&gt;The Iteration Planning Meeting (IPM) is a regular meeting for the core team to understand and align on the work to be done. It is &lt;a href=&#34;https://tanzu.vmware.com/developer/practices/ipm/#sprint-planning-vs-iteration-planning&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;similar but different to SCRUM Sprint Planning&lt;/a&gt;,&lt;/p&gt;
&lt;p&gt;Regular planning meetings help ensure the &lt;a href=&#34;https://en.wikipedia.org/wiki/Scrum_%28software_development%29#Product_backlog&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;product backlog&lt;/a&gt; is well-understood by all team members and always reflects the current priorities. By discussing and sizing product backlog items, the team may align on the delivery impact of the work to be done.&lt;/p&gt;
&lt;p&gt;Your role as a &lt;strong&gt;Developer:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Consider the technical feasibility of the &lt;a href=&#34;https://en.wikipedia.org/wiki/User_story#:~:text=In%20software%20development%20and%20product,digitally%20in%20project%20management%20software.&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;user stories&lt;/a&gt; and raise any concerns.&lt;/li&gt;
&lt;li&gt;Look for and suggest opportunities to break down large stories into smaller stories.&lt;/li&gt;
&lt;li&gt;Ensure user stories describe the desired outcomes, and not the technical implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/developer/practices/ipm/#estimation&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Estimate stories&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your role as a &lt;strong&gt;Product Manager:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Communicate the user value and business value of each story.&lt;/li&gt;
&lt;li&gt;Clarify any confusion and update stories.&lt;/li&gt;
&lt;li&gt;Confirm the priority of stories with input from the developers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your role as a &lt;strong&gt;Product Designer:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Illustrate the user value associated with each story with supporting artifacts (prototypes, flow diagrams, personas, etc.)&lt;/li&gt;
&lt;li&gt;Frame the supporting evidence (user research, testing results, etc.) for certain user flows&lt;/li&gt;
&lt;li&gt;Clarify and walk through interaction patterns for certain user flows so it’s clear to the entire balanced team&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To learn more about IPMs and how to facilitate them, go &lt;a href=&#34;https://tanzu.vmware.com/developer/practices/ipm/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;sponsorstakeholder-update-and-demo&#34;&gt;Sponsor/Stakeholder Update and Demo&lt;/h3&gt;
&lt;p&gt;It is extremely important to keep the product sponsors and stakeholders informed regarding the team’s progress. This helps avoid miscommunication and other forms of misalignment, especially if stakeholder-level priorities have changed.&lt;/p&gt;
&lt;p&gt;We recommend covering the following topics during these updates:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Demo the current state of the product, especially new or changed functionality.&lt;/li&gt;
&lt;li&gt;Discuss learnings from customers.&lt;/li&gt;
&lt;li&gt;Raise awareness of blocking issues preventing the team from making progress.&lt;/li&gt;
&lt;li&gt;Share updates on &lt;a href=&#34;https://en.wikipedia.org/wiki/Performance_indicator&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Key Performance Indicators&lt;/a&gt; (KPIs).&lt;/li&gt;
&lt;li&gt;Share what the team plans to work on next.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your role as a &lt;strong&gt;Product Manager&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prepare the agenda with your anchor and designer.&lt;/li&gt;
&lt;li&gt;Use your product roadmap to explain what the team is working on and why.&lt;/li&gt;
&lt;li&gt;Frame the demo in the context of the outcomes defined in the product roadmap.&lt;/li&gt;
&lt;li&gt;Speak to the empirical data guiding the team’s decisions.&lt;/li&gt;
&lt;li&gt;Speak to your assumptions, both those you have tested, and those you plan to test.&lt;/li&gt;
&lt;li&gt;If blocked, explain what the team needs, why, and by when.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your role as a &lt;strong&gt;Team Member&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Listen, participate, take notes, and answer questions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;retrospective&#34;&gt;Retrospective&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/images/practices/3-column-retro/retro-1.png&#34; alt=&#34;3 Column Retrospective in Action&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Some feel that the Retrospective practice is the most important of all Agile practices as it embodies the principle of continuous improvement. Retrospectives are a way to identify how to improve teamwork by reflecting on what worked well, what could be improved, and what is on people’s minds.&lt;/p&gt;
&lt;p&gt;Continuous reflection on how the team and project are performing allow us to learn and improve based on our past experience, constantly striving for better outcomes and to correct misalignment.&lt;/p&gt;
&lt;p&gt;Teams typically host “the retro” on a weekly basis to celebrate the past week’s successes, discuss points of confusion, and reflect on challenges.&lt;/p&gt;
&lt;p&gt;Your role as a &lt;strong&gt;Meeting Participant&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Openly and honestly share your experiences from the week.&lt;/li&gt;
&lt;li&gt;Dig deeper on topics raised by others to understand root causes.&lt;/li&gt;
&lt;li&gt;Identify action items to address issues raised.&lt;/li&gt;
&lt;li&gt;Sign up for action items and be accountable for their completion.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To learn more about Retrospectives and how to facilitate them, go &lt;a href=&#34;https://tanzu.vmware.com/developer/practices/3-column-retro/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;in-this-article-you-learned-to&#34;&gt;In this article, you learned to:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;List the daily meetings and your role in each one.&lt;/li&gt;
&lt;li&gt;List the weekly meetings and your role in each one.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;keep-learning&#34;&gt;Keep Learning&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Agile-Estimating-Planning-Mike-Cohn/dp/0131479415&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Agile Estimating and Planning&lt;/a&gt; by Mike Cohn&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.c2.com/?YesterdaysWeather&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Yesterday’s Weather&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Planning_poker&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Planning Poker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chapter 12 of &lt;a href=&#34;https://www.goodreads.com/book/show/67833.Extreme_Programming_Explained&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Extreme Programming Explained&lt;/a&gt; by Kent Beck, Cynthia Andres&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/[http:/www.extremeprogramming.org/rules/iterationplanning.html]%28http:/www.extremeprogramming.org/rules/iterationplanning.html%29&#34;&gt;ExtremeProgramming.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pragprog.com/titles/dlret/agile-retrospectives/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Agile Retrospectives - Making Good Teams Great&lt;/a&gt;  by Esther Derby and Diana Larsen, Foreword by Ken Schwaber&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/content/blog/how-to-run-a-really-good-retrospective&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;How to Run a Really Good Retrospective&lt;/a&gt; - Blog Post by Nicola Rushton&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/content/videos/measure-success-in-agile-retrospectives-enrico-teotti&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Measure Success in Agile Retrospectives&lt;/a&gt; – Video by Enrico Teotti&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: We Consult Through Empathy</title>
      
      <link>/outcomes/application-development-how-we-work/empathy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development-how-we-work/empathy/</guid>
      <description>

        
        &lt;p&gt;Our mission is to &lt;strong&gt;catalyze enterprise transformation through software&lt;/strong&gt;. But that isn&amp;rsquo;t easy. In fact, it&amp;rsquo;s really hard. That&amp;rsquo;s because &lt;em&gt;enterprises don&amp;rsquo;t really transform – people do.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When we&amp;rsquo;re on a consulting engagement, we&amp;rsquo;re influencing the way humans act, the way teams collaborate, and the way organizations provide incentives, manage, fund, and measure success. Those are tall orders, and the most important thing to know is this: &lt;strong&gt;we don&amp;rsquo;t have all the answers.&lt;/strong&gt; No one does. As the saying goes, &amp;ldquo;Everybody thinks their way is the best. Everybody is wrong.&amp;rdquo; That&amp;rsquo;s why we believe in &lt;em&gt;improving continuously&lt;/em&gt; 🔬 &amp;ndash; we are always learning and humbled by what we don&amp;rsquo;t know.&lt;/p&gt;
&lt;p&gt;Most of our clients show up with experience building software from a detailed, inflexible plan. &lt;strong&gt;They believe they know exactly what they want.&lt;/strong&gt; They often have a budget, a timeline and specific scope. &lt;strong&gt;Our job begins by &lt;em&gt;deeply empathizing&lt;/em&gt; with this view.&lt;/strong&gt; Without decades of Agile software development experience we might make the same assumptions. As consultants, we listen to our client as they share their story. We let them know they are heard.&lt;/p&gt;
&lt;p&gt;From there, &lt;strong&gt;we begin to offer a different way of thinking about developing software products.&lt;/strong&gt; That driving from their users&#39; needs directs their efforts toward real value; that &lt;em&gt;delivering value to users early and often lets them measure impact to lower risk&lt;/em&gt; 🚀, far lower risk than sticking to an inflexible, predetermined plan. That learning happens through a system of feedback loops, by &lt;em&gt;starting simply in order to learn just enough to begin and letting the work inform the direction&lt;/em&gt; 🌱. We show our clients that &lt;em&gt;empowered, diverse teams with shared context, psychological safety, and decision-making authority move faster&lt;/em&gt; ⚡️. We need to be able to articulate all this from where they are at in their learning journey—from their point of view, and help them &lt;em&gt;expect and embrace change and turn it into opportunity&lt;/em&gt; 🦋.&lt;/p&gt;
&lt;p&gt;Very few of us walk in the door with these skills. Getting there means learning how to negotiate difficult conversations, facilitate large groups of stakeholders, and inspire confidence in our clients and in each other. It&amp;rsquo;s a two-way street. &lt;strong&gt;We learn just as much from our clients as they from us.&lt;/strong&gt; Advising them requires patient repetition, and our own &lt;em&gt;continuous improvement means we are always learning and humbled by what we don&amp;rsquo;t know&lt;/em&gt; 🔬. It also requires that we study and deeply understand the principles and values we hold, in order to internalize and learn to recognize how, why and when they do and &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; work. &lt;strong&gt;Sometimes &amp;ldquo;breaking the rules&amp;rdquo; is the right choice in the right situation.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Therefore, first and foremost, at Tanzu Labs we must develop ourselves as consultants. &amp;ldquo;Consultant&amp;rdquo; is a loaded word in our industry, and not all the connotations are positive. Google Dictionary defines &amp;ldquo;consultant&amp;rdquo; as &lt;em&gt;&amp;ldquo;a person who provides expert advice professionally.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Although that definition certainly applies to us in Tanzu Labs, when we say consultant, we really mean this: &lt;em&gt;&lt;strong&gt;a deeply empathetic human being committed to helping others.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Product Validation</title>
      
      <link>/outcomes/application-development/product-validation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development/product-validation/</guid>
      <description>

        
        &lt;p&gt;There are a lot of unknowns when building a new software system, including customer unknowns such as product/market fit, business unknowns such as addressable market size, and technical unknowns such as how feasible something is to build.&lt;/p&gt;
&lt;p&gt;For decades, management practice has emphasized planning and control as a means of ensuring predictable outcomes, but building software has inherent complexities that make this management style too rigid. This rigidity is expressed in many ways, from organizations being slow to react to new information to teams not being empowered to act autonomously and react effectively to customer feedback.&lt;/p&gt;
&lt;p&gt;One way to mitigate the risk of unknowns derailing a product or initiative is to follow the Build, Measure, Learn cycle detailed later in this article. Scientists and engineers have been using something similar known as the&lt;a href=&#34;https://en.wikipedia.org/wiki/Scientific_method&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt; scientific method for at least 200 years.&lt;/a&gt; Both methods use data to inform decisions and place an emphasis on facts over assumptions. You can learn more about the Build, Measure Learn cycle from the book, &lt;a href=&#34;http://theleanstartup.com/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;&amp;ldquo;Lean Startup&amp;rdquo;&lt;/a&gt; by Eric Ries. While the book and this article use startups in several examples, the principles of lean software product development are applicable to organizations of any size and age.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/Office-image.jpeg&#34; alt=&#34;VMware Office Image&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-you-will-learn&#34;&gt;What you will learn&lt;/h2&gt;
&lt;p&gt;In this article, you will learn to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#assumptions&#34;&gt;Define assumptions and how to identify them.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#validation&#34;&gt;Recognize how validation can reduce risk in product development.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cycle&#34;&gt;Describe the Build-Measure-Learn cycle, its importance, and how each step informs the other.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hypothesis&#34;&gt;Define hypothesis, test, and validation criteria.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assumptions&#34;&gt;Define assumptions and how to identify them&lt;/h2&gt;
&lt;p&gt;Assumptions are things we believe to be true but are not verified by facts or evidence. Identifying assumptions early will help determine the questions we need to answer with research. If we do not identify and address our assumptions, we may make uninformed decisions about the product’s direction.&lt;/p&gt;
&lt;p&gt;Assumptions introduce risk for several reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Assumptions lead to &lt;a href=&#34;https://en.wikipedia.org/wiki/Lean_software_development#Eliminate_waste&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;waste&lt;/a&gt;, which is anything that does not add value for the end user. For example, building features that customers don’t actually need requires support for what’s built, and prevents the team from building those features that customers do need.&lt;/li&gt;
&lt;li&gt;Assumptions are attractive and seem like facts. It’s easier to accept an assumption than it is to challenge it. For example, it’s easy to accept an assumption when it&amp;rsquo;s a commonly shared belief on your team.&lt;/li&gt;
&lt;li&gt;Assumptions preclude learning from customers. A team that shares assumptions about customers will not see a need to connect with those customers to learn about their needs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To identify assumptions, run an &lt;a href=&#34;https://tanzu.vmware.com/developer/practices/assumptions/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Assumptions Exercise&lt;/a&gt;. You can use the output from this exercise to generate ideas for tests to run that ensure we’re building the right product. The goal is to discover assumptions, then target the ones that pose the greatest risk to our business.&lt;/p&gt;
&lt;p&gt;An Assumptions Exercise is a simple way to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Identify the assumptions.&lt;/li&gt;
&lt;li&gt;Prioritize the assumptions that pose the greatest risk to the business.&lt;/li&gt;
&lt;li&gt;Set up a conversation about what research the team needs to do to validate and de-risk the assumptions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;validation&#34;&gt;Recognize how validation can reduce risk in product development&lt;/h2&gt;
&lt;p&gt;According to &lt;a href=&#34;https://hbswk.hbs.edu/item/clay-christensens-milkshake-marketing&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Harvard Business School&lt;/a&gt;, as many as 95 percent of product launches fail. Many of these failures can be attributed to flawed assumptions about user needs. You must validate assumptions about what customers really need and meet those needs with as little time, effort, and resources as possible.&lt;/p&gt;
&lt;p&gt;Customer feedback is vital during product development. It ensures that we’re not building products that customers don&amp;rsquo;t want. The lean product development approach also borrows from the scientific method; it assumes we don&amp;rsquo;t know something to be true unless we gather the evidence to validate our belief.&lt;/p&gt;
&lt;p&gt;By validating our product decisions early and continuously as we build a product, we receive two important signals. First, we get an indication that we’re on the right track &amp;ndash; that this product meets our customers needs. Second, we learn about flaws in our product so that we can change course before they become too deeply ingrained to be easily fixed.&lt;/p&gt;
&lt;p&gt;it is especially important to get these signals early on in the development process; before we run out of money, before we put together a “big bang” product launch, or while we can still make changes cost-effectively. Validation reduces risk through explicit, focused learning cycles.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/Product-risk.jpeg&#34; alt=&#34;Risk Over Time Chart&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;cycle&#34;&gt;Describe the Build-Measure-Learn cycle, its importance, and how each step informs the other&lt;/h2&gt;
&lt;p&gt;Eric Ries popularized Build-Measure-Learn as a way to identify and reduce risk, focus resources on the right work, continuously learn about our customers, and eventually build a successful product or business. This process won’t help a team succeed if it’s done once in the early days of a project. It must underpin the work the team does week-after-week. Eventually, as the team repeats the Build-Measure-Learn cycle, validated learning and a focus on outcomes will replace big ideas and a focus on output.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/Build-measure-learn.jpeg&#34; alt=&#34;Build Measure Learn Cycle&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Although the team’s activities happen in the build, measure, and learn order, planning actually works the other way around.&lt;/p&gt;
&lt;p&gt;First, the team needs to discover what they must learn. Next, how to measure those learnings. Organizations which do not have a history of traditional metrics, such as revenue or market share, might rely on &lt;a href=&#34;https://www.ideou.com/blogs/inspiration/innovation-accounting-what-it-is-and-how-to-get-started&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;innovation accounting&lt;/a&gt;. More established organizations might have traditional metrics. Regardless, it is important for all organizations to focus on the &lt;em&gt;right&lt;/em&gt; metrics - those that impact the business. Too often, teams get stuck chasing &lt;a href=&#34;https://www.shortform.com/blog/vanity-metrics/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;vanity metrics&lt;/a&gt;, or metrics which look important on the surface, but which ultimately don’t explain performance of the business. Build-Measure-Learn helps teams at every stage focus on the right product initiatives that impact those metrics that matter to their customers and the business.&lt;/p&gt;
&lt;p&gt;Finally, the team will figure out what must be built, based on this learning.&lt;/p&gt;
&lt;h3 id=&#34;build&#34;&gt;Build&lt;/h3&gt;
&lt;p&gt;In order to successfully run an experiment and learn from it, there needs to be something to test. For example, we can test working software. However, there are a number of lower fidelity - and lower cost - options available that the team can learn from. The team could opt to build a paper-prototype, marketing website, or a demo video and put it in front of a target audience to gain insight into how they use it.&lt;/p&gt;
&lt;p&gt;The Build phase generally comes from questions like “what?” and “for whom?”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What will we build?&lt;/li&gt;
&lt;li&gt;Who is our target persona?&lt;/li&gt;
&lt;li&gt;What part of this product are we most worried about?&lt;/li&gt;
&lt;li&gt;What’s the smallest release that will support our business outcomes?&lt;/li&gt;
&lt;li&gt;How can we get the most confidence for the least investment?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;measure&#34;&gt;Measure&lt;/h3&gt;
&lt;p&gt;It’s not enough to say “we think customers will like this feature.” Instead, it’s important to anticipate (before you build) and assess (when you’re done) the impact that a feature or product has on the metrics that define your business when it is in the hands of real users.&lt;/p&gt;
&lt;p&gt;Measures can generally be identified with questions like “why?” and “what will have changed?”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What outcomes are we aiming for?&lt;/li&gt;
&lt;li&gt;How can we measure our progress towards these outcomes?&lt;/li&gt;
&lt;li&gt;What tracking needs to be in place so we can measure success?&lt;/li&gt;
&lt;li&gt;How often / When will we measure?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;learn&#34;&gt;Learn&lt;/h3&gt;
&lt;p&gt;Learn consists of questions like “What next?” and “How does this impact our plans?”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What do we think we will learn?&lt;/li&gt;
&lt;li&gt;What might lead us to decide to continue building on what we built here?&lt;/li&gt;
&lt;li&gt;What might lead us to decide that we should scrap what we built and revisit the suitability of the team and the process, in driving towards our desired outcomes?&lt;/li&gt;
&lt;li&gt;If our hypothesis is correct, what do we do next?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By measuring the impact that a certain feature has on our business, we can determine where to invest our resources next.&lt;/p&gt;
&lt;h2 id=&#34;hypothesis&#34;&gt;Define hypothesis, test, and validation criteria&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;hypothesis&lt;/strong&gt; is a falsifiable version of our &lt;em&gt;assumption&lt;/em&gt;. We &lt;em&gt;learn&lt;/em&gt; from the outcome of our hypothesis. Only test one variable or idea in each hypothesis. Otherwise, you won’t get reliable data because you won’t be able to tell which of the variables led to a particular outcome.&lt;/p&gt;

&lt;div class=&#34;callout td-box--gray-darkest p-3 mx-5 border-bottom border-right border-left border-top&#34;&gt;
    &lt;p&gt;&amp;ldquo;We think X change/feature will impact Y metric in Z way for a certain group of users.&amp;rdquo;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;test&lt;/strong&gt; is how we intend to validate our hypothesis, proving it to be true or false. The test is the thing you will &lt;em&gt;build&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;callout td-box--gray-darkest p-3 mx-5 border-bottom border-right border-left border-top&#34;&gt;
    &lt;p&gt;&amp;ldquo;To test this hypothesis we will put this feature/product/prototype in front of some segment of users.&amp;rdquo;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Test examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/developer/practices/lean-experiments/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;A/B test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://read.realstartupbook.com/6-evaluative-product-experiment/paper-prototyping&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Paper Prototype&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/developer/practices/lean-experiments/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Concierge test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/developer/practices/lean-experiments/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Front Door test/Smoke test&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;strong&gt;validation criteria&lt;/strong&gt; is the evidence that proves the hypothesis. This is what we &lt;em&gt;measure&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;callout td-box--gray-darkest p-3 mx-5 border-bottom border-right border-left border-top&#34;&gt;
    &lt;p&gt;&amp;ldquo;We will know if we were successful if this business metric has moved by X% by the end of our test.&amp;rdquo;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Business metric examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://delighted.com/blog/nps-matters-product-management&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Net Promoter Score&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://read.realstartupbook.com/6-evaluative-product-experiment/usability-testing&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Usability test outcomes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Revenue per transaction&lt;/li&gt;
&lt;li&gt;Signed letter of intent&lt;/li&gt;
&lt;li&gt;New sales leads&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example of a hypothesis, a test, and the validation criteria for a hypothetical video baby monitor app seeking to expand their market share.&lt;/p&gt;

&lt;div class=&#34;callout td-box--gray-darkest p-3 mx-5 border-bottom border-right border-left border-top&#34;&gt;
    &lt;p&gt;&lt;p&gt;&amp;ldquo;We believe that allowing parents to share clips of their children with friends from the video monitor will lead to a significant usage of the share feature and exposure to new potential customers.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;We will run an A/B test and deliver a Share feature to half of our “recording-happy” user segment for 16 weeks.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;We will know if we were successful if we see an average of one clip shared per household,  per week in the test group.&amp;rdquo;&lt;/p&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;This is a relatively low-risk test that will give them a lot of confidence as to whether their customer will benefit from the proposed feature.&lt;/p&gt;
&lt;h2 id=&#34;in-this-article-you-learned-to&#34;&gt;In this article, you learned to:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#assumptions&#34;&gt;Define assumptions and how to identify them.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#validation&#34;&gt;Recognize how validation can reduce risk in product development.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cycle&#34;&gt;Describe the Build-Measure-Learn cycle, its importance, and how each step informs the other.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hypothesis&#34;&gt;Define hypothesis, test, and validation criteria.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;keep-learning&#34;&gt;Keep Learning&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://www.amazon.com/Lean-Startup-Entrepreneurs-Continuous-Innovation/dp/0307887898&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;The Lean Startup&lt;/a&gt;: How Today&amp;rsquo;s Entrepreneurs Use Continuous Innovation to Create Radically Successful Businesses&lt;/em&gt; by Eric Ries.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://www.amazon.com/Startup-Way-Companies-Entrepreneurial-Management/dp/1101903201/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;The Startup Way&lt;/a&gt;: How Modern Companies Use Entrepreneurial Management to Transform Culture and Drive Long-Term Growth&lt;/em&gt; by Eric Ries.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://www.amazon.com/Measure-What-Matters-audiobook/dp/B07BMJ4L1S/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Measure What Matters&lt;/a&gt;: OKRs: The Simple Idea that Drives 10x Growth&lt;/em&gt; by John Doerr.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;related-topics&#34;&gt;Related topics&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/agile&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Agile Software Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/content/videos/lean-product-development-by-michael-fisher&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Lean Product Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/campaigns/design&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;User Centered Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Spring Ecosystem</title>
      
      <link>/outcomes/cloud-native-development/general__spring_ecosystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/general__spring_ecosystem/</guid>
      <description>

        
        &lt;p&gt;We rely heavily on the &lt;a href=&#34;https://spring.io/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;open-source ecosystem of Spring projects&lt;/a&gt; to replace vendor- or container-specific technologies or proprietary solutions for Java-based applications. There are many specific tools and frameworks under that banner. For development projects, we leverage two prerequisite frameworks providing us a lightweight core with standard functionalities: &lt;a href=&#34;https://spring.io/projects/spring-boot&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Boot&lt;/a&gt; and &lt;a href=&#34;http://projects.spring.io/spring-cloud/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Cloud&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;spring-boot&#34;&gt;Spring Boot&lt;/h2&gt;
&lt;p&gt;Spring Boot provides a &amp;ldquo;convention over configuration&amp;rdquo; foundation for Spring-based applications. Follow &lt;a href=&#34;https://spring.io/guides/gs/spring-boot/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;this guide&lt;/a&gt; to build a simple, RESTful web service using Spring Boot and minimal configuration.&lt;/p&gt;
&lt;h2 id=&#34;spring-cloud&#34;&gt;Spring Cloud&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://projects.spring.io/spring-cloud/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Cloud&lt;/a&gt; provides a set of abstractions and integrations that enable best practice cloud native behavior. Later, we will cover the actual implementation details for common tasks like externalizing configuration in a &lt;a href=&#34;https://cloud.spring.io/spring-cloud-config/reference/html/#_spring_cloud_config_server&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Cloud Config Server&lt;/a&gt;, using service discovery, API gateways, and other route services.&lt;/p&gt;
&lt;p&gt;To better understand what you have in your tool belt before we get started, take some time to become familiar with the basic concepts of each framework, found in the introductions of the following documentation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.spring.io/spring-cloud-static/spring-cloud.html#_cloud_native_applications&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Part 1: Cloud Native Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.spring.io/spring-cloud-static/spring-cloud.html#_spring_cloud_config&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Part 2: Spring Cloud Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.spring.io/spring-cloud-static/spring-cloud.html#_spring_cloud_netflix&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Part 3: Spring Cloud Netflix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.spring.io/spring-cloud-static/spring-cloud.html#_spring_cloud_stream&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Part 4: Spring Cloud Stream&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&#34;https://spring.io/guides/gs/spring-boot/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;this guide&lt;/a&gt; to build a simple RESTful web service using Spring Boot and minimal configuration.&lt;/li&gt;
&lt;li&gt;Read through the introductions for the most common Spring Cloud components.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: We Care About More Than Engineering</title>
      
      <link>/outcomes/application-development-how-we-work/more-than-engineering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development-how-we-work/more-than-engineering/</guid>
      <description>

        
        &lt;p&gt;For many years, Tanzu Labs only employed engineers. We expected our clients to bring the product manager (PM) and product designer (PD) roles to the team. We didn&amp;rsquo;t have any expertise in Lean Product Design or User Centered Design (UCD). We could help our clients &amp;ldquo;build it right&amp;rdquo;, but we didn&amp;rsquo;t concern ourselves with helping them discover the right thing to build – which our clients often did not know how to do. This too often led to a demoralizing outcome: we helped clients build very well-built &lt;em&gt;wrong&lt;/em&gt; things for their business.&lt;/p&gt;
&lt;p&gt;Great code doesn&amp;rsquo;t make great software. &lt;strong&gt;It doesn&amp;rsquo;t matter if we &amp;ldquo;build it right&amp;rdquo; if we&amp;rsquo;re building the &lt;em&gt;wrong thing&lt;/em&gt; in the first place.&lt;/strong&gt; All the clean code in the world won&amp;rsquo;t save a product that isn&amp;rsquo;t actually solving problems for its users.&lt;/p&gt;
&lt;p&gt;This all changed around the end of 2012. We hired product management and product design leadership into our organization and built up in-house expertise on Lean Product Design and UCD. The effect was nothing short of transformational for us. &lt;strong&gt;We bring a complete, whole agile offering to the table, which is an order of magnitude more valuable than just agile engineering alone &amp;ndash; the &lt;a href=&#34;/outcomes/application-development/balanced-teams/&#34;&gt;balanced team&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The balanced team is a powerful force multiplier for both product or services organizations. Balanced teams can clearly define problems, articulate assumptions, form hypotheses, run experiments, establish &lt;a href=&#34;https://en.wikipedia.org/wiki/Performance_indicator&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Key Performance Indicators&lt;/a&gt;, and validate learnings through software. In effect, balanced teams can help organizations not just &amp;ldquo;build the thing right&amp;rdquo;, but &amp;ldquo;build the &lt;em&gt;right&lt;/em&gt; thing.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Our product management and product design practices in Tanzu Labs help our clients find the right thing to build, and our engineers complete the trusted partnership to help implement the vision. &lt;strong&gt;Great products are desirable to users, viable to the business, and feasible for the engineers, and it takes all members of the balanced team to enable these outcomes.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/balanced-teams.jpeg&#34; alt=&#34;Balanced Team Diagram&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Furthermore, &lt;strong&gt;we&amp;rsquo;re here to help our clients innovate.&lt;/strong&gt; We can&amp;rsquo;t contribute to that if we don&amp;rsquo;t understand the problem they are – that is, &lt;strong&gt;&lt;em&gt;we all are&lt;/em&gt;&lt;/strong&gt; – trying to solve, or the people we are trying to solve it for, or the business we&amp;rsquo;re trying to solve it with.&lt;/p&gt;
&lt;p&gt;Our clients bring domain expertise, but they&amp;rsquo;re often so far into the details that they need us to help them step back and understand the bigger picture. When you&amp;rsquo;re down in the details, it&amp;rsquo;s easy to get focused on optimizing a local maxima, instead of stepping back and seeing the global optimizations. That&amp;rsquo;s where innovation lies, and it takes all three roles to do that.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We must develop empathy for our users and our clients.&lt;/strong&gt; We must understand the problems they&amp;rsquo;re trying to solve. We must understand the hypothesis we&amp;rsquo;re testing at any given time, and how we&amp;rsquo;re validating our learnings. We participate in user research and synthesis. We support our amazing product managers and product designers, because it&amp;rsquo;s only when all three roles work together that we truly help our clients.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In sum: we don&amp;rsquo;t just &amp;ldquo;build it right&amp;rdquo;; we &amp;ldquo;build the &lt;em&gt;right thing right.&lt;/em&gt;&amp;quot;&lt;/strong&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Test-Driven Development</title>
      
      <link>/outcomes/cloud-native-development/general__tdd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/general__tdd/</guid>
      <description>

        
        &lt;p&gt;Testing is crucial to cloud native application development. It is our primary (and sometimes only) way to build confidence that we can push to production at any given time.&lt;/p&gt;
&lt;h2 id=&#34;test-types&#34;&gt;Test Types&lt;/h2&gt;
&lt;p&gt;In many traditional organizations with independent, quality assurance and testing teams, software engineers may only leverage unit tests. As a &lt;a href=&#34;/outcomes/application-development/balanced-teams/&#34;&gt;balanced team&lt;/a&gt; with complete ownership of releases, we write and own an extensive spectrum of tests for our app. These include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unit Tests&lt;/li&gt;
&lt;li&gt;Integration Tests&lt;/li&gt;
&lt;li&gt;Contract Tests&lt;/li&gt;
&lt;li&gt;Behavior Tests&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While we may use some additional layers such as end-to-end tests or automated UI tests, these are the most expensive to run. We look to build confidence with the other leaner test layers when possible.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Read what &lt;a href=&#34;https://martinfowler.com/bliki/TestPyramid.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Martin Fowler&lt;/a&gt; and &lt;a href=&#34;https://martinfowler.com/articles/practical-test-pyramid.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;his team&lt;/a&gt; have to say on the test pyramid, and how it provides a solid foundation for answering questions such as &amp;ldquo;at which layer should I test this functionality?&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read &lt;a href=&#34;https://spring.io/blog/2016/04/15/testing-improvements-in-spring-boot-1-4&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;this article&lt;/a&gt; to learn more on testing various slices of your Spring Boot application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read through the &lt;a href=&#34;https://cloud.spring.io/spring-cloud-contract/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Quick Start Guide&lt;/a&gt; on Consumer-Driven Contract testing with Spring Cloud Contract.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read &lt;a href=&#34;https://docs.cucumber.io/bdd/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;an introduction&lt;/a&gt; to behavior-driven development (BDD) and run through &lt;a href=&#34;https://docs.cucumber.io/guides/10-minute-tutorial/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;the basic tutorial&lt;/a&gt; on using Cucumber in a Java project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-basics-of-test-driven-development&#34;&gt;The Basics of Test Driven Development&lt;/h2&gt;
&lt;p&gt;Now that you know the tools you have to test your application, it&amp;rsquo;s time to learn how to use those tools in your development project.&lt;/p&gt;
&lt;p&gt;VMware Tanzu develops software using the test-driven development methodology of writing tests to describe our intended behavior. First, we write tests, see our tests fail, build the functionality to make our tests pass, and clean up any technical debt created during the process. This approach is often referred to as the &amp;ldquo;red-green-refactor&amp;rdquo; loop.
The best way to learn about test-driven development is to do some of it! Pairing with an experienced software engineer will give you lots of practice. Or, if you prefer to do it yourself, you can prepare by reading &lt;a href=&#34;https://medium.com/@marlenac/learning-tdd-with-katas-3f499cb9c492&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;this article on TDD exercises&lt;/a&gt; and running through some of the &lt;a href=&#34;https://github.com/testdouble/contributing-tests/wiki/Greeting-Kata&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;first requirements for the Greeting exercise&lt;/a&gt; in your IDE.&lt;/p&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Read linked articles on the test pyramid and specific kinds of testing.&lt;/li&gt;
&lt;li&gt;Run through at least three requirements from the Greeting exercise.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;additional-resources&#34;&gt;Additional resources&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Review the &lt;a href=&#34;/outcomes/application-development/test-driven-development/&#34;&gt;foundaments of Test Driven Development&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: We Generalize (in technologies and domains)</title>
      
      <link>/outcomes/application-development-how-we-work/generalize-in-technologies-and-domains/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development-how-we-work/generalize-in-technologies-and-domains/</guid>
      <description>

        
        &lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;I only work in Healthcare&amp;rdquo;.
&amp;ldquo;I only design for iOS.&amp;rdquo;
&amp;ldquo;I only write Java.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These are not phrases we say.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Our mission is to &lt;em&gt;catalyze enterprise transformation through software.&lt;/em&gt;&lt;/strong&gt; Well, the world is big and full of diverse organizations. There are countless technologies and industries out there, with a baffling array of software languages, design systems, frameworks, platforms, user experience metaphors, and more. When clients come to us, &lt;strong&gt;we don&amp;rsquo;t force a single technology stack or design system upon them.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This means that we always have to be ready to apply our craft in a variety of languages, tech stacks, design systems, and industries. Languages like Java, Kotlin, Javascript, Go, and dozens more. Backend web frameworks like Spring MVC, Ruby on Rails, Express, and Phoenix. Batch and ETL frameworks. Distributed systems frameworks. Unit, functional, and system testing frameworks. And of course we have to know how to leverage cloud technologies like Kubernetes, Docker, our many Tanzu offerings, AWS, GCP, and Azure. And that&amp;rsquo;s not even diving into build tools, CI/CD systems, databases, and message queues!&lt;/p&gt;
&lt;p&gt;This may sound daunting. You might be saying, &amp;ldquo;there&amp;rsquo;s no way one person could know all of those things.&amp;rdquo; And yet, there are many of us who have learned all of these things, and more. &lt;strong&gt;Within Tanzu Labs, we have a truly unique opportunity to work in a wide variety of business domains, design systems, languages, and technologies.&lt;/strong&gt; And our learning and pairing culture helps us spread knowledge incredibly fast.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The more business domains, languages, frameworks, and technologies we&amp;rsquo;re exposed to, the easier learning new ones becomes.&lt;/strong&gt; In reality, they have more similarities than differences. And we also hone the most essential skill that anyone should have: &lt;strong&gt;&lt;em&gt;we learn how to learn.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;An avowed specialist—someone who focuses exclusively on a narrow set of skills—is by and large a liability for us as a consulting organization. &lt;strong&gt;If someone only specializes in one or two technologies, industries, or design systems, they  limit the number of clients they can help,&lt;/strong&gt; and there is no guarantee that we&amp;rsquo;ll have projects available that match their narrow skill set.&lt;/p&gt;
&lt;p&gt;If an organization is full of specialists, the organization is limited in its ability to react to an ever changing list of challenges; this is true for product as well as services orgs.&lt;/p&gt;
&lt;p&gt;To be clear, we do turn down projects, but we want to do so because we and the prospective client are not a good fit for one another, not because we can&amp;rsquo;t – &lt;em&gt;or refuse to!&lt;/em&gt; – work in their tech stack or learn their business. For a services org, allocations (the process wherein leadership decides who works on what) is already an incredibly challenging problem even with an office of generalists. &lt;strong&gt;When everyone in an office specializes, instead of generalizing, allocations become impossible.&lt;/strong&gt; These are the reasons why Tanzu Labs advocates so hard for full-stack development and domain generalists.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Within Tanzu Labs, we have an intrinsic passion for exploring our profession.&lt;/strong&gt; We try out new languages, frameworks, and problem-solving techniques with each other. And we write blog posts. And we attend meetups (or organize them ourselves!). And we give talks in the offices or for our regions. And we present at conferences. We don&amp;rsquo;t just do all of these things for VMware; we do it for ourselves, and our career, and &lt;strong&gt;for the community&lt;/strong&gt; ❤️.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Pair Programming</title>
      
      <link>/outcomes/application-development/pair-programming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development/pair-programming/</guid>
      <description>

        
        &lt;p&gt;Lennon and McCartney. Penn and Teller. Venus and Serena.&lt;/p&gt;
&lt;p&gt;Some of the greatest achievements in history were produced by pairs of great minds working side-by-side on the same task. Software is no exception.&lt;/p&gt;
&lt;p&gt;At Tanzu Labs, we are known for being on the cutting edge of Agile software development—some might even say &lt;a href=&#34;https://en.wikipedia.org/wiki/Extreme_programming&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;extreme&lt;/a&gt;. One software development technique in which we believe deeply is pair programming.&lt;/p&gt;
&lt;p&gt;Pair programming helps the team produce high quality software while also helping everyone on the development team have a broader understanding of the software. There are some challenges to pair programming but we’ve proven time again across hundreds of projects that the benefits far outweigh the costs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/pair-programming.jpg&#34; alt=&#34;Pair Programming&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-you-will-learn&#34;&gt;What you will learn&lt;/h2&gt;
&lt;p&gt;In this article, you will learn to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#define-pair-programming-and-remote-pair-programming&#34;&gt;Define pair programming and remote pair programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#list-at-least-five-potential-benefits-of-pair-programming&#34;&gt;List at least five potential benefits of pair programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#list-at-least-five-potential-challenges-of-pair-programming&#34;&gt;List at least five potential challenges of pair programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#describe-the-mechanics-of-the-drivernavigator-style-of-pair-programming&#34;&gt;Describe the mechanics of the driver/navigator style of pair programming&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;define-pair-programming-and-remote-pair-programming&#34;&gt;Define pair programming and remote pair programming&lt;/h2&gt;
&lt;p&gt;Pair programming is a software development technique whereby two programmers work on the same problem, at the same time, on the same computer, with the goal of producing high quality software quickly.&lt;/p&gt;
&lt;p&gt;Regarding “on the same computer,” we do not mean two people hunched over a tiny laptop. When co-located, we recommend setting up two large monitors, two sets of keyboards, two mice, and two sets of anything else the pair needs to work effectively together, such as a laptop docking station.&lt;/p&gt;
&lt;p&gt;If the pair is not co-located, &lt;a href=&#34;https://tanzu.vmware.com/content/blog/5-tips-for-effective-remote-pair-programming-while-working-from-home&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;remote pair programming&lt;/a&gt; is a good alternative. Remote pair programming is pair programming with the help of commonly available collaboration software.&lt;/p&gt;
&lt;h2 id=&#34;list-at-least-five-potential-benefits-of-pair-programming&#34;&gt;List at least five potential benefits of pair programming&lt;/h2&gt;
&lt;p&gt;“Done” does not mean the developers have committed their code and lifted their fingers off their keyboards. For VMware Tanzu Labs, “done” means low-defect software delivered to users in production that does not need rework due to errors or missed requirements. Pair programming helps accomplish this mission in the following ways:&lt;/p&gt;
&lt;h3 id=&#34;code-quality-benefits&#34;&gt;Code quality benefits&lt;/h3&gt;
&lt;p&gt;The most beneficial outcome of pair programming is the quality of the code written by the team. As pairs switch (often daily), everyone has a chance to contribute  and refine the system they are developing. Benefits include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fewer bugs&lt;/li&gt;
&lt;li&gt;Better system design&lt;/li&gt;
&lt;li&gt;More understandable code&lt;/li&gt;
&lt;li&gt;Wider code testing coverage&lt;/li&gt;
&lt;li&gt;“Fresh eyes” to help expose hidden flaws&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;time-to-production-benefits&#34;&gt;Time-to-production benefits&lt;/h3&gt;
&lt;p&gt;While pair programming does support shipping high quality code to production quickly, predictability is a more important benefit over speed. Radical swings in delivery velocity introduce risk into the development cycles — pair programming helps mitigate swings in delivery velocity in the following ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intense focus on the task at hand&lt;/li&gt;
&lt;li&gt;Less rework&lt;/li&gt;
&lt;li&gt;More accurate implementation of requirements&lt;/li&gt;
&lt;li&gt;Less time in QA&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;knowledge-sharing-benefits&#34;&gt;Knowledge sharing benefits&lt;/h3&gt;
&lt;p&gt;While pair programming, not only are two people working on the same difficult problem together, they are also constantly teaching one another in the following ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New team member onboarding&lt;/li&gt;
&lt;li&gt;Junior developers learning from senior developers&lt;/li&gt;
&lt;li&gt;Senior developers learning from junior developers — it’s true!&lt;/li&gt;
&lt;li&gt;Tips and tricks sharing&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;collective-ownership-benefits&#34;&gt;Collective ownership benefits&lt;/h3&gt;
&lt;p&gt;Individual ownership of features, modules, and even entire systems is both common and tempting &amp;ndash; it&amp;rsquo;s comforting to know someone is responsible for something important. This pattern is also extremely risky since people switch jobs, have life events that make them unavailable, and other factors that impact delivery velocity. Pair programming mitigates these risks in the following ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Breaking down knowledge silos&lt;/li&gt;
&lt;li&gt;Countering &amp;ldquo;hero&amp;rdquo; culture&lt;/li&gt;
&lt;li&gt;Reduce the &lt;a href=&#34;https://en.wikipedia.org/wiki/Bus_factor&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;“bus factor” or “lottery factor”&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;team-building-benefits&#34;&gt;Team building benefits&lt;/h3&gt;
&lt;p&gt;Pair programming isn’t all about the code — it’s also all about the people who write the code.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shared pride of ownership of the code and product&lt;/li&gt;
&lt;li&gt;Building empathy with one another&lt;/li&gt;
&lt;li&gt;Interpersonal skills development&lt;/li&gt;
&lt;li&gt;Social interaction&lt;/li&gt;
&lt;li&gt;Happier, more motivated employees&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;list-at-least-five-potential-challenges-of-pair-programming&#34;&gt;List at least five potential challenges of pair programming&lt;/h2&gt;
&lt;p&gt;The benefits of pair programming are clear, but those benefits don’t come cheaply. Pairing is hard. Without a doubt, the most difficult challenge of pair programming is &lt;strong&gt;&lt;em&gt;the willingness to give it an honest try&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Pair programming means not only sharing what we know, but also exposing how much we don’t know. For many people in the software industry this contradicts the rock-star-ninja-hacker-wizard image bestowed upon developers. Accepting that we all have areas of growth is important for successful pair programming, especially since you and your pair are in the same boat: both of you are sharing what you know and exposing what you don’t know at the same time. By complementing each other’s abilities, you become greater than the sum of both of your skills and experience.&lt;/p&gt;
&lt;p&gt;Other challenges include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Being made fun of by others in the organization &amp;ndash; it happens!&lt;/li&gt;
&lt;li&gt;Different code editor preferences and computer configuration&lt;/li&gt;
&lt;li&gt;Differing schedules&lt;/li&gt;
&lt;li&gt;Ergonomics, such as physical desk and office configurations&lt;/li&gt;
&lt;li&gt;Falling behind on emails, chat threads, and other communication channels&lt;/li&gt;
&lt;li&gt;For remote pair programming: infrastructure, tools, network speed, security restrictions&lt;/li&gt;
&lt;li&gt;Individual cultural differences&lt;/li&gt;
&lt;li&gt;Interruptions and distractions imposed by other responsibilities&lt;/li&gt;
&lt;li&gt;Mental and physical exhaustion&lt;/li&gt;
&lt;li&gt;Organizational resistance&lt;/li&gt;
&lt;li&gt;Perception that it’s “twice the cost” a developers programming alone&lt;/li&gt;
&lt;li&gt;Personality conflicts&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;describe-the-mechanics-of-the-drivernavigator-style-of-pair-programming&#34;&gt;Describe the mechanics of the driver/navigator style of pair programming&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://martinfowler.com/articles/on-pair-programming.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;While there are many pair programming styles&lt;/a&gt;, our experience shows most are a variation of the &lt;strong&gt;driver/navigator&lt;/strong&gt; style. At any given moment, the &lt;strong&gt;driver&lt;/strong&gt; has their fingers on the keyboard, coding and implementing the next logic statement. At the same time, the &lt;strong&gt;navigator&lt;/strong&gt; is looking back at what was just written, suggesting the next course of action, and strategically thinking further ahead. Research shows and our experience confirms that our brains have difficulty performing high-level strategizing and detailed execution at the same time, which is why two heads working together is better than one in complex problem-solving situations. Pairing addresses this conundrum by having one person for each role.&lt;/p&gt;
&lt;p&gt;The pair should switch driver/navigator roles on a regular basis. Sometimes this happens organically to create a “balanced” pairing session. We do recommend a few different pair programming formats for those new to pair programming, for pairs finding their driver/navigator time to be unbalanced, or for those who want to introduce variety into their pairing sessions. More details about each of these are in the blog post &lt;em&gt;&lt;a href=&#34;https://tanzu.vmware.com/content/blog/what-s-the-best-way-to-pair&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;What’s the Best Way to Pair?&lt;/a&gt;&lt;/em&gt; by Maya Rosecrance and Sarah Connor.&lt;/p&gt;
&lt;h3 id=&#34;go-with-the-flow&#34;&gt;Go with the Flow&lt;/h3&gt;
&lt;p&gt;Just go for it! Sit down, start pairing, and ride whatever driver/navigator pattern emerges. The pair should be disciplined about switching roles, and be cognisant of whether they are falling into an unbalanced driver/navigator pattern.&lt;/p&gt;
&lt;h3 id=&#34;pomodoro&#34;&gt;Pomodoro&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Pomodoro_Technique&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Pomodoro&lt;/a&gt; is a dependable study technique where a timer is used to signal the switch between roles, taking breaks, or even switching pairs entirely. Typically, this is 25 minutes of work, followed by a 5-minute break.&lt;/p&gt;
&lt;h3 id=&#34;tdd-ping-pong&#34;&gt;TDD Ping-Pong&lt;/h3&gt;
&lt;p&gt;“Ping-Pong” pairing is a natural complement to &lt;a href=&#34;https://en.wikipedia.org/wiki/Test-driven_development&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Test Driven Development (TDD)&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt; The classic Ping Pong technique first has the driver write a failing test for some desired functionality that is not yet implemented. The pair switches roles, having the new driver implement the minimum necessary code in order to pass the test. That driver then writes the next failing test and the cycle continues, with each person equally sharing test-writing and functionality-implementation duties.&lt;/p&gt;
&lt;h3 id=&#34;switch-roles-on-research&#34;&gt;Switch Roles on Research&lt;/h3&gt;
&lt;p&gt;Switch roles any time the pair wants to research something further. This helps reduce the impulse to separate and research individually, which can sometimes evolve into an excuse to stop pairing entirely.&lt;/p&gt;
&lt;h3 id=&#34;pairmateone-keyboard&#34;&gt;Pairmate/One-keyboard&lt;/h3&gt;
&lt;p&gt;A small item like a stuffed animal or tchotchke can be used to signal who is navigating. The navigator holds the item to signal that they are not to touch the keyboard until that item is passed off (physically or virtually when remote) to the other. Alternatively, the item can be removed, and the pair shares a single keyboard or toggles remote-keyboard control as needed.&lt;/p&gt;
&lt;h3 id=&#34;task-list&#34;&gt;Task List&lt;/h3&gt;
&lt;p&gt;The pair decides on a set of tasks that need to be accomplished and switches after each is completed. Tasks can be created, modified, or deleted as the pair progresses. Ideally each takes about the same amount of time to complete.&lt;/p&gt;
&lt;h2 id=&#34;in-this-article-you-learned-to&#34;&gt;In this article, you learned to:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Define pair programming and remote pair programming&lt;/li&gt;
&lt;li&gt;List at least five potential benefits of pair programming&lt;/li&gt;
&lt;li&gt;List at least five potential challenges of pair programming&lt;/li&gt;
&lt;li&gt;Describe the mechanics of the driver/navigator style of pair programming&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;keep-learning&#34;&gt;Keep Learning&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Blog: &lt;a href=&#34;https://tanzu.vmware.com/content/blog/what-s-the-best-way-to-pair&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;What’s the Best Way to Pair?&lt;/a&gt; by Maya Rosecrance and Sarah Connor.&lt;/li&gt;
&lt;li&gt;Blog: &lt;a href=&#34;https://tanzu.vmware.com/content/blog/5-tips-for-effective-remote-pair-programming-while-working-from-home&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;5 Tips for Effective Remote Pair Programming While Working from Home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Video: &lt;a href=&#34;https://www.youtube.com/watch?v=RCDfBioUgts&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;I&amp;rsquo;ve Pair Programmed for 30,000 Hours: Ask Me Anything! — Joe Moore&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;related-topics-to-pair-programming&#34;&gt;Related topics to Pair Programming&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/agile&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Agile software development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Test Driven Development&lt;/li&gt;
&lt;li&gt;Automate who pairs with whom with &lt;a href=&#34;https://parrit.io/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Parrit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Using Tanzu Application Service (TAS)</title>
      
      <link>/outcomes/cloud-native-development/general__using_tas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/general__using_tas/</guid>
      <description>

        
        &lt;p&gt;VMware &lt;a href=&#34;https://tanzu.vmware.com/application-service&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Tanzu Application Service&lt;/a&gt; (TAS), formerly Pivotal Cloud Foundry (PCF), is a modern application platform that provides a best-in-class developer experience. It is based on Cloud Foundry, an open-source cloud app platform providing a choice of clouds, developer frameworks, and app services.&lt;/p&gt;
&lt;p&gt;Even if you spend most of your time working on software code, it is essential to know how to use the TAS platform to deploy applications. Even more so, it is imperative to understand how to work with your own TAS environment. Every TAS installation operates the same way, but there are many ways to interact with it. Your company may have its own process for getting an account, organizations, spaces, and apps up and running.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s important to push the application to the platform as early as possible in order to get quick feedback on what is working and what is not. The primary ways to work with the platform are the Command Line Interface (CLI) and the apps manager web application.&lt;/p&gt;

&lt;div class=&#34;callout td-box--gray-darkest p-3 mx-5 border-bottom border-right border-left border-top&#34;&gt;
    &lt;p&gt;Note: At the time of writing, VMware is still transitioning from Cloud Foundry to Tanzu tools and nomenclature. In this article you should expect to see a mix of Cloud Foundry and TAS references, such as the &lt;code&gt;cf&lt;/code&gt; command line interface.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&#34;command-line-interface&#34;&gt;Command Line Interface&lt;/h2&gt;
&lt;p&gt;The platform provides an API for you to interact with it. The simplest way to work with the API is through the command-line tools provided by the &lt;a href=&#34;https://www.cloudfoundry.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Cloud Foundry&lt;/a&gt; project.&lt;/p&gt;
&lt;p&gt;Note: Run through the &lt;a href=&#34;https://katacoda.com/cloudfoundry-tutorials/scenarios/trycf&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Try Cloud Foundry&lt;/a&gt; tutorial to set up your local command-line tools and get a local TAS test environment as a bonus. You&amp;rsquo;ll get a local test environment up and running, then push a demo app running through the common CLI commands.&lt;/p&gt;
&lt;h2 id=&#34;apps-manager&#34;&gt;Apps Manager&lt;/h2&gt;
&lt;p&gt;TAS, VMware&amp;rsquo;s enterprise-class distribution of Cloud Foundry, has many useful features to help companies provide easy access to their platform users. For software development teams, the primary application is Apps Manager. For more information, go to the Apps Manager &lt;a href=&#34;https://docs.pivotal.io/application-service/2-11/console/dev-console.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Find the URL for your development or sandbox TAS Apps Manager and try logging into it. Once you can access it, try pushing the same demo app from the TAS Dev tutorial above your company org and space.&lt;/p&gt;
&lt;h2 id=&#34;tas-and-cloud-foundry-concepts&#34;&gt;TAS and Cloud Foundry Concepts&lt;/h2&gt;
&lt;p&gt;You may have already run into terms and concepts like &amp;ldquo;organizations&amp;rdquo;, &amp;ldquo;spaces&amp;rdquo;, and &amp;ldquo;instances&amp;rdquo; in the above exercises.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read &lt;a href=&#34;https://docs.pivotal.io/application-service/2-11/concepts/overview.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;this overview of TAS for VMs&lt;/a&gt; for a birds-eye view of how the platform works.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Run through the &lt;a href=&#34;https://katacoda.com/cloudfoundry-tutorials/scenarios/trycf&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Try Cloud Foundry&lt;/a&gt; tutorial.&lt;/li&gt;
&lt;li&gt;Get access to your company&amp;rsquo;s Apps Manager and push your application to your Company&amp;rsquo;s TAS environment.&lt;/li&gt;
&lt;li&gt;Read through the &lt;a href=&#34;https://docs.pivotal.io/application-service/2-11/concepts/overview.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;overview of TAS for VMs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: We Specialize (in craft)</title>
      
      <link>/outcomes/application-development-how-we-work/specialize-in-craft/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development-how-we-work/specialize-in-craft/</guid>
      <description>

        
        &lt;p&gt;Before you read this section, we want to emphasize this: &lt;strong&gt;&lt;em&gt;we don&amp;rsquo;t expect anyone to know everything described here day one.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Craft isn&amp;rsquo;t something we either know or don&amp;rsquo;t know &amp;ndash; craft is a lifelong process. It&amp;rsquo;s a combination of skills, experiences, and wisdom that grows day over day, year over year — and remember, we&amp;rsquo;re all on this journey together.&lt;/p&gt;
&lt;p&gt;Each discipline might specialize in their craft differently. Learn about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Craft &lt;strong&gt;For Engineers&lt;/strong&gt; (coming soon).&lt;/li&gt;
&lt;li&gt;Craft &lt;strong&gt;For Product Designers&lt;/strong&gt; (coming soon).&lt;/li&gt;
&lt;li&gt;Craft &lt;strong&gt;For Product Managers&lt;/strong&gt; (coming soon).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We must hone our craft responsibly. We all teach each other our craft, and improve our craft based not only on our experiences, but the experiences of others. We lean on each other for guidance and wisdom when we&amp;rsquo;re unsure if a design pattern, architecture, metric, or UX flow is appropriate.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Continuous Integration and Delivery</title>
      
      <link>/outcomes/cloud-native-development/general__ci_cd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/general__ci_cd/</guid>
      <description>

        
        &lt;p&gt;Automate everything. Any time we have manual processes or required intervention, we have friction in the machinery that allows us to release fast at a moment’s notice. There are many tools to support continuous build, integration, and delivery of software, and your company may already have selected the tools to use. This is usually the &lt;a href=&#34;https://www.jenkins.io/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Jenkins&lt;/a&gt; or &lt;a href=&#34;https://concourse-ci.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Concourse CI&lt;/a&gt; platforms but can include &lt;a href=&#34;https://www.atlassian.com/software/bamboo&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Atlassian Bamboo&lt;/a&gt;, or cloud build provides such as &lt;a href=&#34;https://circleci.com/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;CircleCI&lt;/a&gt;, &lt;a href=&#34;https://travis-ci.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;TravisCI&lt;/a&gt;, or &lt;a href=&#34;https://docs.oracle.com/en/cloud/iaas-classic/wercker-cloud/index.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Oracle Container Pipelines&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While we can work with many of these tools, Concourse provides one of the purest abstractions of declarative pipelines and is our preferred tool when there is no solution in place. It is beneficial to run through the &lt;a href=&#34;https://github.com/concourse/concourse/wiki/Tutorials&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Learning Concourse tutorial&lt;/a&gt; to understand the core tenets of building with pipelines checked into your source control along with your application. Even if you end up building your applications with Jenkins or another tool, Concourse’s core concepts are great for discussing the various challenges and solutions to continuous software delivery.&lt;/p&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Run through the &lt;a href=&#34;https://github.com/concourse/concourse/wiki/Tutorials&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Learning Concourse tutorial&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;additional-resources&#34;&gt;Additional resources&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Review the &lt;a href=&#34;/outcomes/secure-software-supply-chain/what-is-ci-cd/&#34;&gt;Introduction of Secure Software Supply Chains&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Test Driven Development</title>
      
      <link>/outcomes/application-development/test-driven-development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development/test-driven-development/</guid>
      <description>

        
        &lt;p&gt;Test Driven Development (TDD) is a software development practice where a test case describing desired functionality is written before the production code. When that test is executed, it fails because the supporting functionality does not exist yet. After writing the minimum functionality to satisfy the test parameters, the code is &lt;a href=&#34;https://en.wikipedia.org/wiki/Code_refactoring&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;refactored&lt;/a&gt; to improve the design. This cycle is repeated until all requested functionality is implemented.
These tests serve as a guide for development of the production code by acting as the first “client” or “user” for the system. In addition, the tests provide a regression suite for the completed code.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/go-fast-forever.png&#34; alt=&#34;Balanced Team Diagram&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-you-will-learn&#34;&gt;What you will learn&lt;/h2&gt;
&lt;p&gt;In this article, you will learn to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#define-end-to-end-tests&#34;&gt;Define End-to-End Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#define-unit-tests&#34;&gt;Define Unit Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#define-integration-tests&#34;&gt;Define Integration Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#draw-a-testing-pyramid&#34;&gt;Draw a “testing pyramid” representing End-to-End, Integration and Unit Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#describe-how-tdd-allows-teams-to-go-fast-forever&#34;&gt;Describe how TDD allows teams to go fast “forever”&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;define-end-to-end-tests&#34;&gt;Define End-to-End Tests&lt;/h2&gt;
&lt;p&gt;An End-to-End test exercises the system using the same interface that an end user would use.&lt;/p&gt;
&lt;p&gt;For a web based application with an HTML user interface, these tests simulate user interactions via a web browser. They typically require a &lt;a href=&#34;https://en.wikipedia.org/wiki/Headless_browser&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;headless browser&lt;/a&gt; to be installed so that the computer running the tests can simulate browser based interactions. For an &lt;a href=&#34;https://en.wikipedia.org/wiki/API&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;API-based application&lt;/a&gt;, these tests use API calls to simulate how a client application interacts with the system.&lt;/p&gt;
&lt;p&gt;End-to-End Tests are relatively slow to run because simulating a user’s interactions, such as clicking buttons, uploading images, or API network calls can be slow operations. However, End-to-End Tests can give a team confidence that no user-facing interactions are broken when code changes are made. When writing End-to-End Tests, covering the major, important user flows allows a high measure of confidence while minimizing the time it takes to run a test suite.&lt;/p&gt;
&lt;h3 id=&#34;test-after-vs-test-driven&#34;&gt;Test-after vs. test-driven&lt;/h3&gt;
&lt;p&gt;When writing an End-to-End Test after feature(s) have been implemented, the team risks reinforcing incorrect behavior. For example, in a website you might build a test that replicates an existing navigation path even though that navigation path is incorrect.&lt;/p&gt;
&lt;p&gt;When test driving, you might first write a navigation test that runs “click link A, then button B, then confirmation C” in correspondence with a new &lt;a href=&#34;https://en.wikipedia.org/wiki/User_story#:~:text=In%20software%20development%20and%20product,digitally%20in%20project%20management%20software.&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;user story&lt;/a&gt; even though that navigation path does not yet exist. While implementing the functionality, run the tests regularly to verify the following one-by-one:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;First, the “click link A” test parameter fails because we haven’t implemented anything at all.&lt;/li&gt;
&lt;li&gt;After implementing link A,  “click link A” passes, but “click button B” fails.&lt;/li&gt;
&lt;li&gt;After implementing that requirement, only “click confirmation C” is failing.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When everything passes, the user story is done.&lt;/p&gt;
&lt;h2 id=&#34;define-unit-tests&#34;&gt;Define Unit Tests&lt;/h2&gt;
&lt;p&gt;A Unit Test exercises a small part of the system that is isolated from the rest of the system. Sometimes it is a single class, file, or function, but it can also be a set of these that operate together through a single public interface.&lt;/p&gt;
&lt;p&gt;Unit Tests are used as the primary design tool for inter-class interactions within a system. Because you are constantly running these tests to shape the system, you want to keep the feedback loops as quick as possible. By isolating these tests from the rest of the system and external dependencies like databases or network calls, they can run quickly for maximum speed of feedback.&lt;/p&gt;
&lt;h3 id=&#34;test-after-vs-test-driven-1&#34;&gt;Test-after vs. test-driven&lt;/h3&gt;
&lt;p&gt;As with End-to-End testing, writing tests after the production code is implemented risks reinforcing incorrect behavior. For example, you might observe that a function performing a complex calculation returns a value of “4200” and write that into your test validation, not realizing the correct calculation is &lt;em&gt;&lt;strong&gt;“-4200”.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;With test-driving, you set up the expected value in your test, asserting the calculated value is “-4200”. This test fails because you have not implemented the calculation yet; but, you&amp;rsquo;ve already worked out what the value should be in your test. Using this, you can implement the function and have confidence its correct when the test passes.&lt;/p&gt;
&lt;h2 id=&#34;define-integration-tests&#34;&gt;Define Integration Tests&lt;/h2&gt;
&lt;p&gt;An Integration Test exercises a subset of the system. They differ from End-to-End Tests in that they do not have to simulate user interactions and they differ from Unit Tests in that they exercise groups of “units” in one test.&lt;/p&gt;
&lt;p&gt;Integration Tests operate on smaller parts of the system than End-to-End Tests, thus running faster. They also test larger parts than unit tests, thus running slower than unit tests.&lt;/p&gt;
&lt;p&gt;Because they are “smaller” than End-to-End Tests, they can be useful in tracking down bugs because they encompass a smaller part of the system. However, because they are “bigger” than a Unit Test, they do not allow for the fine grained design feedback that you get with unit tests.&lt;/p&gt;
&lt;h2 id=&#34;draw-a-testing-pyramid&#34;&gt;Draw a “testing pyramid”&lt;/h2&gt;
&lt;p&gt;As you’ve learned above, tests can be written at different levels of the system. At each level, there is a balance between speed of execution, the cost to maintain the test, and the confidence it brings to the correctness of the system.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/testing-pyramid.png&#34; alt=&#34;Balanced Team Diagram&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;End-to-End Tests: Fewest and most expensive.&lt;/strong&gt; End-to-End Tests are slower to run because they use simulated user interactions. They can also be fragile and susceptible to false-negatives because they rely on the quality and accuracy of user-simulation tools, such as web browser interaction tools, and other difficult to control factors, such as network latency.&lt;/p&gt;
&lt;p&gt;In addition, changes to the user interface might require significant End-to-End Test rewrites even when the underlying functionality has not changed. These, and other related factors make End-to-End Tests “expensive” to maintain. You want to minimize the number of these to keep the test suite running quickly and minimize maintenance headaches while still covering the key flows of the system, either from a user interface or an API endpoint.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unit Tests: Highest number and least expensive.&lt;/strong&gt; You want the most Unit Tests in your test suite because they are the key way to design highly cohesive, loosely coupled software. Because you have kept them running quickly, the number of tests should not adversely affect the running time of the test suite. Also, the isolated nature of unit tests means changes in one area of the system do not require changes to other areas, making maintenance of Unit Tests minimal.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Integration Tests: somewhere in the middle.&lt;/strong&gt; You want more Integration Tests than End-to-End Tests because they balance speed of execution and test maintenance with coverage of the system. However, too many Integration Tests can quickly slow down a test suite and make the feedback from the Unit Tests decrease in value.&lt;/p&gt;
&lt;p&gt;A slow test suite is a signal that your testing pyramid might be “upside down” and you should focus more on Unit Tests to drive the design, and ensure the correctness of your software.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/inverted-testing-pyramid.png&#34; alt=&#34;Balanced Team Diagram&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;describe-how-tdd-allows-teams-to-go-fast-forever&#34;&gt;Describe how TDD allows teams to go fast “forever”&lt;/h2&gt;
&lt;p&gt;TDD gives teams the confidence to refactor application code to keep it clean so that they can go fast forever.&lt;/p&gt;
&lt;h3 id=&#34;going-fast-for-a-while&#34;&gt;Going fast for a while&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/speed-time-1.jpg&#34; alt=&#34;Sacrificing speed for sustainability curve&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;This diagram shows how a team just starting out can add functionality very quickly because they do not have a lot of code to work with. Unfortunately as time goes on and the codebase grows, the team can’t add functionality as quickly because the codebase starts to “resist” the addition of new functionality. This happens because the team has sacrificed long-term sustainability for short-term development speed. Eventually the rate of addition slows to a crawl.&lt;/p&gt;
&lt;p&gt;Even small changes become increasingly complex due to highly coupled modules. Why?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Developers fear changing the system because changes have unknown side effects.&lt;/li&gt;
&lt;li&gt;Knowledge of how and why the code works as it does decreases over time.&lt;/li&gt;
&lt;li&gt;Changes to the system result in regressions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;going-fast-forever&#34;&gt;Going fast forever&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/speed-time-2.jpg&#34; alt=&#34;TDD Enables Steady State&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;In the second diagram, the codebase does not resist the addition of functionality as time goes on. Instead, it gets to a steady state of change velocity regardless of the length of time since the start of the project.&lt;/p&gt;
&lt;p&gt;Changes are less complex, thanks in part to TDD helping enforce highly cohesive yet loosely coupled modules. Why?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Developers do not fear changes because the tests clearly reveal any side effects.&lt;/li&gt;
&lt;li&gt;Knowledge of how and why the code works as it does is captured forever within the tests as “executable documentation”.&lt;/li&gt;
&lt;li&gt;Changes that would result in regressions are exposed in test failures.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is a cost to these benefits. The initial sprint of functionality does not go as fast as forgoing TDD. This cost is the investment in writing tests before production code and only writing enough production code to make the test pass before writing another test. These tests serve as the guardrails that give the team the confidence to continually refactor their code to keep it clean.&lt;/p&gt;
&lt;h2 id=&#34;in-this-article-you-learned-to&#34;&gt;In this article, you learned to:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Define End to End tests&lt;/li&gt;
&lt;li&gt;Define Unit Tests&lt;/li&gt;
&lt;li&gt;Define Integration tests&lt;/li&gt;
&lt;li&gt;Draw the “testing pyramid” representing End to End, Integration and Unit tests&lt;/li&gt;
&lt;li&gt;Describe how TDD allows teams to go fast “forever”&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;keep-learning&#34;&gt;Keep Learning&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://martinfowler.com/articles/practical-test-pyramid.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;The Practical Test Pyramid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/content/blog/why-tdd&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Why TDD?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;related-topics&#34;&gt;Related topics&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/agile&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Agile Software Development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: We Share Knowledge</title>
      
      <link>/outcomes/application-development-how-we-work/share-knowledge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development-how-we-work/share-knowledge/</guid>
      <description>

        
        &lt;p&gt;&lt;strong&gt;We are committed to helping others.&lt;/strong&gt; This requires communication, and most importantly, empathy. We learn how to work so well &lt;em&gt;with&lt;/em&gt; our clients and each other that we make progress better together than either of us would alone.&lt;/p&gt;
&lt;p&gt;For engineers and often all disciplines, this starts with pairing. &lt;a href=&#34;/outcomes/application-development/pair-programming/&#34;&gt;Pairing is a process of collaborative problem solving&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Though pairing is often associated with engineering (pair programming), &lt;strong&gt;PMs and designers are very often paired with client or company counterparts, too.&lt;/strong&gt; When we pair effectively, we learn at an order of magnitude faster than when we work alone. This means that we have a commitment to share our knowledge with our pairs.&lt;/p&gt;
&lt;p&gt;For all of us, we&amp;rsquo;re also part of teams. We share what we know and have learned with our whole team, and we offer our skills to our teams whenever they are valuable.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;And&lt;/em&gt; we&amp;rsquo;re also part of an office, regional group, and/or large multi-project effort. Our team might have solved a problem that another &amp;ldquo;near by&amp;rdquo; team is currently experiencing. &lt;strong&gt;We share our learnings with our peers on other teams, so that they don&amp;rsquo;t reinvent the wheel we&amp;rsquo;ve already invented.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;And&lt;/em&gt; we&amp;rsquo;re also part of a global practice that spans the world. Teams in one office might have solved problems that teams in other offices or areas are running into. We work continuously to share knowledge and experiences between offices, regions, and countries, and we want each of us to be a part of that effort — &lt;strong&gt;our collective only works when each of us remembers to reach beyond our local tribes and form a truly global hive mind.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;And&lt;/em&gt; we&amp;rsquo;re also part of a global company that&amp;rsquo;s more than just our consulting division. &lt;strong&gt;Our Tanzu R&amp;amp;D organization is continuing to iterate on &lt;a href=&#34;https://en.wikipedia.org/wiki/Extreme_programming&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;XP&lt;/a&gt;, Lean, and User Centered Design at scale — and we have to understand those evolutionary steps to apply them with everyone with whom we work.&lt;/strong&gt; They&amp;rsquo;re also building a set of products that help our companies address organizational and operational challenges at scale; we have to understand the value of those products, and how to effectively wield them.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;And&lt;/em&gt; we&amp;rsquo;re also part of a global product development community, of which VMware is only one small part. &lt;strong&gt;We encourage each other to give back to the community, to share our thoughts, our knowledge, our craft.&lt;/strong&gt; We encourage our Labs team members to write blog posts (we&amp;rsquo;ll publish them), give conference talks (we&amp;rsquo;ll pay for it), attend meetups — or even start meetups (we&amp;rsquo;ll host them!). We encourage everyone to &lt;em&gt;give back and share our time, tools, code, and approach with internal and open source communities to maximize impact&lt;/em&gt; ❤️.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Cloud Native Development</title>
      
      <link>/outcomes/application-development/cloud-native-development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development/cloud-native-development/</guid>
      <description>

        
        &lt;p&gt;Cloud Native is at the heart of modern application development endeavors. Used to depict engineering practices and state of the art applications, the term &amp;ldquo;cloud-native&amp;rdquo; is omnipresent and often misunderstood. There is a good chance that anyone you ask will provide a different definition.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/outcomes/application-development/cloud-native-development.jpg&#34; alt=&#34;Cloud Native Development&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-you-will-learn&#34;&gt;What you will learn&lt;/h2&gt;
&lt;p&gt;In this article, you will learn to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#meaning&#34;&gt;Define one meaning of cloud native&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#outcomes&#34;&gt;List three major outcomes of cloud native&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Explain the main cloud native concepts for the following:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#app-archi&#34;&gt;application architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sw-life-cycle&#34;&gt;software life-cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#support-infra&#34;&gt;supporting infrastructure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#culture&#34;&gt;team culture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#factors&#34;&gt;Identify the twelve factors of cloud native applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;meaning&#34;&gt;Define one meaning of cloud native&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;“Cloud is not a place; it’s a way of doing IT” - Michael Dell&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are many definitions for cloud native. The definition we use in this article is an approach to building and running applications that exploit the advantages of the cloud computing delivery model. At its heart, cloud native is structuring teams, culture, and technology to utilize automation and architectures to manage complexity and unlock velocity.&lt;/p&gt;
&lt;p&gt;Cloud native development, often referred to as modern application development, defines how applications are created and deployed. It does not define where the deployment occurs. For example, &lt;a href=&#34;https://www.vmware.com/topics/glossary/content/public-cloud&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;public cloud&lt;/a&gt;, &lt;a href=&#34;https://www.vmware.com/topics/glossary/content/private-cloud?SRC=WWW_US_GP_public-cloud_SiteLink&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;private cloud&lt;/a&gt;, &lt;a href=&#34;https://www.vmware.com/topics/glossary/content/hybrid-cloud?SRC=WWW_US_GP_public-cloud_SiteLink&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;hybrid cloud&lt;/a&gt;, &lt;a href=&#34;https://www.vmware.com/topics/glossary/content/multi-cloud?SRC=WWW_US_GP_private-cloud_SiteLink&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;multi-cloud&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;outcomes&#34;&gt;List three major outcomes of cloud native&lt;/h2&gt;
&lt;p&gt;Organizations that adopt cloud native practices and technology generally report the following outcomes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;More efficient and happier teams. Big problems are broken down into smaller pieces for more focused, efficient and responsive teams.&lt;/li&gt;
&lt;li&gt;Higher degree of automation, more determinism, less drudgery and less manual work. Infrastructure is self-healing, self-managed, and available as self-service.&lt;/li&gt;
&lt;li&gt;Increased non-functionalities for application landscape: improved reliability, portability, deep security, higher efficiency, and in-depth observability.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;concepts&#34;&gt;Explain the main cloud native concepts&lt;/h2&gt;
&lt;p&gt;Cloud native concepts are numerous. The following ones are the most common. They are sorted by their context:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#app-archi&#34;&gt;application architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sw-life-cycle&#34;&gt;software life-cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#support-infra&#34;&gt;supporting infrastructure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#culture&#34;&gt;team culture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;app-archi&#34;&gt;Application architecture&lt;/h3&gt;





&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Concept&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Twelve-factor application&lt;/td&gt;
&lt;td&gt;A set of &lt;a href=&#34;https://12factor.net/&#34;&gt;twelve principles and practices&lt;/a&gt; that developers follow to construct applications optimized for modern cloud environments. Those twelve factors are often used to determine how well an application leverages cloud native technologies.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Microservice architecture&lt;/td&gt;
&lt;td&gt;A software architectural style that functionally decomposes an application into a set of loosely coupled services. It is prevalent within companies craving greater agility and scalability. The microservices model is an alternative to traditional monolithic software consisting of tightly integrated modules that typically ship infrequently and scale as a single unit.  Microservices are not silver bullets, their drawbacks and benefits should be carefully weighed before use.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cloud Native Patterns&lt;/td&gt;
&lt;td&gt;A catalog of reusable solutions to recurring problems occurring in cloud native applications. Each pattern describes an architectural problem, its solution, and implied benefits, and drawbacks.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Domain-Driven Design&lt;/td&gt;
&lt;td&gt;A software development philosophy that encourages thinking in business domains at each step of the process: discovery, architecture, and design. &lt;a href=&#34;https://github.com/ddd-crew/welcome-to-ddd&#34;&gt;Domain-Driven Design (DDD)&lt;/a&gt; comprises a variety of practices (for example, Event Storming) and concepts (for example, Bounded Context), while infusing a common &amp;ldquo;ubiquitous&amp;rdquo; language for better collaboration and alignment between business people and software engineers. DDD is not an all-or-nothing deal. You can apply the ideas from DDD as much or as little as you feel is beneficial to the project you&amp;rsquo;re working on.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;sw-life-cycle&#34;&gt;Application life-cycle&lt;/h3&gt;
&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Concept&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;DevOps&lt;/td&gt;
&lt;td&gt;A collaborative mindset consolidating practices, cultural philosophies, tools, and patterns designed to break down the organizational barriers between development and operations departments along application life-cycles. Breaking down silos empower organizations to:&lt;br/&gt;&lt;br/&gt;&lt;ul&gt;&lt;li&gt;Deliver new features faster and more often in production.&lt;/li&gt;&lt;li&gt;Have a more reliable operating environment.&lt;/li&gt;&lt;li&gt;Improve communication and collaboration.&lt;/li&gt;&lt;/ul&gt;With an initial focus on software developers and operation engineers, DevOps has quickly evolved to include other departments and functions: security (DevSecOps), finance (FinOps), network (NetOps), and business.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CI/CD&lt;/td&gt;
&lt;td&gt;Combines the practices of continuous integration and either continuous delivery or continuous deployment. CI/CD bridges the gaps between development and operation activities and teams by enforcing automation in building, testing and deployment of applications. These automated and connected steps are often referred to as a (CI/CD) pipeline.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;support-infra&#34;&gt;Supporting infrastructure&lt;/h3&gt;
&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Concept&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Container&lt;/td&gt;
&lt;td&gt;A standard unit of software that packages code and all its dependencies so the application runs quickly and reliably from one computing environment to another. Containers are typically lighter weight than full systems. They make applications more atomic and portable across environments.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Container orchestrator&lt;/td&gt;
&lt;td&gt;Automates container life-cycles from deployment and scaling, to more advanced management operations. While tools such as Docker create images and run containers, you also need tools to manage them. When operating at scale, a container orchestrator like   &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; is essential to manage common orchestrator tasks such as (anti) affinity, failover, health monitoring, networking, rolling upgrades, scaling, scheduling, and service discovery ..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Service mesh&lt;/td&gt;
&lt;td&gt;A dedicated infrastructure layer facilitating service-to-service communications between services or microservices, using a proxy.  &lt;a href=&#34;https://istio.io/&#34;&gt;Istio&lt;/a&gt;  is an example of a service mesh framework. It simplifies observability, traffic management, security, and policy.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Immutable infrastructure&lt;/td&gt;
&lt;td&gt;An infrastructure paradigm in which servers are never modified after being deployed. If something needs to be changed, updated, or fixed, new servers built automatically with the appropriate changes are provisioned to replace the old ones. In a traditional mutable server infrastructure, servers are continually updated and modified in place.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;* as a Service&lt;/td&gt;
&lt;td&gt;Infrastructure (IaaS), Container (CaaS), Platform (PaaS), Function (FaaS) or Software (SaaS) as a service are categories of cloud computing services. They provide APIs to manage on-demand life-cycles of the corresponding abstraction layers: virtualized infrastructures, containers, application platforms, functions or external software.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;culture&#34;&gt;Team culture&lt;/h3&gt;
&lt;table class=&#34;table&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Concept&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Generative culture&lt;/td&gt;
&lt;td&gt;As defined by professor and sociologist Ron Westrum, leaders in a generative company culture emphasize the importance of accomplishing the organization’s goals and missions on-time, rather than on personal gain or rules. New ideas are welcome. Members are proactive and focused on getting information to the right people by any means necessary. In essence, when it comes to cloud-native culture, what we are talking about is being generative.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Psychological safety&lt;/td&gt;
&lt;td&gt;A state of well-being where team members feel safe to take risks and be vulnerable in front of each other. According to internal  &lt;a href=&#34;https://rework.withgoogle.com/blog/five-keys-to-a-successful-google-team/&#34;&gt;research &lt;/a&gt; by Google, psychological safety is the most important characteristic of high performing teams.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Permit to fail&lt;/td&gt;
&lt;td&gt;Psychological safety gives teams permission to fail. The goal is to accept errors as part of the realm of possibility and use it to learn and improve. Failures and accidents are seen as opportunities to improve, not witch-hunts. Errors are subject to honest post-mortem, and risks are shared.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lean experimentation&lt;/td&gt;
&lt;td&gt;Lean experiments are a highly effective way to formulate and validate hypotheses about a software product. They are conducted purposely to fail, to gain deeper insights about possible future iterations of a product.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Play&lt;/td&gt;
&lt;td&gt;Playing loosens boundaries while sky-rocketing team motivation and commitment. It could take the form of chaos engineering featuring &lt;a href=&#34;https://github.com/Netflix/chaosmonkey/&#34;&gt;Netflix’ Monkeys&lt;/a&gt;, a “Capture the Flag” security game, a wheel of misfortune disaster role-play exercise, or a &lt;a href=&#34;https://www.atlassian.com/blog/software-teams/what-is-chatops-adoption-guide&#34;&gt;ChatOps&lt;/a&gt; bot.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Growth mindset&lt;/td&gt;
&lt;td&gt;Embraces learning while strengthening beliefs that you can control and improve abilities. It envisions challenges and failure as opportunities to grow personally and values constructive feedback. Especially in IT, where change is the only constant, perpetual learning is a growth mantra.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Learning organizations&lt;/td&gt;
&lt;td&gt;A company that facilitates the learning of its members and continuously transforms itself. The core benefits offered by being a learning organization is a competitive advantage.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;factors&#34;&gt;Identify the twelve factors of cloud native applications&lt;/h2&gt;
&lt;p&gt;Cloud native app development has centered around the twelve factors originally described by the team behind the Heroku platform. The  &lt;a href=&#34;https://12factor.net/&#34;&gt;eponymous website&lt;/a&gt;  provides a great understanding of how a cloud native application deals with things like logging, application state, and integration with external systems.&lt;/p&gt;
&lt;p&gt;Sometimes it is enough to refactor and update an existing legacy application with only a handful of these factors in order to get it running on a cloud platform like Tanzu, gaining the operational benefits of the platform without the large investment of a far-reach modernization effort. Pay specific attention to externalizing configurations, converting integrations into backing services, keeping your processes stateless, and logging to standard input and output.&lt;/p&gt;
&lt;p&gt;For more information on cloud native apps check out the free e-book &lt;a href=&#34;https://tanzu.vmware.com/content/blog/beyond-the-twelve-factor-app&#34;&gt;Beyond the 12-Factor App&lt;/a&gt;, by Kevin Hoffman. In it, he introduces three additional factors including API-first development, security, and telemetry not covered in the original set, but are often required for apps to run well in the cloud.&lt;/p&gt;
&lt;h2 id=&#34;in-this-article-you-learned-to&#34;&gt;In this article, you learned to:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Define the meaning of cloud native&lt;/li&gt;
&lt;li&gt;List three major outcomes of cloud native&lt;/li&gt;
&lt;li&gt;Explain the main cloud native concepts&lt;/li&gt;
&lt;li&gt;Identify the twelve factors of cloud native applications&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;keep-learning&#34;&gt;Keep learning&lt;/h2&gt;
&lt;p&gt;To deepen your understanding, check out the following resources:&lt;/p&gt;
&lt;h4 id=&#34;cloud-native&#34;&gt;Cloud Native&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/developer/guides/microservices/what-is-cloud-native/&#34;&gt;What is Cloud Native? &lt;/a&gt; - VMware Tanzu Developer Center article&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/content/white-papers/how-to-think-cloud-native&#34;&gt;How to think Cloud Native?&lt;/a&gt; - Whitepaper by Joe Beda&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cncf.io/&#34;&gt;Cloud Native Computing Foundation (CNCF) &lt;/a&gt; - Home page of an organization aiming to advance cloud native and container technology while aligning the tech industry around their evolution.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cncf/toc/blob/main/DEFINITION.md&#34;&gt;CNCF definition of “Cloud Native”&lt;/a&gt; - GitHub&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cncf/trailmap/master/CNCF_TrailMap_latest.png&#34;&gt;CNCF Cloud-Native Trail Map&lt;/a&gt;  guidance for enterprises beginning their cloud-native journey - Image&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/I0p8MIezKkE&#34;&gt;Difference between Cloud and Cloud Native discussed by Kubernetes founders Craig McLuckie and Joe Beda&lt;/a&gt; - YouTube video&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;concepts&#34;&gt;Concepts&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/content/blog/beyond-the-twelve-factor-app&#34;&gt;Beyond the Twelve-Factor App&lt;/a&gt; - e-book&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/microservices&#34;&gt;Microservices: How to deliver scalable software, faster&lt;/a&gt; - VMware Tanzu article&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.manning.com/books/cloud-native-patterns&#34;&gt;Cloud Native Patterns by Cornelia Davis&lt;/a&gt; - Book&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ddd-crew&#34;&gt;Domain-Driven Design Crew&lt;/a&gt; - GitHub hot spot for the DDD community&lt;/li&gt;
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      
      <title>Outcomes: We Maintain a Healthy Work/Life Balance</title>
      
      <link>/outcomes/application-development-how-we-work/work-life-balance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development-how-we-work/work-life-balance/</guid>
      <description>

        
        &lt;p&gt;Within Tanzu Labs, &lt;strong&gt;we value work/life balance and sustainable pace of work.&lt;/strong&gt; There are many organizations in our industry where burn-out is just a fact of life, along with the associated high turnover. We&amp;rsquo;re not one of them. We maintain a healthy work/life balance, not only for ourselves, but as a &lt;strong&gt;role model for other companies.&lt;/strong&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: We&#39;re Supported</title>
      
      <link>/outcomes/application-development-how-we-work/support-each-other/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development-how-we-work/support-each-other/</guid>
      <description>

        
        &lt;p&gt;We don&amp;rsquo;t have traditional command-and-control line management structures within Tanzu Labs. &lt;strong&gt;We have coaching managers.&lt;/strong&gt; They help our people get to where they want to go in their careers.&lt;/p&gt;
&lt;p&gt;We believe that the most valuable feedback we can get along that journey comes from our peers — the people that we work with day in, day out. &lt;strong&gt;Our managers help us get that feedback from our peers, and encourage us to give those same peers the feedback they need, too.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Everyone who joins Tanzu Labs has one-one-ones scheduled with their manager. Our managers help us with all of the questions we have about the expectations set forth in these articles, because &lt;strong&gt;we use this very learning series for our own onboarding&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Our managers work with us to understand where we&amp;rsquo;re at in our careers, and help us come up with a plan for where we want to be. They help us get the books we recommend, and connect us with other amazing people that we should meet and pair with. They show us how to &lt;em&gt;give back&lt;/em&gt; ❤️ beyond just our immediate pairs, projects, and teams. They connect us to the global community at VMware Tanzu Labs.&lt;/p&gt;
&lt;p&gt;Most importantly, our managers are there with us for our journey, every step of the way.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Distributed, Remote, and Asynchronous Work</title>
      
      <link>/outcomes/application-development/remote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development/remote/</guid>
      <description>

        
        
      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Thank you!</title>
      
      <link>/outcomes/application-development-how-we-work/thank-you/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/application-development-how-we-work/thank-you/</guid>
      <description>

        
        &lt;p&gt;Thank you for reading our story and learning about how we approach product development, helping each other and our clients, and why we do what we do.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re transforming the way the world builds software by catalyzing enterprise transformation through software; it&amp;rsquo;s a journey that is simultaneously amazing, inspiring, challenging, and fun.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re continuously inspired and humbled to work with the amazing people that join our organization, and the amazing clients we have the opportunity to work with.&lt;/p&gt;
&lt;p&gt;We hope you&amp;rsquo;ve learned that our way of doing this really quite simple, and that you can adopt these simple ideas, with or without working with us. We hope you saw your organization and yourselves in these words. &lt;a href=&#34;https://github.com/vmware-tanzu/tanzu-dev-portal/issues&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Feedback welcomed!&lt;/a&gt; 🔬&lt;/p&gt;
&lt;p&gt;Now, let&amp;rsquo;s go build something amazing!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Logging</title>
      
      <link>/outcomes/cloud-native-development/specific__logging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/specific__logging/</guid>
      <description>

        
        &lt;p&gt;Logging is straightforward. You&amp;rsquo;ve likely already spent time comprehensively thinking about logging solutions and frameworks. The good news is you are probably where you need to be in your understanding of logging.&lt;/p&gt;
&lt;p&gt;The twelve-factor app indicates that apps should write all standard and error log information to the standard console output, and let the cloud platform route all that knowledge to the correct central repository.&lt;/p&gt;
&lt;p&gt;Almost every common logging framework provides a console that makes it easy to switch away from local rolling files, and let the platform do the work for you.&lt;/p&gt;
&lt;p&gt;If your application relies heavily on a vendor-specific or custom logging framework, look into enabling console output in these environments.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Configuration</title>
      
      <link>/outcomes/cloud-native-development/specific__configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/specific__configuration/</guid>
      <description>

        
        &lt;p&gt;Even quite trivial applications have some form of configuration, such as how to connect to its data sources, how to change behavior based on the target deployment environment, or how to log. There are plenty of ways to configure your application.&lt;/p&gt;
&lt;p&gt;For example, you can configure your application through:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XML files on your server cluster.&lt;/li&gt;
&lt;li&gt;Properties files embedded in your application deployable artifact.&lt;/li&gt;
&lt;li&gt;Hardcoded variables in your application. (No shame here. We have all done this! We typically refactor away from this to make your deployments more agile and cloud-friendly.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The trick to making an application deploy and change in the cloud super quick is to externalize the configuration from that app and make it part of the environment in which it runs. The simplest way to do this is to read the configuration from environment variables directly, as this induces a change of behavior without having to recompile or change the application deployable itself.&lt;/p&gt;
&lt;p&gt;We do this in two phases.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Phase 1: We pull out and standardize app configuration into Spring Boot&amp;rsquo;s &lt;code&gt;application.yml&lt;/code&gt; file. If you are new to YAML syntax, CircleCI provides a quick read on &lt;a href=&#34;https://circleci.com/blog/what-is-yaml-a-beginner-s-guide/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;the basic building blocks of the format&lt;/a&gt;. It is a lot like JSON, but uses indentation to reduce duplication, and provides more readable files. While moving configuration to a YAML file externalizes it from the code, it still gets packaged up and deployed along with your app.&lt;/li&gt;
&lt;li&gt;Phase 2: Externalizing application configuration moves these application files to their own repository and exposes them using Spring Cloud&amp;rsquo;s config server. You already read some of the basics here when you looked at Spring Cloud, but feel free to explore the config server section further, if modernizing your application&amp;rsquo;s configuration is going to be crucial to getting it ready for TAS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Brush up on YAML syntax with the &lt;a href=&#34;https://circleci.com/blog/what-is-yaml-a-beginner-s-guide/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;CircleCI guide&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Read the introduction to &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Externalizing Configuration with Spring Boot&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;additional-resources&#34;&gt;Additional resources&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Refer to the &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Externalizing Configuration&lt;/a&gt; documentation to get an understanding of the many ways Boot exposes configuration to your application.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Caching</title>
      
      <link>/outcomes/cloud-native-development/specific__caching/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/specific__caching/</guid>
      <description>

        
        &lt;p&gt;Caching is available in many forms, ranging from large vendor-specific externalized clusters to caching libraries that cache in-memory within the application itself. There are so many choices, including (sorted alphabetically): &lt;a href=&#34;https://github.com/ben-manes/caffeine&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Caffeine&lt;/a&gt;, &lt;a href=&#34;https://www.ehcache.org&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Ehcache&lt;/a&gt;, &lt;a href=&#34;https://tanzu.vmware.com/gemfire&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;GemFire&lt;/a&gt;, &lt;a href=&#34;https://hazelcast.com/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Hazelcast&lt;/a&gt;, &lt;a href=&#34;https://infinispan.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Infinispan&lt;/a&gt;, &lt;a href=&#34;https://commons.apache.org/proper/commons-jcs/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Java Caching System (JCS)&lt;/a&gt;, &lt;a href=&#34;https://www.baeldung.com/jcache&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;JCache&lt;/a&gt;, &lt;a href=&#34;https://github.com/alibaba/jetcache&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;JetCache&lt;/a&gt;, &lt;a href=&#34;https://memcached.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Memcached&lt;/a&gt;, &lt;a href=&#34;https://redis.io/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Redis&lt;/a&gt;, &lt;a href=&#34;https://docs.spring.io/spring-framework/docs/current/reference/html/integration.html#cache&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Cache&lt;/a&gt;, and many more.&lt;/p&gt;
&lt;p&gt;While moving to a platform such as Tanzu Application Services (TAS) or Kubernetes, caching&amp;rsquo;s most prominent interaction is with the elastic and ephemeral nature of the application deployment. Application deployments can come and go at random, and scale from zero to hundreds of instances. It conditions the way applications cache data to become truly stateless.&lt;/p&gt;
&lt;p&gt;If your app does not currently use a dedicated caching layer, we might introduce an external cache to turn the application stateless. Caching can be an easy way to share a simple state between app instances, centralizing a global application state or session data in a cloud native ecosystem.&lt;/p&gt;
&lt;p&gt;In cases where the caching solution assumes it has only one client (read and write) or cannot handle multiple clients, we could consider moving to &lt;a href=&#34;https://redis.io/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Redis&lt;/a&gt; and &lt;a href=&#34;https://docs.spring.io/spring-framework/docs/current/reference/html/integration.html#cache&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Caching&lt;/a&gt; to scale efficiently.&lt;/p&gt;
&lt;p&gt;If your app already interacts with a caching layer, refer to the &lt;a href=&#34;https://spring.io/guides/gs/caching/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Caching Data with Spring&lt;/a&gt; guide to get an idea of how you could use Spring Boot&amp;rsquo;s abstraction layer.&lt;/p&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://spring.io/guides/gs/caching/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Caching Data with Spring&lt;/a&gt; guide.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Data Access</title>
      
      <link>/outcomes/cloud-native-development/specific__data_access/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/specific__data_access/</guid>
      <description>

        
        &lt;p&gt;Your app may use manually-configured JDBC drivers, ORM solutions such as &lt;a href=&#34;https://en.wikipedia.org/wiki/Jakarta_Persistence&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;JPA&lt;/a&gt;, &lt;a href=&#34;http://hibernate.org/orm/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Hibernate&lt;/a&gt;, &lt;a href=&#34;https://mybatis.org/mybatis-3/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;MyBatis&lt;/a&gt;, &lt;a href=&#34;https://www.eclipse.org/eclipselink/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;EclipseLink&lt;/a&gt;, or &lt;a href=&#34;https://en.wikipedia.org/wiki/Java_Naming_and_Directory_Interface&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;JNDI&lt;/a&gt; to lookup database connections provided by the containing web server. To improve integration with the Spring and Spring Boot ecosystems for all these, we look into migrating connections to a Spring &lt;code&gt;DataSource&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Read the section on &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto.data-access.configure-custom-datasource&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;configuring Spring Boot data sources&lt;/a&gt; to see how you can configure these with YAML or Java configuration beans.&lt;/p&gt;
&lt;p&gt;Connecting to the database is only one part of the traditional data access layer of an application. There is usually a whole range of data services and frameworks that present an API query and database update. This might involve your ORM of choice mapping Java POJOs to SQL queries, or it might be a facade on top of hand-crafted stored procedures.&lt;/p&gt;
&lt;p&gt;For apps that do not require significant refactoring, we change just enough of this data layer so that it plays well with Spring &lt;code&gt;DataSource&lt;/code&gt; beans. For broader modernization efforts, we recommend refactoring this layer using Spring Data to drastically reduce the code length (and test surface area the team is responsible for). To learn more about what Spring Data can do for you that a manually-built data layer cannot, see the &lt;a href=&#34;https://spring.io/guides/gs/accessing-data-jpa/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Accessing Data with JPA&lt;/a&gt; guide.&lt;/p&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://spring.io/guides/gs/accessing-data-jpa/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Accessing Data with JPA&lt;/a&gt; guide.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Enterprise Integration</title>
      
      <link>/outcomes/cloud-native-development/specific__integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/specific__integration/</guid>
      <description>

        
        &lt;p&gt;Enterprise integration middleware are software systems that offer services to link and integrate separate applications. They cover many use cases and domains like transaction processing, distributed computing, message broker, data access systems, or Enterprise Service Buses (ESB).&lt;/p&gt;
&lt;p&gt;Enterprise Service Buses provide an orchestration layer for the many moving parts of an application portfolio. Aimed at enabling separation of concerns through a service orientated architecture along with a feature-rich stack of integrations, this well-intentioned technology often becomes a monolith layer with apps tightly coupled to a specific ESB implementation and difficult-to-test paths through the whole system.&lt;/p&gt;
&lt;p&gt;Replacing an ESB is less common in a &lt;a href=&#34;https://tanzu.vmware.com/replatforming&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;replatforming project&lt;/a&gt; unless you are explicitly trying to replatform away from a given vendor. When this occurs, Spring provides &lt;a href=&#34;https://spring.io/projects/spring-integration&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Integration&lt;/a&gt; a mature lower-level library of common integration patterns and adapters. Spring integration is a large, complex library to understand. Working through the bits that are important to solve your problems is key to find the right tools for the job. Read the &lt;a href=&#34;https://spring.io/guides/gs/integration/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Integrating Data&lt;/a&gt; guide for an idea of how the project fits into the overall Spring ecosystem.&lt;/p&gt;
&lt;p&gt;Another, newer option builds on top of &lt;a href=&#34;https://spring.io/projects/spring-integration&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Integration&lt;/a&gt; and &lt;a href=&#34;https://spring.io/projects/spring-cloud-stream&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Cloud Stream&lt;/a&gt; to provide a high-level abstraction for weaving multiple microservices and batch processes together. As it provides more extensive functionalities and covers a range of data processing use cases, &lt;a href=&#34;https://spring.io/projects/spring-cloud-dataflow&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Cloud Data Flow&lt;/a&gt; is often the best choice to replace an ESB. However, it is more complex to get running and requires additional components to manage the state of your pipelines. Read &lt;a href=&#34;https://www.baeldung.com/spring-cloud-data-flow-stream-processing&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;this Baeldung guide&lt;/a&gt; to understand how it addresses similar use cases but differs in its execution from Spring Integration.&lt;/p&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://spring.io/guides/gs/integration/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Integrating Data&lt;/a&gt; guide to getting some experience with Spring integration.&lt;/li&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://www.baeldung.com/spring-cloud-data-flow-stream-processing&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Baeldung guide to Spring Cloud Data Flow&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: API Gateway</title>
      
      <link>/outcomes/cloud-native-development/specific__api_gateway/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/specific__api_gateway/</guid>
      <description>

        
        &lt;p&gt;An API gateway provides a way to route all traffic to one service before it reaches a different one. This allows you to create a central service that provides cross-cutting functionality like authentication and authorization, policy enforcement, or data transformation. The API gateway also provides an aggregation service that collects and transforms data from lower-level services into something needed by a particular client (for example, a bandwidth-constrained mobile app).&lt;/p&gt;
&lt;p&gt;When combined with TAS &lt;a href=&#34;https://docs.pivotal.io/application-service/2-11/services/route-services.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;route services&lt;/a&gt;, an API gateway is a powerful way to add layered functionality across many of your apps. As you break up apps into individual microservices, the power increases and you gain the benefit of centrally implemented functionalities while leveraging the benefits of decoupled independent systems.&lt;/p&gt;
&lt;p&gt;There are many commercial and open-source options for this - the former includes Apigee and the public cloud IaaS native solutions. The latter includes options such as &lt;a href=&#34;https://github.com/Netflix/zuul&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Netflix Zuul&lt;/a&gt; and &lt;a href=&#34;https://spring.io/projects/spring-cloud-gateway&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Cloud Gateway&lt;/a&gt; (SCG). Unless your company uses a different commercial option, we use Spring Cloud Gateway as the default implementation framework for integration use cases.&lt;/p&gt;
&lt;p&gt;Go to the &lt;a href=&#34;https://spring.io/guides/gs/gateway/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Building a Gateway&lt;/a&gt; guide to learn how to craft your first API gateway with SCG.&lt;/p&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://spring.io/guides/gs/gateway/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Building a Gateway&lt;/a&gt; guide.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Batch Processing</title>
      
      <link>/outcomes/cloud-native-development/specific__batch_processing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/specific__batch_processing/</guid>
      <description>

        
        &lt;p&gt;The Java ecosystem provides a variety of libraries and standards to help you define and launch batch processes: &lt;a href=&#34;https://www.baeldung.com/java-ee-7-batch-processing&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Java EE batch processing&lt;/a&gt;, &lt;a href=&#34;http://www.quartz-scheduler.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Quartz Job Scheduler&lt;/a&gt;, &lt;a href=&#34;https://github.com/jmrozanec/cron-utils&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Cron Utils&lt;/a&gt;, &lt;a href=&#34;https://github.com/j-easy/easy-batch&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Easy Batch&lt;/a&gt; &amp;hellip;&lt;/p&gt;
&lt;p&gt;If you are only using Spring, there are many ways to easily schedule and run batch jobs.&lt;/p&gt;
&lt;p&gt;For simple, scheduled activity tightly coupled to the app itself &lt;a href=&#34;https://spring.io/guides/gs/scheduling-tasks/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Scheduler&lt;/a&gt;, provides the simplest solution to set up a method for performing periodic work.&lt;/p&gt;
&lt;p&gt;If a job requires more control, or is going to benefit from having its own atomic deployable unit, we look to &lt;a href=&#34;https://spring.io/projects/spring-batch&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Batch&lt;/a&gt; and &lt;a href=&#34;https://spring.io/projects/spring-cloud-task&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Cloud Task&lt;/a&gt; (SCT) to work at a higher level of abstraction. Both work great with &lt;a href=&#34;https://spring.io/projects/spring-cloud-dataflow&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Cloud Data Flow&lt;/a&gt; (SCDF). As we gradually move towards a higher level of abstraction, we&amp;rsquo;re going to introduce multiple batch jobs that require oversight and orchestration.&lt;/p&gt;
&lt;p&gt;Refer to Spring Cloud Task&amp;rsquo;s &lt;a href=&#34;https://docs.spring.io/spring-cloud-task/docs/current/reference/htmlsingle/#getting-started&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Getting Started&lt;/a&gt; guide for details on how to manage multiple jobs as part of an application; and to become familiar with Task and SCDF so that you can join the discussion within your project.&lt;/p&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Read the &lt;a href=&#34;https://spring.io/guides/gs/scheduling-tasks/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Scheduler guide&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read the &lt;a href=&#34;https://docs.spring.io/spring-cloud-task/docs/current/reference/htmlsingle/#getting-started&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Cloud Task Getting Started guide&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: File Access</title>
      
      <link>/outcomes/cloud-native-development/specific__file_access/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/specific__file_access/</guid>
      <description>

        
        &lt;p&gt;Applications running in VMware Tanzu Application Service live inside a temporary container with an ephemeral virtual machine. This means items are not permanently kept by the file system. This is good because dependencies on shared file access can induce unintentional shared state and coupling. Most of the time, we aim to refactor an application away from any dependence on the underlying filesystem, passing shared data around via web service calls, publish/subscribe events, or shared caches and databases.&lt;/p&gt;
&lt;p&gt;However, if file access is required (as an integration pattern with an external tool or team outside of your control), TAS provides &amp;ldquo;volume services&amp;rdquo; to map network folders to the twelve-factor concept of bound services. The &lt;a href=&#34;https://docs.pivotal.io/application-service/2-11/devguide/services/using-vol-services.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;volume services documentation&lt;/a&gt; provides an overview, and a demo app for you to review to ensure volume services are available to you in your TAS environment.&lt;/p&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://docs.pivotal.io/application-service/2-11/devguide/services/using-vol-services.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;example to use an external file system&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Messaging</title>
      
      <link>/outcomes/cloud-native-development/specific__messaging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/specific__messaging/</guid>
      <description>

        
        &lt;p&gt;Event-driven applications are a natural fit for microservices as they reduce the coupling between services even further and allow for the whole system to move from central orchestration to distributed asynchronous choreography.&lt;/p&gt;
&lt;p&gt;If your application currently uses a messaging solution such as &lt;a href=&#34;https://www.rabbitmq.com/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;RabbitMQ&lt;/a&gt;, &lt;a href=&#34;https://activemq.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache ActiveMQ&lt;/a&gt;, &lt;a href=&#34;https://kafka.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Apache Kafka&lt;/a&gt;, or &lt;a href=&#34;https://www.ibm.com/products/mq&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;IBM MQ&lt;/a&gt;, the first step is to update your application to connect to these services using Spring beans that are similar to working with database connections. We also simplify the messaging aspects of the application codebase using &lt;a href=&#34;https://spring.io/projects/spring-cloud-stream&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Cloud Stream&lt;/a&gt; (SCS) whenever possible.&lt;/p&gt;
&lt;p&gt;Even if your application currently does not use some form of pub/sub, we often aim to modernize towards asynchronous communication between your microservices using Spring Cloud Stream and RabbitMQ. With the RabbitMQ tile available in TAS, it is straightforward to introduce a messaging layer of communication. There are many benefits for doing it this way.&lt;/p&gt;
&lt;p&gt;Read the &lt;a href=&#34;https://docs.spring.io/spring-cloud-stream/docs/current/reference/html/spring-cloud-stream.html#spring-cloud-stream-overview-introducing&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Introduction&lt;/a&gt; and &lt;a href=&#34;https://docs.spring.io/spring-cloud-stream/docs/current/reference/html/spring-cloud-stream.html#spring-cloud-stream-overview-introducing&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Quick Start&lt;/a&gt; guide for SCS to get a feel for working with the library.&lt;/p&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://docs.spring.io/spring-cloud-stream/docs/current/reference/html/spring-cloud-stream.html#spring-cloud-stream-overview-introducing&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Introduction&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://docs.spring.io/spring-cloud-stream/docs/current/reference/html/spring-cloud-stream.html#spring-cloud-stream-overview-introducing&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Quick Start&lt;/a&gt; guide for Spring Cloud Stream.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: User Interfaces</title>
      
      <link>/outcomes/cloud-native-development/specific__user_interfaces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/specific__user_interfaces/</guid>
      <description>

        
        &lt;p&gt;Traditional Java Enterprise Edition (EE) web applications evolved through many model-view-controller technology stacks, including templating engines such as Java Server Pages (JSP), Java Server Faces (JSF), Apache Struts, or Portlets. Each of these stacks tried to tackle the separation between server-based business logic and the views themselves while attempting to break up the UI into modular components. The modular components are tightly coupled to an underlying heavyweight server environment. Applications that use these view technologies are often prime candidates for more extensive modernization efforts, as they tend to crystalize in monolithic web applications with many functions and layers.&lt;/p&gt;
&lt;p&gt;Depending on the current state of the application and the amount of refactoring the team wants to take on, we suggest porting the existing JSP or similar view templates over to deploy an application in a TAS Tomcat container. This provides a simple and non-intrusive way to get one of these technologies running on the platform.&lt;/p&gt;
&lt;p&gt;Regarding other technologies such as Portlets or thick-client desktop applications, we typically peel out the underlying business logic into web services and access them through a new set of user interfaces. Modern web application development has moved towards frameworks such as React and Angular leveraging JavaScript to call back-end services. Your company may already be looking into building full-stack &lt;a href=&#34;/outcomes/application-development/balanced-teams/&#34;&gt;balanced teams&lt;/a&gt; developing a new generation of front-ends.&lt;/p&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;List and evaluate the user interface and view technologies your applications use now.&lt;/li&gt;
&lt;li&gt;Have a team conversation on your vision, teaming, and technologies for future user experiences.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Telemetry</title>
      
      <link>/outcomes/cloud-native-development/specific__telemetry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/specific__telemetry/</guid>
      <description>

        
        &lt;p&gt;Telemetry is one of the additional three factors introduced in &lt;a href=&#34;https://content.pivotal.io/ebooks/beyond-the-12-factor-app&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Beyond the Twelve-Factor App&lt;/a&gt;. Developing your application is only the first aspect of a cloud native developer&amp;rsquo;s job. Feedback from real users hitting your app deployed in production is where you can learn and improve your app.&lt;/p&gt;
&lt;p&gt;Spring Boot provides an assortment of automatic health monitoring and metrics through the &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Actuator&lt;/a&gt; and &lt;a href=&#34;https://micrometer.io/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Micrometer&lt;/a&gt; projects.&lt;/p&gt;
&lt;p&gt;When you add these to your Spring Boot app, you get automatic embedded monitoring and reporting in the application, along with many extension points for adding custom health indicators and other metrics. Read the &lt;a href=&#34;https://spring.io/guides/gs/actuator-service/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Actuator guide to build a RESTful web service&lt;/a&gt;, or add actuators to one of the applications you have already crafted as part of this guide.&lt;/p&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://spring.io/guides/gs/actuator-service/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Spring Boot Actuator&lt;/a&gt; guide.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Outcomes: Security</title>
      
      <link>/outcomes/cloud-native-development/specific__security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/outcomes/cloud-native-development/specific__security/</guid>
      <description>

        
        &lt;p&gt;Security in a distributed system can be a daunting task since you cannot rely on a large centralized security module on a monolithic web server. Spring Boot provides the Spring Security package to offer a general abstraction layer for configuring your application security without relying on the specific container or deployment environment.&lt;/p&gt;
&lt;p&gt;We typically wire up security for newly created or modernized services using this module. The Spring team has a great &lt;a href=&#34;https://spring.io/guides/gs/securing-web/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;guide to securing web applications&lt;/a&gt; to walk you through the basic configuration via Java beans and the domain-specific language.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s a good idea to complete this exercise to be comfortable applying the technology to your applications. You&amp;rsquo;ll learn the specifics of more advanced configurations over time. In the meantime, this exercise will help you recognize the get-go basics.&lt;/p&gt;
&lt;h4 id=&#34;homework&#34;&gt;Homework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://spring.io/guides/gs/securing-web/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Securing Web Services&lt;/a&gt; guide.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Blog: Measuring the Immeasurable</title>
      
      <link>/blog/measuring-the-immeasurable/</link>
      <pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/measuring-the-immeasurable/</guid>
      <description>

        
        &lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.howtomeasureanything.com/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;How To Measure Anything&lt;/a&gt;&lt;/em&gt; by Douglas Hubbard is a popular book at VMware Tanzu Labs. In it, Hubbard takes a strong, opinionated stance on both the concept of measurement, the value of measurement, and how to measure things that are considered immeasurable.&lt;/p&gt;
&lt;p&gt;One of our team members published an old-fashioned book report on &lt;em&gt;How to Measure Anything&lt;/em&gt;, which you can &lt;a href=&#34;https://www.lesswrong.com/posts/ybYBCK9D7MZCcdArB/how-to-measure-anything&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;read here&lt;/a&gt;. Below we summarize one fascinating and helpful section of the book, along with our notes and thoughts, as this section is particularly helpful for the &lt;a href=&#34;/practices/product-valuation&#34;&gt;Product Valuation&lt;/a&gt; workshop.&lt;/p&gt;
&lt;h2 id=&#34;immeasurability-and-the-concept-of-measurement&#34;&gt;Immeasurability and the Concept of Measurement&lt;/h2&gt;
&lt;p&gt;First we want to highlight Hubbard’s analysis of why people often think things are “immeasurable.”&lt;/p&gt;
&lt;p&gt;There are just three reasons why people think that something can’t be measured; these reasons are based on misconceptions about different aspects of measurement. We’ll refer to these misconceptions them as the &lt;strong&gt;concept&lt;/strong&gt; of, &lt;strong&gt;object&lt;/strong&gt; of, and &lt;strong&gt;method&lt;/strong&gt; of measurement:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Concept&lt;/strong&gt; of measurement - The definition of measurement itself is widely misunderstood.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Object&lt;/strong&gt; of measurement - The thing being measured is not well defined.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Methods&lt;/strong&gt; of measurement - Many procedures of empirical observation are not well known.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We’ll expand upon each of those misconceptions.&lt;/p&gt;
&lt;h3 id=&#34;the-concept-of-measurement-misconception&#34;&gt;The Concept of Measurement Misconception&lt;/h3&gt;
&lt;p&gt;Implicit or explicit in all of these misconceptions is that measurement is a certainty—an exact quantity with no room for error. This is a fallacy. Some amount of error is unavoidable, and measuring can still be an improvement on prior knowledge even if the measurements have error. This concept is central to how experiments, surveys, and other scientific measurements are performed.&lt;/p&gt;
&lt;p&gt;Unfortunately, allowing for unavoidable errors or room for improvement can feel contrary to some definitions of “measurement”. For example, Hubbard refers to this definition:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“Measurement: a quantitatively expressed reduction of uncertainty based on one or more observations.”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Note that this definition for measurement states a measurement is &lt;em&gt;quantitatively&lt;/em&gt; expressed. The uncertainty has to be quantified, but the subject of observation might not be a &lt;em&gt;quantity&lt;/em&gt; itself; for example, it could be entirely &lt;em&gt;qualitative&lt;/em&gt;, such as membership in a list.&lt;/p&gt;
&lt;p&gt;We must avoid the trap of thinking that all uncertainty can be a measurable quantity.&lt;/p&gt;
&lt;h3 id=&#34;the-object-of-measurement-misconception&#34;&gt;The Object of Measurement Misconception&lt;/h3&gt;
&lt;p&gt;Regardless of which concept of measurement is adopted, some things seem immeasurable because we haven’t unambiguously defined the object of measurement.&lt;/p&gt;
&lt;p&gt;For example, we might want to measure an “intangible” thing, such as a company’s public reputation. A reputation itself might be hard to quantify, but we can quantify the impacts of a company’s reputation, such as customer referrals or positive vs. negative social media references. Now we have begun to identify how to measure it.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;clarification chain&lt;/strong&gt; is helpful in identifying how to measure the intangible:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If it matters at all, it is detectable/observable&lt;/li&gt;
&lt;li&gt;If it is detectable, it can be detected as an amount (or range of possible amounts)&lt;/li&gt;
&lt;li&gt;If it can be detected as a range of possible amounts, it can be measured&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In addition, it helps to state why we want to measure something; identifying the “why” can lead us towards the “what” is really being measured.&lt;/p&gt;
&lt;h3 id=&#34;the-methods-of-measurement-misconception&#34;&gt;The Methods of Measurement Misconception&lt;/h3&gt;
&lt;p&gt;Here we will quote Hubbard:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“When thinking about measurement methods, someone may imagine a fairly direct case of measurement. If you measure the length of a table…you have direct access to the entire object of measurement. If this is the limit of what one understands about measurement methods then, no doubt, many things will seem immeasurable.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In other words, if we limit ourselves to only certain means of measurement, then anything that cannot be measured by those means might seem immeasurable. Avoid this trap by searching for other methods of measuring. A table, for example, has not only dimensions, but also weight, color, design style, aesthetic appeal, monetary value, or even sentimentality.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;We hope this was a helpful summary regarding measuring the immeasurable. By expanding your concepts of measurement, re-thinking the object under measurement, and your means of measurement, nearly anything can be measured. Be sure to check out the &lt;a href=&#34;/practices/product-valuation&#34;&gt;Product Valuation&lt;/a&gt; workshop for practical applications of these concepts that can help your product development teams.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Guides: Remote Tips: Remote is Exhausting</title>
      
      <link>/guides/agile/remote-tips-remote-is-exhausting/</link>
      <pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/guides/agile/remote-tips-remote-is-exhausting/</guid>
      <description>

        
        &lt;h2 id=&#34;creating-the-right-working-environment&#34;&gt;Creating the right working environment&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Everyone should have a good audio headset with a directional mic.&lt;/li&gt;
&lt;li&gt;Establish boundaries and transitions: separate work from life by carving out a dedicated workspace and find ways to remove it from your vision while not working.&lt;/li&gt;
&lt;li&gt;It’s OK for family and pets to appear in your video; we’re all human.&lt;/li&gt;
&lt;li&gt;Introduce variety: work from different parts of the house.&lt;/li&gt;
&lt;li&gt;Turn off notifications.&lt;/li&gt;
&lt;li&gt;Try &lt;a href=&#34;https://krisp.ai/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Krisp&lt;/a&gt;, a video conferencing add-on that mutes not only your background noise, but also that of everyone else on the call.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;looking-after-yourself-and-each-other&#34;&gt;Looking after yourself and each other&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Schedule breaks.&lt;/li&gt;
&lt;li&gt;Stretch, dance, or take up bird watching!&lt;/li&gt;
&lt;li&gt;Spend time outdoors, exercise, or have exercise breaks with your team.&lt;/li&gt;
&lt;li&gt;Stay hydrated!&lt;/li&gt;
&lt;li&gt;When on break, allow your eyes to rest at a distance.&lt;/li&gt;
&lt;li&gt;Stay connected with friends, family and community.&lt;/li&gt;
&lt;li&gt;Block time for personal care.&lt;/li&gt;
&lt;li&gt;🔥 Monitor your potential for burnout using &lt;a href=&#34;https://burnoutindex.org/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Burnoutindex.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Take an occasional “mental health day.”&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t suffer in silence; help each other and keep each other accountable.&lt;/li&gt;
&lt;li&gt;Ask each other the right questions.&lt;/li&gt;
&lt;li&gt;Discuss in retros how to support each other and reduce fatigue.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;setting-a-routine&#34;&gt;Setting a routine&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Make time for breaks, planning, reflection, and team social time (e.g., take 10-min break for every 80 minutes of work; Mary needs to deal with childcare at 3 PM every Wednesday, so plan meetings around it).&lt;/li&gt;
&lt;li&gt;Having a fixed working routine helps you to maintain and manage your energy levels.&lt;/li&gt;
&lt;li&gt;Use a timer to help plan breaks.&lt;/li&gt;
&lt;li&gt;Find ways to mark the start and end of your day (standups/catch-ups); daily stand-downs might help to shorten standups.&lt;/li&gt;
&lt;li&gt;Replicate your commute to punctuate the transition from home to work by doing something relaxing and fun before work, and clearing your workspace at the end of the day.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t go straight to work after you wake up.&lt;/li&gt;
&lt;li&gt;Keep regular times for meals.&lt;/li&gt;
&lt;li&gt;Experiment with different ways of working to find out what&amp;rsquo;s best for the team; not everyone shares the same peak hours of energy and focus.&lt;/li&gt;
&lt;li&gt;Designate a pair of engineers as the “interrupt pair” at the start of each day to lower the cost of interruptions and minimize the need for conversations, decisions and context switching.&lt;/li&gt;
&lt;li&gt;Respect the routine, but experiment with change.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Guides: Remote Tips</title>
      
      <link>/guides/agile/remote-tips/</link>
      <pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/guides/agile/remote-tips/</guid>
      <description>

        
        &lt;p&gt;The transition to working remotely due to COVID-19 has proven to be quite a challenge—including for those of us at VMware Tanzu Labs. While remotely communicating and collaborating using digital tools is not new to us, doing so in an entirely distributed environment for the foreseeable future is.&lt;/p&gt;
&lt;p&gt;The challenges have been especially daunting when we’ve had to apply the principles of Extreme Programming (XP), namely constant communication, intense collaboration, and ongoing reflection. On top of all that, we engage with new customers on a regular basis to kick off projects multiple times throughout the course of a year. In this new normal, our practitioners must not only quickly bootstrap burgeoning relationships and get up to speed on unfamiliar  domains, but build customer-based teams that feature all these new ways of working and in the process, re-define a set of previously shared norms.&lt;/p&gt;
&lt;p&gt;There are undoubtedly more challenges left for us to face in our new, all-remote set-up. In the meantime, however, we set out to identify the most pressing problems and come up with the best possible solutions to address them. The result is a series of remote working tips that we are thrilled to share with you.&lt;/p&gt;
&lt;h2 id=&#34;our-tips&#34;&gt;Our tips&lt;/h2&gt;
&lt;p&gt;Our remote working tips cover a wide range of topics, from general considerations to specific advice for high-collaboration teams:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/guides/agile/remote-tips-building-relationships/&#34;&gt;Building relationships&lt;/a&gt; – How to create virtual spaces and use them to socialize, how to be more inclusive, expressive, and kind; and how to build empathy are just some of the challenges that are heightened by a remote environment.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/guides/agile/remote-tips-facillitation/&#34;&gt;Easing facilitation&lt;/a&gt; – From setting team working agreements and ground rules to keeping participants engaged and included to making the best use of your tools, good facilitation is key to remote working success.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/guides/agile/remote-tips-physical-space/&#34;&gt;Leveraging physical space&lt;/a&gt; – How important is physical space in an all-remote working environment? More important than ever before, it turns out, which is why we offer a gallery of practitioner setups for inspiration.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/guides/agile/remote-tips-remote-is-exhausting/&#34;&gt;Battling fatigue&lt;/a&gt; – Working remotely is exhausting. We suggest ways that you can create a stimulating and inspiring work environment, complete with ways to look after yourself (and others), including by setting routines.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/guides/agile/remote-tips-tools-and-tips/&#34;&gt;Using the tools&lt;/a&gt; – Whether you’re still agreeing on the tool stack or helping your customers get up to speed on Zoom, as we’ve learned firsthand, the tools you and your team use have never had such a big impact.&lt;/p&gt;
&lt;h2 id=&#34;a-word-on-our-process&#34;&gt;A word on our process&lt;/h2&gt;
&lt;p&gt;At VMware Tanzu Labs, we &lt;a href=&#34;https://tanzu.vmware.com/app-development&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;practice what we preach&lt;/a&gt;. To create these tips, we assigned a balanced team—which consisted of a product manager, a designer, and an engineer—to run user research and identify current best practices along with problems and pain points. And as with every project, there were plenty of stakeholders involved. Our team collaborated with our colleagues in Services Strategy, Marketing, and Legal, to name just a few. These tips are as much theirs as they are ours—and now, yours.&lt;/p&gt;
&lt;p&gt;Indeed, we have been using and improving on these remote tips internally, but we also recognize that the challenges we’ve faced are hardly unique. And so we wanted to share them with a wider audience. We’re confident that you’ll find something that makes your own remote working life—and that of your team—a little easier.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Blog: Need Help Working Remotely? Check Out Our Tips</title>
      
      <link>/blog/need-help-working-remotely-check-out-our-tips/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/need-help-working-remotely-check-out-our-tips/</guid>
      <description>

        
        &lt;p&gt;&lt;img src=&#34;/images/blogs/remote-tips/remote-workspace.jpg&#34; alt=&#34;Remote Workspace with Cat&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;The transition to working remotely due to COVID-19 has proven to be quite a challenge—including for those of us at VMware Tanzu Labs. While remotely communicating and collaborating using digital tools is not new to us, doing so in an entirely distributed environment for the foreseeable future is.&lt;/p&gt;
&lt;p&gt;The challenges have been especially daunting when we’ve had to apply the principles of Extreme Programming (XP), namely constant communication, intense collaboration, and ongoing reflection. On top of all that, we engage with new customers on a regular basis to kick off projects multiple times throughout the course of a year. In this new normal, our practitioners must not only quickly bootstrap burgeoning relationships and get up to speed on unfamiliar  domains, but build customer-based teams that feature all these new ways of working and in the process, re-define a set of previously shared norms.&lt;/p&gt;
&lt;p&gt;There are undoubtedly more challenges left for us to face in our new, all-remote set-up. In the meantime, however, we set out to identify the most pressing problems and come up with the best possible solutions to address them. The result is a series of remote working tips that we are thrilled to share with you.&lt;/p&gt;
&lt;h2 id=&#34;our-tips&#34;&gt;Our tips&lt;/h2&gt;
&lt;p&gt;Our remote working tips cover a wide range of topics, from general considerations to specific advice for high-collaboration teams:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/guides/agile/remote-tips-building-relationships/&#34;&gt;Building relationships&lt;/a&gt; – How to create virtual spaces and use them to socialize, how to be more inclusive, expressive, and kind; and how to build empathy are just some of the challenges that are heightened by a remote environment.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/guides/agile/remote-tips-facillitation/&#34;&gt;Easing facilitation&lt;/a&gt; – From setting team working agreements and ground rules to keeping participants engaged and included to making the best use of your tools, good facilitation is key to remote working success.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/guides/agile/remote-tips-physical-space/&#34;&gt;Leveraging physical space&lt;/a&gt; – How important is physical space in an all-remote working environment? More important than ever before, it turns out, which is why we offer a gallery of practitioner setups for inspiration.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/guides/agile/remote-tips-remote-is-exhausting/&#34;&gt;Battling fatigue&lt;/a&gt; – Working remotely is exhausting. We suggest ways that you can create a stimulating and inspiring work environment, complete with ways to look after yourself (and others), including by setting routines.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/guides/agile/remote-tips-tools-and-tips/&#34;&gt;Using the tools&lt;/a&gt; – Whether you’re still agreeing on the tool stack or helping your customers get up to speed on Zoom, as we’ve learned firsthand, the tools you and your team use have never had such a big impact.&lt;/p&gt;
&lt;h2 id=&#34;a-word-on-our-process&#34;&gt;A word on our process&lt;/h2&gt;
&lt;p&gt;At VMware Tanzu Labs, we &lt;a href=&#34;https://tanzu.vmware.com/app-development&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;practice what we preach&lt;/a&gt;. To create these tips, we assigned a balanced team—which consisted of a product manager, a designer, and an engineer—to run user research and identify current best practices along with problems and pain points. And as with every project, there were plenty of stakeholders involved. Our team collaborated with our colleagues in Services Strategy, Marketing, and Legal, to name just a few. These tips are as much theirs as they are ours—and now, yours.&lt;/p&gt;
&lt;p&gt;Indeed, we have been using and improving on these remote tips internally, but we also recognize that the challenges we’ve faced are hardly unique. And so we wanted to share them with a wider audience. We’re confident that you’ll find something that makes your own remote working life—and that of your team—a little easier.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      
      <title>Guides: Remote Tips: Building Relationships</title>
      
      <link>/guides/agile/remote-tips-building-relationships/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/guides/agile/remote-tips-building-relationships/</guid>
      <description>

        
        &lt;h2 id=&#34;socializing&#34;&gt;Socializing&lt;/h2&gt;
&lt;h4 id=&#34;here-are-a-few-ways-your-team-can-make-remote-work-fun&#34;&gt;Here are a few ways your team can make remote work fun:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Create virtual water cooler Zoom rooms and Slack channels with specific themes (e.g., favorite movie, last night&amp;rsquo;s dinner, #baking, #bad-jokes, etc.).&lt;/li&gt;
&lt;li&gt;⏱ Set 10 minutes of casual catch-up time at the start of meetings.&lt;/li&gt;
&lt;li&gt;🍩 Have a team donut chat (randomized 1:1s).&lt;/li&gt;
&lt;li&gt;🥅 Plan team activities based on personal goals and needs.&lt;/li&gt;
&lt;li&gt;Play with Snap Camera to have a little fun on video calls with Snapchat style filters.&lt;/li&gt;
&lt;li&gt;Agree on a daily team theme, like featuring objects in video calls, dress up, etc. (e.g., “yellow,” “hats,” “animals,” “‘90s movies,” “black tie”).&lt;/li&gt;
&lt;li&gt;Always start with a fun energizer 😀 to brighten the day.&lt;/li&gt;
&lt;li&gt;Point your camera out the window.&lt;/li&gt;
&lt;li&gt;Do a desk show and tell.&lt;/li&gt;
&lt;li&gt;Make all social activities optional.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;here-are-remote-first-ways-for-team-building&#34;&gt;Here are remote-first ways for team building:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;☕️ Take 1:1 social/coffee breaks.&lt;/li&gt;
&lt;li&gt;Have an expensed remote lunch/dinner together.&lt;/li&gt;
&lt;li&gt;Set up regular, weekly social hours to chat, talk about usual things like sports, kids, vacations, hobbies, books, movies, etc.&lt;/li&gt;
&lt;li&gt;Play “Two Truths and a Lie.”&lt;/li&gt;
&lt;li&gt;Do silly quizzes as a team (e.g., “What Star Wars character are you?”).&lt;/li&gt;
&lt;li&gt;Try a cooking/fermenting/brewing club.&lt;/li&gt;
&lt;li&gt;Play free and instant-play team games during breaks:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.webliero.com/&#34;&gt;https://www.webliero.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dominion.games/&#34;&gt;https://dominion.games/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codenames.game/&#34;&gt;https://codenames.game/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.spyfall.app/&#34;&gt;http://www.spyfall.app/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://skribbl.io/&#34;&gt;http://skribbl.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://houseparty.com/&#34;&gt;https://houseparty.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;building-empathy&#34;&gt;Building empathy&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Try user manuals:
&lt;ul&gt;
&lt;li&gt;Each team member creates their own user manual that outlines hours they prefer to work, how they prefer to communicate, what their personal interests are, etc.&lt;/li&gt;
&lt;li&gt;Share and compare all the user manuals to find common ground, areas of difference, and actions to ensure effective collaboration and strong relationships.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Take and share results of &lt;a href=&#34;https://www.16personalities.com/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;personality tests&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use gallery view in video calls.&lt;/li&gt;
&lt;li&gt;Encourage always-on video, but make it optional; remember, in a remote setting, it&amp;rsquo;s OK to look away!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;creating-virtual-spaces&#34;&gt;Creating virtual spaces&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Set up dedicated meeting rooms for all meetings: IPM, retro, etc.&lt;/li&gt;
&lt;li&gt;Set up dedicated meeting rooms for pairs (e.g., team-name-pair-1, team-name-pair-2, team-name-pms, etc.).&lt;/li&gt;
&lt;li&gt;Set up personal meeting rooms so somebody can quickly talk to you even if you’re soloing.&lt;/li&gt;
&lt;li&gt;Set up a Trello or Miro board where people can drag pictures of themselves and link to the room they’re in, so people who want to talk to you can find where you are, and jump into your Zoom just like they could walk over and talk to you.&lt;/li&gt;
&lt;li&gt;Set up a shared calendar/social calendar.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;being-kinder-more-inclusive-and-expressive&#34;&gt;Being kinder, more inclusive, and expressive&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It costs nothing to be kind, even if you don&amp;rsquo;t believe someone deserves it.&lt;/li&gt;
&lt;li&gt;Sharing praise creates a climate where feedback is viewed as a gift rather than an attack—say thanks!&lt;/li&gt;
&lt;li&gt;👩🏻‍🏫 Use emoji or emoticons when chatting—they can be more inclusive when English isn’t the first language, and help convey tone, emphasis and emotion.&lt;/li&gt;
&lt;li&gt;No egos! Don&amp;rsquo;t defend a point to win an argument or double-down on a mistake.&lt;/li&gt;
&lt;li&gt;Assume positive intent. If a message feels like a slight, assume positive intent while asking for clarification.&lt;/li&gt;
&lt;li&gt;Make the effort to get to know each other; building rapport enables trust.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s impossible to know everything; you can&amp;rsquo;t know how your words are interpreted without asking.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;checking-in&#34;&gt;Checking in&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Schedule regular virtual coffee chats and happy hours.&lt;/li&gt;
&lt;li&gt;Schedule 1:1s with team members.&lt;/li&gt;
&lt;li&gt;Emphasize weekly retros as a way to continuously improve the way you work and get to know each other better.&lt;/li&gt;
&lt;li&gt;Conduct monthly team health checks to focus on and track team happiness and productivity.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Guides: Remote Tips: Facilitation</title>
      
      <link>/guides/agile/remote-tips-facillitation/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/guides/agile/remote-tips-facillitation/</guid>
      <description>

        
        &lt;h2 id=&#34;setting-team-working-agreements-and-ground-rules&#34;&gt;Setting team working agreements and ground rules&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Agree on tools that everyone has access to.&lt;/li&gt;
&lt;li&gt;Agree on how you will communicate, interact, and make decisions. This can be based on user manuals created by each team member:
&lt;ul&gt;
&lt;li&gt;Chat tools are used for _________ .&lt;/li&gt;
&lt;li&gt;Email is used for ___________ .&lt;/li&gt;
&lt;li&gt;I tap someone on the shoulder by doing _________.&lt;/li&gt;
&lt;li&gt;Standup is for _________ .&lt;/li&gt;
&lt;li&gt;Stand-down is for ____________.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clearly set the agenda, desired outcomes and a timebox for each session.&lt;/li&gt;
&lt;li&gt;Agree on hand gestures during video calls.&lt;/li&gt;
&lt;li&gt;Maintain a team decision log.&lt;/li&gt;
&lt;li&gt;Maintain a team TODO list or Kanban (e.g., on Miro or Trello).&lt;/li&gt;
&lt;li&gt;Make the agenda visible to everyone for each session.&lt;/li&gt;
&lt;li&gt;Use a speaking timer.&lt;/li&gt;
&lt;li&gt;Agree on how feedback will be shared after each activity.&lt;/li&gt;
&lt;li&gt;Set aside time before group activities for team members to reflect on their goals for the session.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;preparing-in-advance&#34;&gt;Preparing in advance&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Prepare a digital whiteboard with the activities that you want to run.&lt;/li&gt;
&lt;li&gt;Keep prompts visible alongside your remote templates.&lt;/li&gt;
&lt;li&gt;Practice walking through the session beforehand.&lt;/li&gt;
&lt;li&gt;Add facilitator notes to slides and whiteboards.&lt;/li&gt;
&lt;li&gt;Agree on who will facilitate.&lt;/li&gt;
&lt;li&gt;Agree on who will co-facilitate to help respond to participants’ body language.&lt;/li&gt;
&lt;li&gt;Allocate more time for remote activities.&lt;/li&gt;
&lt;li&gt;Turn off your desktop notifications!&lt;/li&gt;
&lt;li&gt;Set up breakout rooms in advance, if possible.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;keeping-participants-engaged-and-included&#34;&gt;Keeping participants engaged and included&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Instead of waiting for people to speak up, try prompting: &amp;ldquo;What are your thoughts, Abbie?&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Use attendees’ names to keep their attention.&lt;/li&gt;
&lt;li&gt;Use a round-robin format to encourage everyone to speak.&lt;/li&gt;
&lt;li&gt;Encourage everyone to use Gallery View on video calls.&lt;/li&gt;
&lt;li&gt;Use apps (e.g., &lt;a href=&#34;https://krisp.ai/&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Krisp&lt;/a&gt;) to reduce background noise instead of muting yourself.&lt;/li&gt;
&lt;li&gt;Repeat yourself as distracted folks may not be fully following your narrative.&lt;/li&gt;
&lt;li&gt;Use attention-grabbing phrases like “So in summary,” “Now this part is important,” etc.&lt;/li&gt;
&lt;li&gt;Have more than one speaker to mix it up.&lt;/li&gt;
&lt;li&gt;Use your camera and visuals.&lt;/li&gt;
&lt;li&gt;Look at the camera and arrange your screen so that the speaker window is very close to the camera.&lt;/li&gt;
&lt;li&gt;Keep your energy and excitement up.&lt;/li&gt;
&lt;li&gt;Speak a bit slower than your usual pace in case of lag.&lt;/li&gt;
&lt;li&gt;Light your face.&lt;/li&gt;
&lt;li&gt;Clean up your desktop, tabs, downloads folder, etc., to avoid distracting people.&lt;/li&gt;
&lt;li&gt;Move your mouse slowly and deliberately.&lt;/li&gt;
&lt;li&gt;Ask people if they can see something specific on your screen.&lt;/li&gt;
&lt;li&gt;Explain/demonstrate where your cursor is or what you want people to focus on.&lt;/li&gt;
&lt;li&gt;Make windows full screen, enlarge your text, or zoom in.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;making-use-of-the-tools&#34;&gt;Making use of the tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Always keep video on.&lt;/li&gt;
&lt;li&gt;Interact in real time (e.g., Miro, Screen, Tuple, etc.).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;using-dual-monitors&#34;&gt;Using dual monitors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Duplicate the view: Use one screen to participate, and one to get a full view of the digital whiteboard and observe team activities.&lt;/li&gt;
&lt;li&gt;View teammates on another screen while facilitating team activities to monitor for body language, sign language and other visual cues.&lt;/li&gt;
&lt;li&gt;Use a separate screen for side-channel communication with other facilitators.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;other-remote-facilitation-resources&#34;&gt;Other remote facilitation resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/content/practitioners-blog/5-tips-for-effective-remote-pair-programming-while-working-from-home&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;5 tips for effective remote pair programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/content/resources-for-remote-software-teams/how-to-conduct-a-remote-event-storming-session&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;How to conduct a remote event storming session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tanzu.vmware.com/content/resources-for-remote-software-teams&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;VMware Tanzu Blog | Resources for Remote Software Teams&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      
      <title>Guides: Remote Tips: Physical Space</title>
      
      <link>/guides/agile/remote-tips-physical-space/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/guides/agile/remote-tips-physical-space/</guid>
      <description>

        
        &lt;p&gt;On this page, you’ll find examples of some VMware employees’ setups within their home in order to give you insight and inspiration on how to set up your own physical space. In addition to these examples, you’ll find a quick interview with each practitioner about how and why they set up their space this way.&lt;/p&gt;
&lt;h2 id=&#34;setup-examples&#34;&gt;Setup examples&lt;/h2&gt;
&lt;h3 id=&#34;alex-sherman-product-manager-atlanta&#34;&gt;Alex Sherman (Product Manager, Atlanta)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/agile/remote-physical-space/alex-sherman.jpg&#34; alt=&#34;Alex Sherman (Product Manager, Atlanta)&#34;  /&gt;&lt;/p&gt;
&lt;h5 id=&#34;how-comfortable-are-you-within-your-home-physical-space&#34;&gt;How comfortable are you within your home physical space?&lt;/h5&gt;
&lt;p&gt;I’m very comfortable with my setup. I love it! I still switch it up by working a little bit in our dining room and then making my way up to my area upstairs. It’s hard to be in a single room all day!&lt;/p&gt;
&lt;h5 id=&#34;what-are-your-favorite-items-and-why&#34;&gt;What are your favorite items and why?&lt;/h5&gt;
&lt;p&gt;I’m enjoying my standup desk and balance board more than I thought I would. I feel like I’m able to focus a bit more by standing. I still take sitting breaks often. Having a second monitor is helpful as well.&lt;/p&gt;
&lt;h5 id=&#34;are-there-particular-elements-that-stimulate-your-creativity&#34;&gt;Are there particular elements that stimulate your creativity?&lt;/h5&gt;
&lt;p&gt;Yes! Having my old skateboard decks up in front of me give me something else to focus on outside of my screen. I love looking off into the different stickers, designs, and scratches that make up the decks.&lt;/p&gt;
&lt;h5 id=&#34;are-there-constraints-you-have-and-had-to-work-around&#34;&gt;Are there constraints you have and had to work around?&lt;/h5&gt;
&lt;p&gt;The only thing I feel restricted on is the impromptu conversations with coworkers. Yes, I’m able to get on a Zoom last minute with our team or Zoom bomb some engineers pairing, but it just feels like everything has to be scheduled. Physically I have everything I feel like I need except for the daily provided breakfasts.&lt;/p&gt;
&lt;h3 id=&#34;anneliese-fish-designer-washington&#34;&gt;Anneliese Fish (Designer, Washington)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/agile/remote-physical-space/anneliese-fish.jpg&#34; alt=&#34;Anneliese Fish (Designer, Washington)&#34;  /&gt;&lt;/p&gt;
&lt;h5 id=&#34;how-comfortable-are-you-within-your-home-physical-space-1&#34;&gt;How comfortable are you within your home physical space?&lt;/h5&gt;
&lt;p&gt;I am quite comfortable—in fact, I am exponentially more comfortable now that I have an office (room). I can close the door for privacy and sound reduction. Also, I decorated the entire space in a way that is conducive to me and brings me peace and inspiration.&lt;/p&gt;
&lt;h5 id=&#34;what-are-your-favorite-items-and-why-1&#34;&gt;What are your favorite items and why?&lt;/h5&gt;
&lt;p&gt;My favorite items are my pivot chair and standing desk. They help me feel awake and supported, while helping me remember to sit up straight. A close runner up is the nearby cat furniture, for pets and peace to help get through the day.&lt;/p&gt;
&lt;h5 id=&#34;are-there-particular-elements-that-stimulate-your-creativity-1&#34;&gt;Are there particular elements that stimulate your creativity?&lt;/h5&gt;
&lt;p&gt;The Kanban board on my wall helps me focus. The absence of clutter works the same way. Clean, clear and focused boosts my ability to focus on tasks. Also the chair in the corner is a good spot for me to take a break and read to promote continuous learning.&lt;/p&gt;
&lt;h5 id=&#34;are-there-constraints-you-have-and-had-to-work-around-1&#34;&gt;Are there constraints you have and had to work around?&lt;/h5&gt;
&lt;p&gt;Previously I was working out of the bedroom and my partner had a desk in the living room. This was challenging as my coworkers could hear her talking on a call and so I became conscious about not being on mute, which I think affected my productivity slightly. I was tempted to stay in bed during the day, but found a way to put my work “to bed” on weekends by stowing away all my gear in a backpack.&lt;/p&gt;
&lt;h3 id=&#34;scott-windsor-engineer-seattle&#34;&gt;Scott Windsor (Engineer, Seattle)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/agile/remote-physical-space/scott-windsor.jpg&#34; alt=&#34;Scott Windsor (Engineer, Seattle)&#34;  /&gt;&lt;/p&gt;
&lt;h5 id=&#34;how-comfortable-are-you-within-your-home-physical-space-2&#34;&gt;How comfortable are you within your home physical space?&lt;/h5&gt;
&lt;p&gt;I’m fairly comfortable at home. I have a good, big desk with lots of space, headset, comfortable chair, and my ergonomic keyboard (I also have an ergo keyboard at work, so not that different).&lt;/p&gt;
&lt;h5 id=&#34;what-are-your-favorite-items-and-why-2&#34;&gt;What are your favorite items and why?&lt;/h5&gt;
&lt;p&gt;Probably the keyboard (it’s one of many that I’ve made).&lt;/p&gt;
&lt;h5 id=&#34;are-there-particular-elements-that-stimulate-your-creativity-2&#34;&gt;Are there particular elements that stimulate your creativity?&lt;/h5&gt;
&lt;p&gt;I like having a bookcase close by with tech books for reference. We just added that. I also have a lot of figures/toys but that’s just normal for the house.&lt;/p&gt;
&lt;h5 id=&#34;are-there-constraints-you-have-and-had-to-work-around-2&#34;&gt;Are there constraints you have and had to work around?&lt;/h5&gt;
&lt;p&gt;I think the big one is my wife getting used to me talking at home all day while pairing. Noise canceling headphones has been important for her to be able to work again.&lt;/p&gt;
&lt;h2 id=&#34;gallery&#34;&gt;Gallery&lt;/h2&gt;
&lt;h4 id=&#34;gereon-buschmann-product-manager-munich&#34;&gt;Gereon Buschmann (Product Manager, Munich)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/agile/remote-physical-space/gereon-buschmann.jpg&#34; alt=&#34;Gereon Buschmann (Product Manager, Munich)&#34;  /&gt;&lt;/p&gt;
&lt;h4 id=&#34;florent-biville-engineer-franceremote&#34;&gt;Florent Biville (Engineer, France/Remote)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/agile/remote-physical-space/florent-biville.jpg&#34; alt=&#34;Florent Biville (Engineer, France/Remote)
&#34;  /&gt;&lt;/p&gt;
&lt;h4 id=&#34;hayk-galystan-engineer-yerevan&#34;&gt;Hayk Galystan (Engineer, Yerevan)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/agile/remote-physical-space/hayk-galystan.jpg&#34; alt=&#34;Hayk Galystan (Engineer, Yerevan)&#34;  /&gt;&lt;/p&gt;
&lt;h4 id=&#34;red-dolan-designer-portland&#34;&gt;Red Dolan (Designer, Portland)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/agile/remote-physical-space/red-dolan.jpg&#34; alt=&#34;Red Dolan (Designer, Portland)&#34;  /&gt;&lt;/p&gt;
&lt;h4 id=&#34;peter-tran-engineer-toronto&#34;&gt;Peter Tran (Engineer, Toronto)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/agile/remote-physical-space/peter-tran.jpg&#34; alt=&#34;Peter Tran (Engineer, Toronto)&#34;  /&gt;&lt;/p&gt;
&lt;h4 id=&#34;nana-asiedu-ampem-engineer-london&#34;&gt;Nana Asiedu-Ampem (Engineer, London)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/agile/remote-physical-space/nana-asiedu.jpg&#34; alt=&#34;Nana Asiedu-Ampem (Engineer, London)&#34;  /&gt;&lt;/p&gt;
&lt;h4 id=&#34;bill-glover-platform-architect-london&#34;&gt;Bill Glover (Platform Architect, London)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/agile/remote-physical-space/bill-glover.jpg&#34; alt=&#34;Bill Glover (Platform Architect, London)&#34;  /&gt;&lt;/p&gt;
&lt;h4 id=&#34;janet-amaro-product-desgber-palo-alto&#34;&gt;Janet Amaro (Product Desgber, Palo Alto)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/agile/remote-physical-space/janet-amaro.jpg&#34; alt=&#34;Janet Amaro (Product Desgber, Palo Alto)&#34;  /&gt;&lt;/p&gt;
&lt;h4 id=&#34;jonathan-sharpe-engineering-manager-london&#34;&gt;Jonathan Sharpe (Engineering Manager, London)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/agile/remote-physical-space/jonathan-sharpe.jpg&#34; alt=&#34;Jonathan Sharpe (Engineering Manager, London)&#34;  /&gt;&lt;/p&gt;
&lt;h4 id=&#34;ryan-hall-engineer-remote-usa&#34;&gt;Ryan Hall (Engineer, Remote USA)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;/images/guides/agile/remote-physical-space/ryan-hall.jpg&#34; alt=&#34;Ryan Hall (Engineer, Remote USA)&#34;  /&gt;&lt;/p&gt;
&lt;script&gt;
    $(document).ready(function () {
        // Take all images in the &#34;remote-physical-space&#34;, and wrap them in
        // an &lt;a&gt; tag with appropriate attributes.
        // We do this instead of using HTML in the .md file because:
        // 1. It keeps the .md file nice and understandable
        // 2. The src of markdown images may be modified by Hugo at build time.
        //    Therefore, it should be used as a source of truth for paths, rather
        //    than hardcoding path in some HTML.
        $(&#39;img&#39;)
            .filter(function(_, element) {
                return $(element).attr(&#39;src&#39;).indexOf(&#39;remote-physical-space&#39;) !== -1;
            })
            .wrap(function() {
                var element = $(this);
                var src = element.attr(&#39;src&#39;);
                var title = element.attr(&#39;alt&#39;);

                return $(&#39;&lt;a&gt;&lt;/a&gt;&#39;)
                    .attr(&#39;href&#39;, src)
                    .attr(&#39;title&#39;, title)
                    .attr(&#39;rel&#39;, &#39;gallery&#39;);
            });

        // Make all those &#34;&lt;a&gt;&#34; tags part of a lightbox gallery
        $(&#34;a[rel=&#39;gallery&#39;]&#34;).fancybox();
    });

&lt;/script&gt;&lt;blockquote&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      
      <title>Guides: Remote Tips: Tools and Tips</title>
      
      <link>/guides/agile/remote-tips-tools-and-tips/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/guides/agile/remote-tips-tools-and-tips/</guid>
      <description>

        
        &lt;h2 id=&#34;agreeing-on-the-tool-stack&#34;&gt;Agreeing on the tool stack&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Try to minimize your tool stack!&lt;/li&gt;
&lt;li&gt;Agree with your team on which tools you’ll use for certain tasks:
&lt;ul&gt;
&lt;li&gt;Conversations via video/audio&lt;/li&gt;
&lt;li&gt;Collaborate/ideate/whiteboard&lt;/li&gt;
&lt;li&gt;Messaging/chat&lt;/li&gt;
&lt;li&gt;Pair programming&lt;/li&gt;
&lt;li&gt;Scheduling and recording events&lt;/li&gt;
&lt;li&gt;Retros&lt;/li&gt;
&lt;li&gt;Sharing documents&lt;/li&gt;
&lt;li&gt;Product backlog&lt;/li&gt;
&lt;li&gt;Team TODOs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Check out the &lt;a href=&#34;https://remote.com/tools&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Best Tools for Remote Work&lt;/a&gt; for tooling ideas.&lt;/li&gt;
&lt;li&gt;When working with other teams (e.g., clients, collaborators) understand their tooling limitations and find the best alternatives you can.&lt;/li&gt;
&lt;li&gt;Ensure everyone knows how to use the chosen tools before the project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;learning-miro&#34;&gt;Learning Miro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://help.miro.com/hc/en-us/articles/360018109574-Work-Smarter-not-Harder&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34;&gt;Work smarter, not harder&lt;/a&gt; (Miro blog).&lt;/li&gt;
&lt;li&gt;Structure sections in the board from left to right.&lt;/li&gt;
&lt;li&gt;Add running communications and updates at the top of the board.&lt;/li&gt;
&lt;li&gt;Lock things that you don’t want to be moved before the session! Select immovable items and click the padlock icon in the context menu.&lt;/li&gt;
&lt;li&gt;Use standard S / M / L sticky note sizes to keep sizing consistent; select a sticky note to see the size option alongside the color.&lt;/li&gt;
&lt;li&gt;Voting can be done using emojis, colored circles, or with the Miro Vote feature.&lt;/li&gt;
&lt;li&gt;Use large, brightly colored headings as waypoints to help people navigate the board.&lt;/li&gt;
&lt;li&gt;Use the ‘Bring everyone to me’ feature to gather participants around your cursor - click your avatar in the top right.&lt;/li&gt;
&lt;li&gt;Put content inside frames, and give frames useful names; use the frames tab to quickly overview and navigate the board by clicking the frames button in the bottom-left corner menu.&lt;/li&gt;
&lt;li&gt;Low-fi visuals in Miro can encourage participation; if it’s too polished people can feel intimidated.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;using-miro-templates&#34;&gt;Using Miro templates&lt;/h2&gt;
&lt;p&gt;We can save each other time if we create templates on Miro and share them with everyone.&lt;/p&gt;
&lt;h4 id=&#34;ℹ-creating-your-own-miro-templates-and-sharing-with-others&#34;&gt;ℹ️ Creating your own Miro templates and sharing with others&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Create your template content on your own Miro board; this board must be created under the team you want to share it with.&lt;/li&gt;
&lt;li&gt;Click and drag over your content to select it.&lt;/li&gt;
&lt;li&gt;Click the 3-dot button on the right side of the tooltip context menu that appears, and select “Save as template”.&lt;/li&gt;
&lt;li&gt;Give your template a useful name that will be easy for others to search for.&lt;/li&gt;
&lt;li&gt;(Optional) Add a helpful description.&lt;/li&gt;
&lt;li&gt;(Optional) Click “Select the preview area” to set a thumbnail that others will see while searching for the template.&lt;/li&gt;
&lt;li&gt;The sharing option will be “Personal” by default; select “Shared with the team”.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;ℹ-using-miro-templates-created-by-others&#34;&gt;ℹ️ Using Miro templates created by others&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Create a new Miro board in your team space (this is important).&lt;/li&gt;
&lt;li&gt;Click on the templates icon on the left side of the board.&lt;/li&gt;
&lt;li&gt;Search for the template you need. If you want to see the &amp;ldquo;Introduction to Miro&amp;rdquo; template, for example, type “Introduction to Miro&amp;quot; into the search bar and click on it to add it to your board.&lt;/li&gt;
&lt;li&gt;If you need to, you can customize the template that appears. This will not affect the original template for everyone else.&lt;/li&gt;
&lt;li&gt;To share the board with your team and other collaborators use the Share button in the top-right of the screen.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;learning-zoom&#34;&gt;Learning Zoom&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Create easy-to-remember bit.ly links for Zoom rooms.&lt;/li&gt;
&lt;li&gt;In the participants window, you will see options to:
&lt;ul&gt;
&lt;li&gt;Raise hand&lt;/li&gt;
&lt;li&gt;Reply “yes” or “no”&lt;/li&gt;
&lt;li&gt;Request to go slower or faster&lt;/li&gt;
&lt;li&gt;Thumbs up/down&lt;/li&gt;
&lt;li&gt;Clap&lt;/li&gt;
&lt;li&gt;Request a break&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Practice features with other facilitators or close team members first.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;breakout-rooms&#34;&gt;Breakout Rooms&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Make sure a facilitator is present in each breakout room to guide conversations, or otherwise leave time for a single facilitator to visit each break out room to guide and do time checks.&lt;/li&gt;
&lt;li&gt;Spend the time to set up breakout rooms before or during the session; people may need to be manually assigned to rooms; a co-facilitator helps!&lt;/li&gt;
&lt;li&gt;When the time is up, everyone will be automatically kicked back to the main room - this can be an abrupt and jarring experience; advise participants how long you will break out for, and for how long an extension could be, if needed (e.g., 10 minutes, with the possibility of an extra 2 minutes).&lt;/li&gt;
&lt;li&gt;Zoom will automatically maintain breakout rooms with the same participants in a single session - it helps to break into the same groups to maintain the rapport.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
